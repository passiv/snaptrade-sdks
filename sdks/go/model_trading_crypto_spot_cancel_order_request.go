/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// TradingCryptoSpotCancelOrderRequest struct for TradingCryptoSpotCancelOrderRequest
type TradingCryptoSpotCancelOrderRequest struct {
	// Order ID returned by brokerage. This is the unique identifier for the order in the brokerage system.
	BrokerageOrderId string `json:"brokerage_order_id"`
}

// NewTradingCryptoSpotCancelOrderRequest instantiates a new TradingCryptoSpotCancelOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradingCryptoSpotCancelOrderRequest(brokerageOrderId string) *TradingCryptoSpotCancelOrderRequest {
	this := TradingCryptoSpotCancelOrderRequest{}
	this.BrokerageOrderId = brokerageOrderId
	return &this
}

// NewTradingCryptoSpotCancelOrderRequestWithDefaults instantiates a new TradingCryptoSpotCancelOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradingCryptoSpotCancelOrderRequestWithDefaults() *TradingCryptoSpotCancelOrderRequest {
	this := TradingCryptoSpotCancelOrderRequest{}
	return &this
}

// GetBrokerageOrderId returns the BrokerageOrderId field value
func (o *TradingCryptoSpotCancelOrderRequest) GetBrokerageOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrokerageOrderId
}

// GetBrokerageOrderIdOk returns a tuple with the BrokerageOrderId field value
// and a boolean to check if the value has been set.
func (o *TradingCryptoSpotCancelOrderRequest) GetBrokerageOrderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BrokerageOrderId, true
}

// SetBrokerageOrderId sets field value
func (o *TradingCryptoSpotCancelOrderRequest) SetBrokerageOrderId(v string) {
	o.BrokerageOrderId = v
}

func (o TradingCryptoSpotCancelOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["brokerage_order_id"] = o.BrokerageOrderId
	}
	return json.Marshal(toSerialize)
}

type NullableTradingCryptoSpotCancelOrderRequest struct {
	value *TradingCryptoSpotCancelOrderRequest
	isSet bool
}

func (v NullableTradingCryptoSpotCancelOrderRequest) Get() *TradingCryptoSpotCancelOrderRequest {
	return v.value
}

func (v *NullableTradingCryptoSpotCancelOrderRequest) Set(val *TradingCryptoSpotCancelOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTradingCryptoSpotCancelOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTradingCryptoSpotCancelOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradingCryptoSpotCancelOrderRequest(val *TradingCryptoSpotCancelOrderRequest) *NullableTradingCryptoSpotCancelOrderRequest {
	return &NullableTradingCryptoSpotCancelOrderRequest{value: val, isSet: true}
}

func (v NullableTradingCryptoSpotCancelOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradingCryptoSpotCancelOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


