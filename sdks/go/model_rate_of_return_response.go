/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// RateOfReturnResponse List of return rates with their timeframe
type RateOfReturnResponse struct {
	// List of return percentages
	Data []RateOfReturnObject `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RateOfReturnResponse RateOfReturnResponse

// NewRateOfReturnResponse instantiates a new RateOfReturnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateOfReturnResponse() *RateOfReturnResponse {
	this := RateOfReturnResponse{}
	return &this
}

// NewRateOfReturnResponseWithDefaults instantiates a new RateOfReturnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateOfReturnResponseWithDefaults() *RateOfReturnResponse {
	this := RateOfReturnResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RateOfReturnResponse) GetData() []RateOfReturnObject {
	if o == nil || isNil(o.Data) {
		var ret []RateOfReturnObject
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateOfReturnResponse) GetDataOk() ([]RateOfReturnObject, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RateOfReturnResponse) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []RateOfReturnObject and assigns it to the Data field.
func (o *RateOfReturnResponse) SetData(v []RateOfReturnObject) {
	o.Data = v
}

func (o RateOfReturnResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RateOfReturnResponse) UnmarshalJSON(bytes []byte) (err error) {
	varRateOfReturnResponse := _RateOfReturnResponse{}

	if err = json.Unmarshal(bytes, &varRateOfReturnResponse); err == nil {
		*o = RateOfReturnResponse(varRateOfReturnResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRateOfReturnResponse struct {
	value *RateOfReturnResponse
	isSet bool
}

func (v NullableRateOfReturnResponse) Get() *RateOfReturnResponse {
	return v.value
}

func (v *NullableRateOfReturnResponse) Set(val *RateOfReturnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRateOfReturnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRateOfReturnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateOfReturnResponse(val *RateOfReturnResponse) *NullableRateOfReturnResponse {
	return &NullableRateOfReturnResponse{value: val, isSet: true}
}

func (v NullableRateOfReturnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateOfReturnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


