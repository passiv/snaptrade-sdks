/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
	"time"
)

// RateOfReturnObject Individual rate of return object with return percent and timeframe
type RateOfReturnObject struct {
	// The timeframe this return percent is reflecting
	Timeframe *string `json:"timeframe,omitempty"`
	// The percent return of the portfolio, directly from the brokerage. 5.97 indicates a 5.97% return over the timeframe
	ReturnPercent *float32 `json:"return_percent,omitempty"`
	// The date this was fetched
	CreatedDate *time.Time `json:"created_date,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RateOfReturnObject RateOfReturnObject

// NewRateOfReturnObject instantiates a new RateOfReturnObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateOfReturnObject() *RateOfReturnObject {
	this := RateOfReturnObject{}
	return &this
}

// NewRateOfReturnObjectWithDefaults instantiates a new RateOfReturnObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateOfReturnObjectWithDefaults() *RateOfReturnObject {
	this := RateOfReturnObject{}
	return &this
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *RateOfReturnObject) GetTimeframe() string {
	if o == nil || isNil(o.Timeframe) {
		var ret string
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateOfReturnObject) GetTimeframeOk() (*string, bool) {
	if o == nil || isNil(o.Timeframe) {
    return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *RateOfReturnObject) HasTimeframe() bool {
	if o != nil && !isNil(o.Timeframe) {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given string and assigns it to the Timeframe field.
func (o *RateOfReturnObject) SetTimeframe(v string) {
	o.Timeframe = &v
}

// GetReturnPercent returns the ReturnPercent field value if set, zero value otherwise.
func (o *RateOfReturnObject) GetReturnPercent() float32 {
	if o == nil || isNil(o.ReturnPercent) {
		var ret float32
		return ret
	}
	return *o.ReturnPercent
}

// GetReturnPercentOk returns a tuple with the ReturnPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateOfReturnObject) GetReturnPercentOk() (*float32, bool) {
	if o == nil || isNil(o.ReturnPercent) {
    return nil, false
	}
	return o.ReturnPercent, true
}

// HasReturnPercent returns a boolean if a field has been set.
func (o *RateOfReturnObject) HasReturnPercent() bool {
	if o != nil && !isNil(o.ReturnPercent) {
		return true
	}

	return false
}

// SetReturnPercent gets a reference to the given float32 and assigns it to the ReturnPercent field.
func (o *RateOfReturnObject) SetReturnPercent(v float32) {
	o.ReturnPercent = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RateOfReturnObject) GetCreatedDate() time.Time {
	if o == nil || isNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateOfReturnObject) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedDate) {
    return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RateOfReturnObject) HasCreatedDate() bool {
	if o != nil && !isNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *RateOfReturnObject) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

func (o RateOfReturnObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Timeframe) {
		toSerialize["timeframe"] = o.Timeframe
	}
	if !isNil(o.ReturnPercent) {
		toSerialize["return_percent"] = o.ReturnPercent
	}
	if !isNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RateOfReturnObject) UnmarshalJSON(bytes []byte) (err error) {
	varRateOfReturnObject := _RateOfReturnObject{}

	if err = json.Unmarshal(bytes, &varRateOfReturnObject); err == nil {
		*o = RateOfReturnObject(varRateOfReturnObject)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "timeframe")
		delete(additionalProperties, "return_percent")
		delete(additionalProperties, "created_date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRateOfReturnObject struct {
	value *RateOfReturnObject
	isSet bool
}

func (v NullableRateOfReturnObject) Get() *RateOfReturnObject {
	return v.value
}

func (v *NullableRateOfReturnObject) Set(val *RateOfReturnObject) {
	v.value = val
	v.isSet = true
}

func (v NullableRateOfReturnObject) IsSet() bool {
	return v.isSet
}

func (v *NullableRateOfReturnObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateOfReturnObject(val *RateOfReturnObject) *NullableRateOfReturnObject {
	return &NullableRateOfReturnObject{value: val, isSet: true}
}

func (v NullableRateOfReturnObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateOfReturnObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


