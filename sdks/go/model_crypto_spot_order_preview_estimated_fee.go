/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// CryptoSpotOrderPreviewEstimatedFee The estimated order fee.
type CryptoSpotOrderPreviewEstimatedFee struct {
	// Symbol to identify a cryptocurrency or fiat currency on a crypto exchange. Fiat currencies symbols are ISO-4217 codes.
	Currency string `json:"currency"`
	Amount float64 `json:"amount"`
	AdditionalProperties map[string]interface{}
}

type _CryptoSpotOrderPreviewEstimatedFee CryptoSpotOrderPreviewEstimatedFee

// NewCryptoSpotOrderPreviewEstimatedFee instantiates a new CryptoSpotOrderPreviewEstimatedFee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptoSpotOrderPreviewEstimatedFee(currency string, amount float64) *CryptoSpotOrderPreviewEstimatedFee {
	this := CryptoSpotOrderPreviewEstimatedFee{}
	this.Currency = currency
	this.Amount = amount
	return &this
}

// NewCryptoSpotOrderPreviewEstimatedFeeWithDefaults instantiates a new CryptoSpotOrderPreviewEstimatedFee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptoSpotOrderPreviewEstimatedFeeWithDefaults() *CryptoSpotOrderPreviewEstimatedFee {
	this := CryptoSpotOrderPreviewEstimatedFee{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *CryptoSpotOrderPreviewEstimatedFee) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CryptoSpotOrderPreviewEstimatedFee) GetCurrencyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CryptoSpotOrderPreviewEstimatedFee) SetCurrency(v string) {
	o.Currency = v
}

// GetAmount returns the Amount field value
func (o *CryptoSpotOrderPreviewEstimatedFee) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CryptoSpotOrderPreviewEstimatedFee) GetAmountOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CryptoSpotOrderPreviewEstimatedFee) SetAmount(v float64) {
	o.Amount = v
}

func (o CryptoSpotOrderPreviewEstimatedFee) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["amount"] = o.Amount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CryptoSpotOrderPreviewEstimatedFee) UnmarshalJSON(bytes []byte) (err error) {
	varCryptoSpotOrderPreviewEstimatedFee := _CryptoSpotOrderPreviewEstimatedFee{}

	if err = json.Unmarshal(bytes, &varCryptoSpotOrderPreviewEstimatedFee); err == nil {
		*o = CryptoSpotOrderPreviewEstimatedFee(varCryptoSpotOrderPreviewEstimatedFee)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "currency")
		delete(additionalProperties, "amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCryptoSpotOrderPreviewEstimatedFee struct {
	value *CryptoSpotOrderPreviewEstimatedFee
	isSet bool
}

func (v NullableCryptoSpotOrderPreviewEstimatedFee) Get() *CryptoSpotOrderPreviewEstimatedFee {
	return v.value
}

func (v *NullableCryptoSpotOrderPreviewEstimatedFee) Set(val *CryptoSpotOrderPreviewEstimatedFee) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptoSpotOrderPreviewEstimatedFee) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptoSpotOrderPreviewEstimatedFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptoSpotOrderPreviewEstimatedFee(val *CryptoSpotOrderPreviewEstimatedFee) *NullableCryptoSpotOrderPreviewEstimatedFee {
	return &NullableCryptoSpotOrderPreviewEstimatedFee{value: val, isSet: true}
}

func (v NullableCryptoSpotOrderPreviewEstimatedFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptoSpotOrderPreviewEstimatedFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


