/*
SnapTrade

Connect brokerage accounts to your app for live positions and trading

API version: 1.0.0
Contact: api@snaptrade.com
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package snaptrade

import (
	"encoding/json"
)

// CancelOrderResponse struct for CancelOrderResponse
type CancelOrderResponse struct {
	// Order ID returned by brokerage. This is the unique identifier for the order in the brokerage system.
	BrokerageOrderId string `json:"brokerage_order_id"`
	// The raw response from the brokerage.
	RawResponse map[string]interface{} `json:"raw_response,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CancelOrderResponse CancelOrderResponse

// NewCancelOrderResponse instantiates a new CancelOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelOrderResponse(brokerageOrderId string) *CancelOrderResponse {
	this := CancelOrderResponse{}
	this.BrokerageOrderId = brokerageOrderId
	return &this
}

// NewCancelOrderResponseWithDefaults instantiates a new CancelOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelOrderResponseWithDefaults() *CancelOrderResponse {
	this := CancelOrderResponse{}
	return &this
}

// GetBrokerageOrderId returns the BrokerageOrderId field value
func (o *CancelOrderResponse) GetBrokerageOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrokerageOrderId
}

// GetBrokerageOrderIdOk returns a tuple with the BrokerageOrderId field value
// and a boolean to check if the value has been set.
func (o *CancelOrderResponse) GetBrokerageOrderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BrokerageOrderId, true
}

// SetBrokerageOrderId sets field value
func (o *CancelOrderResponse) SetBrokerageOrderId(v string) {
	o.BrokerageOrderId = v
}

// GetRawResponse returns the RawResponse field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancelOrderResponse) GetRawResponse() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.RawResponse
}

// GetRawResponseOk returns a tuple with the RawResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancelOrderResponse) GetRawResponseOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RawResponse) {
    return map[string]interface{}{}, false
	}
	return o.RawResponse, true
}

// HasRawResponse returns a boolean if a field has been set.
func (o *CancelOrderResponse) HasRawResponse() bool {
	if o != nil && isNil(o.RawResponse) {
		return true
	}

	return false
}

// SetRawResponse gets a reference to the given map[string]interface{} and assigns it to the RawResponse field.
func (o *CancelOrderResponse) SetRawResponse(v map[string]interface{}) {
	o.RawResponse = v
}

func (o CancelOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["brokerage_order_id"] = o.BrokerageOrderId
	}
	if o.RawResponse != nil {
		toSerialize["raw_response"] = o.RawResponse
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CancelOrderResponse) UnmarshalJSON(bytes []byte) (err error) {
	varCancelOrderResponse := _CancelOrderResponse{}

	if err = json.Unmarshal(bytes, &varCancelOrderResponse); err == nil {
		*o = CancelOrderResponse(varCancelOrderResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "brokerage_order_id")
		delete(additionalProperties, "raw_response")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCancelOrderResponse struct {
	value *CancelOrderResponse
	isSet bool
}

func (v NullableCancelOrderResponse) Get() *CancelOrderResponse {
	return v.value
}

func (v *NullableCancelOrderResponse) Set(val *CancelOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelOrderResponse(val *CancelOrderResponse) *NullableCancelOrderResponse {
	return &NullableCancelOrderResponse{value: val, isSet: true}
}

func (v NullableCancelOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


