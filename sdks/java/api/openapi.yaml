openapi: 3.0.0
info:
  contact:
    email: api@snaptrade.com
    name: SnapTrade
    url: https://snaptrade.com/
  description: Connect brokerage accounts to your app for live positions and trading
  termsOfService: N/A
  title: SnapTrade
  version: 1.0.0
  x-konfig-ignore:
    potential-incorrect-type: true
  x-readme:
    explorer-enabled: false
servers:
- description: SnapTrade Production API
  url: https://api.snaptrade.com/api/v1
security:
- PartnerSignature: []
  PartnerClientId: []
  PartnerTimestamp: []
tags:
- description: Check whether the API is operational and verify timestamps.
  name: API Status
- description: Register and authenticate users with SnapTrade.
  name: Authentication
- description: Retrieve and manage user connections.
  name: Connections
- description: "Retrieve account information, such as positions, balances, etc."
  name: Account Information
- description: Endpoints to search for options prices and chains as well as place
    options trades if supported.
  name: Options
- description: "Retrieve information on account transactions, performance, dividends,\
    \ contributions, etc."
  name: Transactions And Reporting
- description: Manage orders on user accounts.
  name: Trading
- description: "Retrieve basic information for API use, such as supported brokerages,\
    \ exchanges, currencies, etc."
  name: Reference Data
paths:
  /:
    get:
      description: Check whether the API is operational and verify timestamps.
      operationId: ApiStatus_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        default:
          description: Unexpected Error
      security: []
      summary: Get API Status
      tags:
      - API Status
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--
      x-accepts: application/json
  /snapTrade/registerUser:
    post:
      description: |
        Registers a new SnapTrade user under your Client ID. A user secret will be automatically generated for you and must be properly stored in your system.
        Most SnapTrade operations require a user ID and user secret to be passed in as parameters.
      operationId: Authentication_registerSnapTradeUser
      requestBody:
        $ref: '#/components/requestBodies/RegisterUserRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDandSecret'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected Error
          x-do-not-generate: true
      summary: Register user
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--snapTrade-registerUser
      x-content-type: application/json
      x-accepts: application/json
  /snapTrade/login:
    post:
      description: |
        Authenticates a SnapTrade user and returns the Connection Portal URL used for connecting brokerage accounts. Please check [this guide](/docs/implement-connection-portal) for how to integrate the Connection Portal into your app.

        Please note that the returned URL expires in 5 minutes.
      operationId: Authentication_loginSnapTradeUser
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      requestBody:
        $ref: '#/components/requestBodies/SnapTradeLoginUserRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Generate Connection Portal URL
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--snapTrade-login
      x-content-type: application/json
      x-accepts: application/json
  /snapTrade/listUsers:
    get:
      description: Returns a list of all registered user IDs. Please note that the
        response is not currently paginated.
      operationId: Authentication_listSnapTradeUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected Error
          x-do-not-generate: true
      summary: List all users
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--snapTrade-listUsers
      x-accepts: application/json
  /snapTrade/deleteUser:
    delete:
      description: "Deletes a registered user and all associated data. This action\
        \ is irreversible. This API is asynchronous and will return a 200 status code\
        \ if the request is accepted. The user and all associated data will be queued\
        \ for deletion. Once deleted, a `USER_DELETED` webhook will be sent."
      operationId: Authentication_deleteSnapTradeUser
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: Forbidden
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Delete user
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--snapTrade-deleteUser
      x-accepts: application/json
  /snapTrade/resetUserSecret:
    post:
      description: |
        Rotates the secret for a SnapTrade user. You might use this if `userSecret` is compromised. Please note that if you call this endpoint and fail to save the new secret, you'll no longer be able to access any data for this user, and your only option will be to delete and recreate the user, then ask them to reconnect.
      operationId: Authentication_resetSnapTradeUserSecret
      requestBody:
        $ref: '#/components/requestBodies/ResetUserSecretRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIDandSecret'
          description: New user secret is generated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request. Could be caused by various reasons. Error message
            is provided in response
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401FailedRequestResponse'
          description: "Failed authentication. Wrong clientId, userId or userSecret\
            \ provided"
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Rotate user secret
      tags:
      - Authentication
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--snapTrade-resetUserSecret
      x-content-type: application/json
      x-accepts: application/json
  /authorizations/{authorizationId}/returnRates:
    get:
      description: |
        Returns a list of rate of return percents for a given connection. Will include timeframes available from the brokerage, for example "ALL", "1Y", "6M", "3M", "1M"
      operationId: Connections_returnRates
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          $ref: '#/components/schemas/BrokerageAuthID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateOfReturnResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FeatureNotEnabledResponse'
          description: Forbidden
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: List connection rate of returns
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId-returnRates
      x-accepts: application/json
  /authorizations:
    get:
      description: |
        Returns a list of all connections for the specified user. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.

        A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.

        SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.
      operationId: Connections_listBrokerageAuthorizations
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: A list of all connections for the specified user.
                items:
                  $ref: '#/components/schemas/BrokerageAuthorization'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected error.
      summary: List all connections
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorizations
      x-accepts: application/json
  /authorizations/{authorizationId}:
    delete:
      description: "Deletes the connection specified by the ID. This will also delete\
        \ all accounts and holdings associated with the connection. This action is\
        \ irreversible. This endpoint is synchronous, a 204 response indicates that\
        \ the connection has been successfully deleted."
      operationId: Connections_removeBrokerageAuthorization
      parameters:
      - explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          $ref: '#/components/schemas/BrokerageAuthID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        default:
          description: Unexpected error
      summary: Delete connection
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--authorizations-authorizationId
      x-accepts: application/json
    get:
      description: Returns a single connection for the specified ID.
      operationId: Connections_detailBrokerageAuthorization
      parameters:
      - explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          $ref: '#/components/schemas/BrokerageAuthID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerageAuthorization'
          description: OK
        default:
          description: Unexpected error.
      summary: Get connection detail
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId
      x-accepts: application/json
  /authorizations/{authorizationId}/refresh:
    post:
      description: |
        Trigger a holdings update for all accounts under this connection. Updates will be queued asynchronously. [`ACCOUNT_HOLDINGS_UPDATED` webhook](/docs/webhooks#webhooks-account_holdings_updated) will be sent once the sync completes for each account under the connection.
        This endpoint will also trigger a transaction sync for the past day if one has not yet occured.

        *Please contact support for access as this endpoint is not enabled by default.*
      operationId: Connections_refreshBrokerageAuthorization
      parameters:
      - explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          $ref: '#/components/schemas/BrokerageAuthID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerageAuthorizationRefreshConfirmation'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401FailedRequestResponse'
          description: "Unauthorized, invalid credentials for this resource"
          x-do-not-generate: true
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/402BrokerageAuthDisabledResponse'
          description: Unable to sync with brokerage account because the connection
            is disabled.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FeatureNotEnabledResponse'
          description: Customer or user does not have access to this feature
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: The requested resource does not exist.
          x-do-not-generate: true
      summary: Refresh holdings for a connection
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--authorizations-authorizationId-refresh
      x-accepts: application/json
  /authorizations/{authorizationId}/disable:
    post:
      description: |
        Manually force the specified connection to become disabled. This should only be used for testing a reconnect flow, and never used on production connections.
        Will trigger a disconnect as if it happened naturally, and send a [`CONNECTION_BROKEN` webhook](/docs/webhooks#webhooks-connection_broken) for the connection.

        *Please contact us in order to use this endpoint as it is disabled by default.*
      operationId: Connections_disableBrokerageAuthorization
      parameters:
      - explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          $ref: '#/components/schemas/BrokerageAuthID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerageAuthorizationDisabledConfirmation'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401FailedRequestResponse'
          description: "Unauthorized, invalid credentials for this resource"
          x-do-not-generate: true
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/402BrokerageAuthAlreadyDisabledException'
          description: Unable to sync with brokerage account because the connection
            is disabled.
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FeatureNotEnabledResponse'
          description: Customer or user does not have access to this feature
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: The requested resource does not exist.
          x-do-not-generate: true
      summary: Force disable connection
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--authorizations-authorizationId-disable
      x-accepts: application/json
  /sessionEvents:
    get:
      description: Returns a list of session events associated with a user.
      operationId: Connections_sessionEvents
      parameters:
      - explode: true
        in: query
        name: PartnerClientId
        required: true
        schema:
          $ref: '#/components/schemas/ClientID'
        style: form
      - description: Optional comma separated list of user IDs used to filter the
          request on specific users
        explode: true
        in: query
        name: userId
        required: false
        schema:
          $ref: '#/components/schemas/AccountIDs'
        style: form
      - description: Optional comma separated list of session IDs used to filter the
          request on specific users
        explode: true
        in: query
        name: sessionId
        required: false
        schema:
          $ref: '#/components/schemas/AccountIDs'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionEvent'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all Session Events for the Partner.
        default:
          description: Unexpected error.
      summary: Get all session events for a user
      tags:
      - Connections
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--sessionEvents
      x-accepts: application/json
  /accounts:
    get:
      description: |
        Returns all brokerage accounts across all connections known to SnapTrade for the authenticated user.

        The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_listUserAccounts
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List of brokerage accounts across all connections.
                items:
                  $ref: '#/components/schemas/Account'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected error.
      summary: List accounts
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts
      x-accepts: application/json
  /holdings:
    get:
      deprecated: true
      description: |
        **Deprecated, please use the account-specific holdings endpoint instead.**

        List all accounts for the user, plus balances, positions, and orders for each
        account.
      operationId: AccountInformation_getAllUserHoldings
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: Optional. Comma separated list of authorization IDs (only use
          if filtering is needed on one or more authorizations).
        explode: true
        in: query
        name: brokerage_authorizations
        required: false
        schema:
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-paths--holdings-get-parameters-2-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountHoldings'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: Returns list of accounts and holdings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: Forbidden
          x-do-not-generate: true
        "425":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/425FailedRequestResponse'
          description: Too Early
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: "List all accounts for the user, plus balances, positions, and orders\
        \ for each account."
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--holdings
      x-accepts: application/json
  /accounts/{accountId}/holdings:
    get:
      description: |
        Returns a list of balances, positions, and recent orders for the specified account. The data returned is similar to the data returned over the more fine-grained [balances](/reference/Account%20Information/AccountInformation_getUserAccountBalance), [positions](/reference/Account%20Information/AccountInformation_getUserAccountPositions) and [orders](/reference/Account%20Information/AccountInformation_getUserAccountOrders) endpoints. __The finer-grained APIs are preferred. They are easier to work with, faster, and have better error handling than this coarse-grained API.__

        The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for "Cache Expiry Time" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_getUserHoldings
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHoldingsAccount'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: Forbidden
          x-do-not-generate: true
        "425":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/425FailedRequestResponse'
          description: Too Early
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: List account holdings
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-holdings
      x-accepts: application/json
  /accounts/{accountId}:
    get:
      description: |
        Returns account detail known to SnapTrade for the specified account.

        The data returned here is always cached and refreshed once a day. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_getUserAccountDetails
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        default:
          description: Unexpected error
      summary: Get account detail
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId
      x-accepts: application/json
    put:
      description: Updates various properties of a specified account.
      operationId: AccountInformation_updateUserAccount
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: The ID of the account to update.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: Successfully updated details of an investment account
        default:
          description: Unexpected error
      summary: Update details of an investment account
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--accounts-accountId
      x-accepts: application/json
  /accounts/{accountId}/balances:
    get:
      description: |
        Returns a list of balances for the account. Each element of the list has a distinct currency. Some brokerages like Questrade [allows holding multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances).

        The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for "Cache Expiry Time" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_getUserAccountBalance
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Balance'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected error
      summary: List account balances
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-balances
      x-accepts: application/json
  /accounts/{accountId}/positions:
    get:
      description: |
        Returns a list of stock/ETF/crypto/mutual fund positions in the specified account. For option positions, please use the [options endpoint](/reference/Options/Options_listOptionHoldings).

        The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for "Cache Expiry Time" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_getUserAccountPositions
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Position'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected error
      summary: List account positions
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-positions
      x-accepts: application/json
  /accounts/{accountId}/orders:
    get:
      description: |
        Returns a list of recent orders in the specified account.

        The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for "Cache Expiry Time" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: AccountInformation_getUserAccountOrders
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: defaults value is set to "all"
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - all
          - open
          - executed
          type: string
        style: form
      - description: Number of days in the past to fetch the most recent orders. Defaults
          to the last 30 days if no value is passed in.
        explode: true
        in: query
        name: days
        required: false
        schema:
          example: 30
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-paths--accounts-accountId-orders-get-parameters-3-schema
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountOrderRecord'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: List account recent orders
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-orders
      x-accepts: application/json
  /accounts/{accountId}/recentOrders:
    get:
      description: |
        A lightweight endpoint that returns a list of orders executed in the last 24 hours in the specified account.
        This endpoint is realtime and can be used to quickly check if account state has recently changed due to an execution, or check status of recently placed orders
        Differs from /orders in that it is realtime, and only checks the last 24 hours as opposed to the last 30 days
        By default only returns executed orders, but that can be changed by setting *only_executed* to false
        **Please contact support for access as this endpoint is not enabled by default.**
      operationId: AccountInformation_getUserAccountRecentOrders
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: Defaults to true. Indicates if request should fetch only executed
          orders. Set to false to retrieve non executed orders as well
        explode: true
        in: query
        name: only_executed
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentOrdersResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FeatureNotEnabledResponse'
          description: Forbidden
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: List account recent orders (last 24 hours only)
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-recentOrders
      x-accepts: application/json
  /accounts/{accountId}/returnRates:
    get:
      description: |
        Returns a list of rate of return percents for a given account. Will include timeframes available from the brokerage, for example "ALL", "1Y", "6M", "3M", "1M"
      operationId: AccountInformation_getUserAccountReturnRates
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateOfReturnResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FeatureNotEnabledResponse'
          description: Forbidden
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: List account rate of returns
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-returnRates
      x-accepts: application/json
  /accounts/{accountId}/activities:
    get:
      description: |
        Returns all historical transactions for the specified account.

        This endpoint is paginated with a default page size of 1000. The endpoint will return a maximum of 1000 transactions per request. See the query parameters for pagination options.

        Transaction are returned in reverse chronological order, using the `trade_date` field.

        The data returned here is always cached and refreshed once a day.
      operationId: AccountInformation_getAccountActivities
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: "The start date (inclusive) of the transaction history to retrieve.\
          \ If not provided, the default is the first transaction known to SnapTrade\
          \ based on `trade_date`."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - description: "The end date (inclusive) of the transaction history to retrieve.\
          \ If not provided, the default is the last transaction known to SnapTrade\
          \ based on `trade_date`."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - description: An integer that specifies the starting point of the paginated
          results. Default is 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: An integer that specifies the maximum number of transactions
          to return. Default of 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional comma separated list of transaction types to filter by. SnapTrade does a best effort to categorize brokerage transaction types into a common set of values. Here are some of the most popular values:
            - `BUY` - Asset bought.
            - `SELL` - Asset sold.
            - `DIVIDEND` - Dividend payout.
            - `CONTRIBUTION` - Cash contribution.
            - `WITHDRAWAL` - Cash withdrawal.
            - `REI` - Dividend reinvestment.
            - `STOCK_DIVIDEND` - A type of dividend where a company distributes shares instead of cash
            - `INTEREST` - Interest deposited into the account.
            - `FEE` - Fee withdrawn from the account.
            - `OPTIONEXPIRATION` - Option expiration event.
            - `OPTIONASSIGNMENT` - Option assignment event.
            - `OPTIONEXERCISE` - Option exercise event.
            - `TRANSFER` - Transfer of assets from one account to another
        explode: true
        in: query
        name: type
        required: false
        schema:
          example: "BUY,SELL,DIVIDEND"
          type: string
          x-konfig-original-example: "BUY,SELL,DIVIDEND"
          x-konfig-generated-schema: konfig-generated-schema-paths--accounts-accountId-activities-get-parameters-5-schema
        style: form
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUniversalActivity'
          description: OK
        default:
          description: Unexpected error
      summary: List account activities
      tags:
      - Account Information
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-activities
      x-accepts: application/json
  /accounts/{accountId}/options:
    get:
      description: |
        Returns a list of option positions in the specified account. For stock/ETF/crypto/mutual fund positions, please use the [positions endpoint](/reference/Account%20Information/AccountInformation_getUserAccountPositions).

        The data returned here is cached. How long the data is cached for varies by brokerage. Check the [brokerage integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=d16c4c97b8d5438bbb2d8581ac53b11e) and look for "Cache Expiry Time" to see the exact value for a specific brokerage. **If you need real-time data, please use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint**.
      operationId: Options_listOptionHoldings
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OptionsPosition'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: List account option positions
      tags:
      - Options
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-options
      x-accepts: application/json
  /accounts/{accountId}/optionsChain:
    get:
      description: Returns the option chain for the specified symbol in the specified
        account.
      operationId: Options_getOptionsChain
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: The ID of the account to get the options chain from.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Universal symbol ID if symbol
        explode: true
        in: query
        name: symbol
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionChain'
          description: List of all Options available for the brokerage symbol
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Get the options chain for a symbol
      tags:
      - Options
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-optionsChain
      x-accepts: application/json
  /accounts/{accountId}/optionStrategy:
    post:
      description: |
        Creates an option strategy object that will be used to place an option strategy order.
      operationId: Options_getOptionStrategy
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: The ID of the account to create the option strategy object in.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OptionStrategyRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyQuotes'
          description: Order Quotes
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Create options strategy
      tags:
      - Options
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-optionStrategy
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{accountId}/optionStrategy/{optionStrategyId}:
    get:
      description: |
        Returns a Strategy Quotes object which has latest market data of the specified option strategy.
      operationId: Options_getOptionsStrategyQuote
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: The ID of the account the strategy will be placed in.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Option strategy id obtained from response when creating option
          strategy object
        explode: false
        in: path
        name: optionStrategyId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyQuotes'
          description: Order Quotes
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Get options strategy quotes
      tags:
      - Options
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-optionStrategy-optionStrategyId
      x-accepts: application/json
  /accounts/{accountId}/optionStrategy/{optionStrategyId}/execute:
    post:
      description: Places the option strategy order and returns the order record received
        from the brokerage.
      operationId: Options_placeOptionStrategy
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: The ID of the account to execute the strategy in.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      - description: Option strategy id obtained from response when creating option
          strategy object
        explode: false
        in: path
        name: optionStrategyId
        required: true
        schema:
          $ref: '#/components/schemas/Id'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OrderStrategyExecuteBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyOrderRecord'
          description: Status of strategy order placed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Place an option strategy order
      tags:
      - Options
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-optionStrategy-optionStrategyId-execute
      x-content-type: application/json
      x-accepts: application/json
  /activities:
    get:
      deprecated: true
      description: |
        Returns all historical transactions for the specified user and filtering criteria. It's recommended to use `startDate` and `endDate` to paginate through the data, as the response may be very large for accounts with a long history and/or a lot of activity. There's a max number of 10000 transactions returned per request.

        There is no guarantee to the ordering of the transactions returned. Please sort the transactions based on the `trade_date` field if you need them in a specific order.

        The data returned here is always cached and refreshed once a day.
      operationId: TransactionsAndReporting_getActivities
      parameters:
      - description: "The start date (inclusive) of the transaction history to retrieve.\
          \ If not provided, the default is the first transaction known to SnapTrade\
          \ based on `trade_date`."
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - description: "The end date (inclusive) of the transaction history to retrieve.\
          \ If not provided, the default is the last transaction known to SnapTrade\
          \ based on `trade_date`."
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - description: "Optional comma separated list of SnapTrade Account IDs used\
          \ to filter the request to specific accounts. If not provided, the default\
          \ is all known brokerage accounts for the user. The `brokerageAuthorizations`\
          \ parameter takes precedence over this parameter."
        explode: true
        in: query
        name: accounts
        required: false
        schema:
          $ref: '#/components/schemas/AccountIDs'
        style: form
      - description: "Optional comma separated list of SnapTrade Connection (Brokerage\
          \ Authorization) IDs used to filter the request to only accounts that belong\
          \ to those connections. If not provided, the default is all connections\
          \ for the user. This parameter takes precedence over the `accounts` parameter."
        explode: true
        in: query
        name: brokerageAuthorizations
        required: false
        schema:
          $ref: '#/components/schemas/BrokerageAuthIDs'
        style: form
      - description: |
          Optional comma separated list of transaction types to filter by. SnapTrade does a best effort to categorize brokerage transaction types into a common set of values. Here are some of the most popular values:
            - `BUY` - Asset bought.
            - `SELL` - Asset sold.
            - `DIVIDEND` - Dividend payout.
            - `CONTRIBUTION` - Cash contribution.
            - `WITHDRAWAL` - Cash withdrawal.
            - `REI` - Dividend reinvestment.
            - `INTEREST` - Interest deposited into the account.
            - `FEE` - Fee withdrawn from the account.
            - `OPTIONEXPIRATION` - Option expiration event.
            - `OPTIONASSIGNMENT` - Option assignment event.
            - `OPTIONEXERCISE` - Option exercise event.
            - `TRANSFER` - Transfer of assets from one account to another
        explode: true
        in: query
        name: type
        required: false
        schema:
          example: "BUY,SELL,DIVIDEND"
          type: string
          x-konfig-original-example: "BUY,SELL,DIVIDEND"
          x-konfig-generated-schema: konfig-generated-schema-paths--activities-get-parameters-4-schema
        style: form
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UniversalActivity'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected error
      summary: Get transaction history for a user
      tags:
      - Transactions And Reporting
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--activities
      x-accepts: application/json
  /performance/custom:
    get:
      deprecated: true
      description: "Returns performance information (contributions, dividends, rate\
        \ of return, etc) for a specific timeframe. Please note that Total Equity\
        \ Timeframe and Rate of Returns are experimental features. Please contact\
        \ support@snaptrade.com if you notice any inconsistencies."
      operationId: TransactionsAndReporting_getReportingCustomRange
      parameters:
      - explode: true
        in: query
        name: startDate
        required: true
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - explode: true
        in: query
        name: endDate
        required: true
        schema:
          $ref: '#/components/schemas/ReportingDate'
        style: form
      - description: Optional comma separated list of account IDs used to filter the
          request on specific accounts
        explode: true
        in: query
        name: accounts
        required: false
        schema:
          $ref: '#/components/schemas/AccountIDs'
        style: form
      - description: "Optional, increases frequency of data points for the total value\
          \ and contribution charts if set to true"
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--performance-custom-get-parameters-3-schema
        style: form
      - description: "Optional frequency for the rate of return chart (defaults to\
          \ monthly). Possible values are daily, weekly, monthly, quarterly, yearly."
        explode: true
        in: query
        name: frequency
        required: false
        schema:
          $ref: '#/components/schemas/ReportingFrequency'
        style: form
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceCustom'
          description: Successfully retrieved performance data
        default:
          description: Unexpected error
      summary: Get performance information for a specific timeframe
      tags:
      - Transactions And Reporting
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--performance-custom
      x-accepts: application/json
  /accounts/{accountId}/quotes:
    get:
      description: Returns quotes from the brokerage for the specified symbols and
        account. The quotes returned can be delayed depending on the brokerage the
        account belongs to. It is highly recommended that you use your own market
        data provider for real-time quotes instead of relying on this endpoint. This
        endpoint does not work for options quotes.
      operationId: Trading_getUserAccountQuotes
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - description: "List of Universal Symbol IDs or tickers to get quotes for. When\
          \ providing multiple values, use a comma as separator"
        explode: true
        in: query
        name: symbols
        required: true
        schema:
          type: string
        style: form
      - description: Should be set to `True` if `symbols` are comprised of tickers.
          Defaults to `False` if not provided.
        explode: true
        in: query
        name: use_ticker
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolsQuotes'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Get symbol quotes
      tags:
      - Trading
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-quotes
      x-accepts: application/json
  /trade/impact:
    post:
      description: "Simulates an order and its impact on the account. This endpoint\
        \ does not place the order with the brokerage. If successful, it returns a\
        \ `Trade` object and the ID of the object can be used to place the order with\
        \ the brokerage using the [place checked order endpoint](/reference/Trading/Trading_placeOrder).\
        \ Please note that the `Trade` object returned expires after 5 minutes. Any\
        \ order placed using an expired `Trade` will be rejected."
      operationId: Trading_getOrderImpact
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ManualTradeFormRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualTradeAndImpact'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: Forbidden
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Check order impact
      tags:
      - Trading
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--trade-impact
      x-content-type: application/json
      x-accepts: application/json
  /trade/{tradeId}:
    post:
      description: |
        Places the previously checked order with the brokerage. The `tradeId` is obtained from the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact). If you prefer to place the order without checking for impact first, you can use the [place order endpoint](/reference/Trading/Trading_placeForceOrder).

        It's recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.
      operationId: Trading_placeOrder
      parameters:
      - description: "Obtained from calling the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact)"
        explode: false
        in: path
        name: tradeId
        required: true
        schema:
          $ref: '#/components/schemas/TradeID'
        style: simple
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ValidatedTradeRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrderRecord'
          description: Status of order placed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Failed to submit order to broker
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Place checked order
      tags:
      - Trading
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--trade-tradeId
      x-content-type: application/json
      x-accepts: application/json
  /trade/place:
    post:
      description: |
        Places a brokerage order in the specified account. The order could be rejected by the brokerage if it is invalid or if the account does not have sufficient funds.

        This endpoint does not compute the impact to the account balance from the order and any potential commissions before submitting the order to the brokerage. If that is desired, you can use the [check order impact endpoint](/reference/Trading/Trading_getOrderImpact).

        It's recommended to trigger a manual refresh of the account after placing an order to ensure the account is up to date. You can use the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint for this.
      operationId: Trading_placeForceOrder
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ManualTradeFormRequestBodyWithOptions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrderRecord'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Trade could not be placed
          x-do-not-generate: true
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403FailedRequestResponse'
          description: User does not have permissions to place trades
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Place order
      tags:
      - Trading
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--trade-place
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{accountId}/orders/cancel:
    post:
      description: |
        Attempts to cancel an open order with the brokerage. If the order is no longer cancellable, the request will be rejected.
      operationId: Trading_cancelUserAccountOrder
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CancelOrderRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountOrderRecord'
          description: Order Record of canceled order
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Unable to cancel open order. Please verify status in brokerage
            account
          x-do-not-generate: true
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500UnexpectedExceptionResponse'
          description: Unexpected error
          x-do-not-generate: true
      summary: Cancel order
      tags:
      - Trading
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-orders-cancel
      x-content-type: application/json
      x-accepts: application/json
  /snapTrade/partners:
    get:
      description: "Returns configurations for your SnapTrade Client ID, including\
        \ allowed brokerages and data access."
      operationId: ReferenceData_getPartnerInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerData'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400FailedRequestResponse'
          description: Bad Request
          x-do-not-generate: true
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401FailedRequestResponse'
          description: Unauthorized
          x-do-not-generate: true
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        "500":
          description: Unexpected Error
      summary: Get Client Info
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--snapTrade-partners
      x-accepts: application/json
  /accounts/{accountId}/symbols:
    post:
      description: |
        Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.

        The search results are further limited to the symbols supported by the brokerage for which the account is under.
      operationId: ReferenceData_symbolSearchUserAccount
      parameters:
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: form
      - explode: true
        in: query
        name: userSecret
        required: true
        schema:
          $ref: '#/components/schemas/UserSecret'
        style: form
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolQuery'
      responses:
        "200":
          content:
            application/json:
              schema:
                description: A list of Universal Symbol objects that match the given
                  query.
                items:
                  $ref: '#/components/schemas/UniversalSymbol'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected Error
      summary: Search account symbols
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-symbols
      x-content-type: application/json
      x-accepts: application/json
  /brokerages:
    get:
      description: Returns a list of all defined Brokerage objects.
      operationId: ReferenceData_listAllBrokerages
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Brokerage'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all defined Brokerage objects.
        default:
          description: Unexpected error.
      summary: Get brokerages
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--brokerages
      x-accepts: application/json
  /brokerageAuthorizationTypes:
    get:
      description: Returns a list of all defined Brokerage authorization Type objects.
      operationId: ReferenceData_listAllBrokerageAuthorizationType
      parameters:
      - description: Comma separated value of brokerage slugs
        explode: true
        in: query
        name: brokerage
        required: false
        schema:
          example: "QUESTRADE,ALPACA"
          type: string
          x-konfig-original-example: "QUESTRADE,ALPACA"
          x-konfig-generated-schema: konfig-generated-schema-paths--brokerageAuthorizationTypes-get-parameters-0-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BrokerageAuthorizationTypeReadOnly'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all defined Brokerage Authorization Type objects.
        default:
          description: Unexpected error.
      summary: Get all brokerage authorization types
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--brokerageAuthorizationTypes
      x-accepts: application/json
  /currencies:
    get:
      description: Returns a list of all defined Currency objects.
      operationId: ReferenceData_listAllCurrencies
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Currency'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all currencies.
        default:
          description: Unexpected error.
      summary: Get currencies
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--currencies
      x-accepts: application/json
  /currencies/rates:
    get:
      description: Returns a list of all Exchange Rate Pairs for all supported Currencies.
      operationId: ReferenceData_listAllCurrenciesRates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExchangeRatePairs'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all exchange rates pairs for supported currencies
      summary: Get currency exchange rates
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--currencies-rates
      x-accepts: application/json
  /currencies/rates/{currencyPair}:
    get:
      description: Returns an Exchange Rate Pair object for the specified Currency
        Pair.
      operationId: ReferenceData_getCurrencyExchangeRatePair
      parameters:
      - description: "A currency pair based on currency code for example, {CAD-USD}"
        explode: false
        in: path
        name: currencyPair
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRatePairs'
          description: A list of all exchange rates pairs for supported currencies
      summary: Get exchange rate of a currency pair
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--currencies-rates-currencyPair
      x-accepts: application/json
  /exchanges:
    get:
      description: Returns a list of all supported Exchanges.
      operationId: ReferenceData_getStockExchanges
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Exchange'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: A list of all supported stock exchanges
      summary: Get exchanges
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--exchanges
      x-accepts: application/json
  /securityTypes:
    get:
      description: Return all available security types supported by SnapTrade.
      operationId: ReferenceData_getSecurityTypes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityType'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected Error
      summary: List security types
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--securityTypes
      x-accepts: application/json
  /symbols:
    post:
      description: |
        Returns a list of Universal Symbol objects that match the given query. The matching takes into consideration both the ticker and the name of the symbol. Only the first 20 results are returned.
      operationId: ReferenceData_getSymbols
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolQuery'
      responses:
        "200":
          content:
            application/json:
              schema:
                description: A list of Universal Symbol objects that match the given
                  query.
                items:
                  $ref: '#/components/schemas/UniversalSymbol'
                type: array
                x-konfig-is-used-in-successful-response: true
          description: OK
        default:
          description: Unexpected Error
      summary: Search symbols
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--symbols
      x-content-type: application/json
      x-accepts: application/json
  /symbols/{query}:
    get:
      description: |
        Returns the Universal Symbol object specified by the ticker or the Universal Symbol ID. When a ticker is specified, the first matching result is returned. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click on "Yahoo Finance Market Coverage and Data Delays"). For example, for securities traded on the Toronto Stock Exchange, the symbol has a '.TO' suffix. For securities traded on NASDAQ or NYSE, the symbol does not have a suffix. Please use the ticker with the proper suffix for the best results.
      operationId: ReferenceData_getSymbolsByTicker
      parameters:
      - description: The ticker or Universal Symbol ID to look up the symbol with.
        explode: false
        in: path
        name: query
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniversalSymbol'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404FailedRequestResponse'
          description: Not Found
          x-do-not-generate: true
        default:
          description: Unexpected Error
      summary: Get symbol detail
      tags:
      - Reference Data
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--symbols-query
      x-accepts: application/json
components:
  requestBodies:
    RegisterUserRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnapTradeRegisterUserRequestBody'
      required: true
    ResetUserSecretRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIDandSecret'
      required: true
    SnapTradeLoginUserRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnapTradeLoginUserRequestBody'
    ManualTradeFormRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManualTradeForm'
      required: true
    ManualTradeFormRequestBodyWithOptions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManualTradeFormWithOptions'
      required: true
    ValidatedTradeRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidatedTradeBody'
      required: false
    CancelOrderRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Trading_cancelUserAccountOrder_request'
      required: true
    OptionStrategyRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Options_getOptionStrategy_request'
      required: true
    OrderStrategyExecuteBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Options_placeOptionStrategy_request'
      required: true
  schemas:
    "400FailedRequestResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        default_detail:
          example: Unable to verify data sent
          x-konfig-original-example: Unable to verify data sent
        default_code:
          example: 1076
          x-konfig-original-example: 1076
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "401FailedRequestResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        default_detail:
          example: Unable to verify signature sent
          x-konfig-original-example: Unable to verify signature sent
        default_code:
          example: 1076
          x-konfig-original-example: 1076
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "402BrokerageAuthDisabledResponse":
      additionalProperties: true
      description: Cannot perform action because connection is disabled
      properties:
        detail:
          example: Unable to sync with brokerage account because the connection is
            disabled.
          x-konfig-original-example: Unable to sync with brokerage account because
            the connection is disabled.
        code:
          example: 3003
          x-konfig-original-example: 3003
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "402BrokerageAuthAlreadyDisabledException":
      additionalProperties: true
      description: This connection is already disabled.
      properties:
        detail:
          example: This connection is already disabled.
          x-konfig-original-example: This connection is already disabled.
        code:
          example: 3011
          x-konfig-original-example: 3011
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "403FailedRequestResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        default_detail:
          example: User does not have permission to access this resource
          x-konfig-original-example: User does not have permission to access this
            resource
        default_code:
          example: 1066
          x-konfig-original-example: 1066
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "403FeatureNotEnabledResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        detail:
          example: Feature is not enabled for this customer or this connection
          x-konfig-original-example: Feature is not enabled for this customer or this
            connection
        default_code:
          example: 1141
          x-konfig-original-example: 1141
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "404FailedRequestResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        default_detail:
          example: The requested resource does not exist.
          x-konfig-original-example: The requested resource does not exist.
        default_code:
          example: 1011
          x-konfig-original-example: 1011
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "425FailedRequestResponse":
      additionalProperties: true
      description: Example for failed request response
      properties:
        detail:
          example: The resource is currently being populated. Please try again later.
          x-konfig-original-example: The resource is currently being populated. Please
            try again later.
        code:
          example: 3012
          x-konfig-original-example: 3012
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    "500UnexpectedExceptionResponse":
      additionalProperties: true
      description: Example for a response that failed for unexpected reasons
      properties:
        detail:
          example: Encountered an unexpected exception.
          x-konfig-original-example: Encountered an unexpected exception.
        status_code:
          example: 500
          x-konfig-original-example: 500
        code:
          example: 1000
          x-konfig-original-example: 1000
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    AccountSyncStatus:
      description: Contains status update for the account sync process between SnapTrade
        and the brokerage.
      example:
        holdings:
          last_successful_sync: 2000-01-23T04:56:07.000+00:00
          initial_sync_completed: true
        transactions:
          last_successful_sync: 2022-01-24T00:00:00.000+00:00
          initial_sync_completed: true
          first_transaction_date: ""
      properties:
        transactions:
          $ref: '#/components/schemas/TransactionsStatus'
        holdings:
          $ref: '#/components/schemas/HoldingsStatus'
    TransactionsStatus:
      description: |
        Status of account transaction sync. SnapTrade syncs transactions from the brokerage under the following conditions:
        1. Initial connection - SnapTrade syncs all transactions from the brokerage account as far back as the brokerage allows. Check [our integrations doc](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=6fab8012ade6441fa0c6d9af9c55ce3a) for details on how far back we sync for each brokerage.
        2. Daily sync - Once a day SnapTrade syncs new transactions from the brokerage.
        3. Manual sync - You can retrigger an incremental sync of transactions with the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint.
      example:
        last_successful_sync: 2022-01-24T00:00:00.000+00:00
        initial_sync_completed: true
        first_transaction_date: ""
      properties:
        initial_sync_completed:
          description: "Indicates if the initial sync of transactions has been completed.\
            \ For accounts with a large number of transactions, the initial sync may\
            \ take a while to complete."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TransactionsStatus-properties-initial_sync_completed
        last_successful_sync:
          description: Date in YYYY-MM-DD format or null
          example: 2022-01-24
          format: date
          nullable: true
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SyncStatusDate
        first_transaction_date:
          allOf:
          - $ref: '#/components/schemas/SyncStatusDate'
          description: "The date of the first transaction in the account known to\
            \ SnapTrade. It's possible that the account has transactions before this\
            \ date, but they are not known to SnapTrade."
          nullable: true
    HoldingsStatus:
      description: |
        Status of account holdings sync. SnapTrade syncs holdings from the brokerage under the following conditions:
        1. Initial connection - SnapTrade syncs all holdings (positions, balances, recent orders, and transactions) immediately after the connection is established.
        2. Daily sync - Once a day SnapTrade refreshes all holdings from the brokerage.
        3. Manual sync - You can trigger a refresh of holdings with the [manual refresh](/reference/Connections/Connections_refreshBrokerageAuthorization) endpoint.
      example:
        last_successful_sync: 2000-01-23T04:56:07.000+00:00
        initial_sync_completed: true
      properties:
        initial_sync_completed:
          description: "Indicates if the initial sync of holdings has been completed.\
            \ For accounts with a large number of positions/orders/transactions, the\
            \ initial sync may take a while to complete."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-HoldingsStatus-properties-initial_sync_completed
        last_successful_sync:
          description: Date in ISO 8601 format or null (YYYY-MM-DD HH:MM:SS.mmmmmmTZ)
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-06-28 18:42:46.561408+00:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-HoldingsSyncStatusDate
    AccountBalance:
      description: Contains balance related information for the account.
      example:
        total:
          amount: 15363.23
          currency: USD
      properties:
        total:
          $ref: '#/components/schemas/AccountBalance_total'
    Account:
      additionalProperties: true
      description: A single account at a brokerage.
      example:
        number: Q6542138443
        balance:
          total:
            amount: 15363.23
            currency: USD
        raw_type: Margin
        brokerage_authorization: 87b24961-b51e-4db8-9226-f198f6518a89
        meta:
          type: Margin
          status: ACTIVE
          institution_name: Robinhood
        name: Robinhood Individual
        sync_status:
          holdings:
            last_successful_sync: 2000-01-23T04:56:07.000+00:00
            initial_sync_completed: true
          transactions:
            last_successful_sync: 2022-01-24T00:00:00.000+00:00
            initial_sync_completed: true
            first_transaction_date: ""
        id: ""
        created_date: 2024-07-23T22:50:22.761Z
        portfolio_group: 2bcd7cc3-e922-4976-bce1-9858296801c3
        institution_name: Robinhood
        cash_restrictions: []
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: "Unique identifier for the connected brokerage account. This\
            \ is the UUID used to reference the account in SnapTrade. This ID should\
            \ not change for as long as the connection stays active. If the connection\
            \ is deleted and re-added, a new account ID will be generated."
        brokerage_authorization:
          description: Unique identifier for the connection. This is the UUID used
            to reference the connection in SnapTrade.
          example: 87b24961-b51e-4db8-9226-f198f6518a89
          format: uuid
          type: string
          x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthID
        name:
          description: "A display name for the account. Either assigned by the user\
            \ or by the brokerage itself. For certain brokerages, SnapTrade appends\
            \ the brokerage name to the account name for clarity."
          example: Robinhood Individual
          nullable: true
          type: string
          x-konfig-original-example: Robinhood Individual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-name
        number:
          description: "The account number assigned by the brokerage. For some brokerages,\
            \ this field may be masked for security reasons."
          example: Q6542138443
          type: string
          x-konfig-original-example: Q6542138443
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-number
        institution_name:
          description: The name of the brokerage that holds the account.
          example: Robinhood
          type: string
          x-konfig-original-example: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-institution_name
        created_date:
          description: "Timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\
            \ format indicating when the account was created in SnapTrade. This is\
            \ _not_ the account opening date at the brokerage."
          example: 2024-07-23T22:50:22.761Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-07-23T22:50:22.761Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-created_date
        sync_status:
          $ref: '#/components/schemas/AccountSyncStatus'
        balance:
          $ref: '#/components/schemas/AccountBalance'
        meta:
          additionalProperties: true
          deprecated: true
          description: "Additional information about the account, such as account\
            \ type, status, etc. This information is specific to the brokerage and\
            \ there's no standard format for this data. This field is deprecated and\
            \ subject to removal in a future version."
          example:
            type: Margin
            status: ACTIVE
            institution_name: Robinhood
          type: object
          x-konfig-original-example:
            type: Margin
            status: ACTIVE
            institution_name: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-meta
        portfolio_group:
          deprecated: true
          description: Portfolio Group ID. Portfolio Groups have been deprecated.
            Please contact support if you have a usecase for it.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PortfolioGroupID
        cash_restrictions:
          deprecated: true
          description: This field is deprecated.
          example: []
          items:
            type: string
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-cash_restrictions
        raw_type:
          description: The account type as provided by the brokerage
          example: Margin
          nullable: true
          type: string
          x-konfig-original-example: Margin
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Account-properties-raw_type
      required:
      - balance
      - brokerage_authorization
      - created_date
      - id
      - institution_name
      - name
      - number
      - sync_status
      type: object
      x-konfig-is-used-in-successful-response: true
    AccountSimple:
      additionalProperties: true
      description: A single account at a brokerage.
      example:
        number: Q6542138443
        name: Robinhood Individual
        sync_status:
          holdings:
            last_successful_sync: 2000-01-23T04:56:07.000+00:00
            initial_sync_completed: true
          transactions:
            last_successful_sync: 2022-01-24T00:00:00.000+00:00
            initial_sync_completed: true
            first_transaction_date: ""
        id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        id:
          description: Unique identifier for the connected brokerage account. This
            is the UUID used to reference the account in SnapTrade.
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
        name:
          description: "A display name for the account. Either assigned by the user\
            \ or by the brokerage itself. For certain brokerages, SnapTrade appends\
            \ the brokerage name to the account name for clarity."
          example: Robinhood Individual
          type: string
          x-konfig-original-example: Robinhood Individual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountSimple-properties-name
        number:
          description: "The account number assigned by the brokerage. For some brokerages,\
            \ this field may be masked for security reasons."
          example: Q6542138443
          type: string
          x-konfig-original-example: Q6542138443
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountSimple-properties-number
        sync_status:
          $ref: '#/components/schemas/AccountSyncStatus'
      type: object
    AccountID:
      description: Unique identifier for the connected brokerage account. This is
        the UUID used to reference the account in SnapTrade.
      example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      format: uuid
      type: string
      x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
    AccountIDs:
      description: Comma separated list of account IDs
      example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      type: string
      x-konfig-original-example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountIDs
    BrokerageAuthID:
      description: Unique identifier for the connection. This is the UUID used to
        reference the connection in SnapTrade.
      example: 87b24961-b51e-4db8-9226-f198f6518a89
      format: uuid
      type: string
      x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthID
    BrokerageAuthIDs:
      description: Comma separated list of brokerage authorization IDs
      example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      type: string
      x-konfig-original-example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthIDs
    AccountHoldings:
      additionalProperties: true
      description: Account Holdings
      example:
        total_value:
          currency: USD
          value: 32600.71
        balances:
        - currency: null
          cash: 300.71
          buying_power: 410.71
        - currency: null
          cash: 300.71
          buying_power: 410.71
        positions:
        - symbol:
            is_quotable: true
            symbol:
              figi_code: BBG000B9XRY4
              symbol: VAB.TO
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: VANGUARD CDN AGGREGATE BOND INDEX ETF
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type:
                is_supported: true
                code: cs
                description: Common Stock
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            is_tradable: true
            local_id: "3291231"
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          fractional_units: 1.44
          price: 113.15
          open_pnl: 0.44
          units: 40
          average_purchase_price: 108.3353
        - symbol:
            is_quotable: true
            symbol:
              figi_code: BBG000B9XRY4
              symbol: VAB.TO
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: VANGUARD CDN AGGREGATE BOND INDEX ETF
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type:
                is_supported: true
                code: cs
                description: Common Stock
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            is_tradable: true
            local_id: "3291231"
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          fractional_units: 1.44
          price: 113.15
          open_pnl: 0.44
          units: 40
          average_purchase_price: 108.3353
        account:
          number: Q6542138443
          brokerage_authorization:
            brokerage:
              maintenance_mode: true
              allows_fractional_units: true
              exchanges:
              - 2bcd7cc3-e922-4976-bce1-9858296801c3
              - 4bcd8cc3-c122-4974-dc21-1858296801f4
              description: "Robinhood is an American multinational financial services\
                \ corporation based in Menlo Park, California."
              open_url: http://example.com/aeiou
              display_name: Robinhood
              url: https://robinhood.com
              enabled: true
              allows_trading: true
              has_reporting: true
              aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
              is_real_time_connection: true
              name: Robinhood
              id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
              brokerage_type:
                name: Traditional Brokerage
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              slug: ROBINHOOD
              aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
            disabled_date: 2022-01-21T20:11:19.217Z
            meta:
              identifier: 123456
            name: Connection-1
            disabled: false
            id: 87b24961-b51e-4db8-9226-f198f6518a89
            created_date: 2024-08-20T21:56:19.123Z
            updated_date: 2024-08-20T21:56:20.057Z
            type: trade
          meta:
            type: Margin
            status: ACTIVE
            institution_name: Alpaca
          name: Registered Retirement Savings Account
          sync_status:
            holdings:
              last_successful_sync: 2000-01-23T04:56:07.000+00:00
              initial_sync_completed: true
            transactions:
              last_successful_sync: 2022-01-24T00:00:00.000+00:00
              initial_sync_completed: true
              first_transaction_date: ""
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          portfolio_group: 2bcd7cc3-e922-4976-bce1-9858296801c3
          institution_name: Alpaca
      properties:
        account:
          $ref: '#/components/schemas/SnapTradeHoldingsAccount'
        balances:
          items:
            $ref: '#/components/schemas/Balance'
          nullable: true
          type: array
        positions:
          items:
            $ref: '#/components/schemas/Position'
          nullable: true
          type: array
        total_value:
          $ref: '#/components/schemas/SnapTradeHoldingsTotalValue'
      type: object
    AccountHoldingsAccount:
      additionalProperties: true
      description: A wrapper object containing holdings information for a single account.
      example:
        total_value:
          currency: USD
          value: 32600.71
        balances:
        - currency: null
          cash: 300.71
          buying_power: 410.71
        - currency: null
          cash: 300.71
          buying_power: 410.71
        option_positions:
        - symbol:
            description: SPY CALL 7/17 200
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            option_symbol:
              ticker: AAPL  261218C00240000
              is_mini_option: false
              option_type: CALL
              underlying_symbol:
                figi_code: BBG000B9XRY4
                symbol: SPY
                figi_instrument:
                  figi_code: BBG000B9Y5X2
                  figi_share_class: BBG001S5N8V8
                raw_symbol: VAB
                description: SPDR S&P 500 ETF Trust
                currency: null
                exchange: null
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
                type: null
                currencies:
                - code: USD
                  name: US Dollar
                  id: 87b24961-b51e-4db8-9226-f198f6518a89
                - code: USD
                  name: US Dollar
                  id: 87b24961-b51e-4db8-9226-f198f6518a89
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              expiration_date: 2026-12-18T00:00:00.000+00:00
              strike_price: 240
          price: 38.4
          currency:
            code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          units: -50
          average_purchase_price: 4126
        - symbol:
            description: SPY CALL 7/17 200
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            option_symbol:
              ticker: AAPL  261218C00240000
              is_mini_option: false
              option_type: CALL
              underlying_symbol:
                figi_code: BBG000B9XRY4
                symbol: SPY
                figi_instrument:
                  figi_code: BBG000B9Y5X2
                  figi_share_class: BBG001S5N8V8
                raw_symbol: VAB
                description: SPDR S&P 500 ETF Trust
                currency: null
                exchange: null
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
                type: null
                currencies:
                - code: USD
                  name: US Dollar
                  id: 87b24961-b51e-4db8-9226-f198f6518a89
                - code: USD
                  name: US Dollar
                  id: 87b24961-b51e-4db8-9226-f198f6518a89
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              expiration_date: 2026-12-18T00:00:00.000+00:00
              strike_price: 240
          price: 38.4
          currency:
            code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          units: -50
          average_purchase_price: 4126
        positions:
        - symbol:
            is_quotable: true
            symbol:
              figi_code: BBG000B9XRY4
              symbol: VAB.TO
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: VANGUARD CDN AGGREGATE BOND INDEX ETF
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type:
                is_supported: true
                code: cs
                description: Common Stock
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            is_tradable: true
            local_id: "3291231"
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          fractional_units: 1.44
          price: 113.15
          open_pnl: 0.44
          units: 40
          average_purchase_price: 108.3353
        - symbol:
            is_quotable: true
            symbol:
              figi_code: BBG000B9XRY4
              symbol: VAB.TO
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: VANGUARD CDN AGGREGATE BOND INDEX ETF
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type:
                is_supported: true
                code: cs
                description: Common Stock
                id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            is_tradable: true
            local_id: "3291231"
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          fractional_units: 1.44
          price: 113.15
          open_pnl: 0.44
          units: 40
          average_purchase_price: 108.3353
        orders:
        - time_executed: 2024-08-05T00:05:57.409Z
          symbol: 2bcd7cc3-e922-4976-bce1-9858296801c3
          time_placed: 2024-07-30T22:51:49.746Z
          expiry_date: 2024-08-05T00:05:57.409Z
          brokerage_order_id: 66a033fa-da74-4fcf-b527-feefdec9257e
          limit_price: 12.34
          time_updated: 2024-08-05T00:05:57.409Z
          canceled_quantity: 10
          time_in_force: time_in_force
          execution_price: 12.34
          stop_price: 12.5
          action: action
          total_quantity: 100
          universal_symbol: null
          filled_quantity: 80
          option_symbol: null
          order_type: Market
          open_quantity: 10
          status: null
        - time_executed: 2024-08-05T00:05:57.409Z
          symbol: 2bcd7cc3-e922-4976-bce1-9858296801c3
          time_placed: 2024-07-30T22:51:49.746Z
          expiry_date: 2024-08-05T00:05:57.409Z
          brokerage_order_id: 66a033fa-da74-4fcf-b527-feefdec9257e
          limit_price: 12.34
          time_updated: 2024-08-05T00:05:57.409Z
          canceled_quantity: 10
          time_in_force: time_in_force
          execution_price: 12.34
          stop_price: 12.5
          action: action
          total_quantity: 100
          universal_symbol: null
          filled_quantity: 80
          option_symbol: null
          order_type: Market
          open_quantity: 10
          status: null
        account:
          number: Q6542138443
          balance:
            total:
              amount: 15363.23
              currency: USD
          raw_type: Margin
          brokerage_authorization: 87b24961-b51e-4db8-9226-f198f6518a89
          meta:
            type: Margin
            status: ACTIVE
            institution_name: Robinhood
          name: Robinhood Individual
          sync_status:
            holdings:
              last_successful_sync: 2000-01-23T04:56:07.000+00:00
              initial_sync_completed: true
            transactions:
              last_successful_sync: 2022-01-24T00:00:00.000+00:00
              initial_sync_completed: true
              first_transaction_date: ""
          id: ""
          created_date: 2024-07-23T22:50:22.761Z
          portfolio_group: 2bcd7cc3-e922-4976-bce1-9858296801c3
          institution_name: Robinhood
          cash_restrictions: []
      properties:
        account:
          $ref: '#/components/schemas/Account'
        balances:
          description: "List of balances for the account. Each element of the list\
            \ has a distinct currency. Some brokerages like Questrade [allows holding\
            \ multiple currencies in the same account](https://www.questrade.com/learning/questrade-basics/balances-and-reports/understanding-your-account-balances)."
          items:
            $ref: '#/components/schemas/Balance'
          nullable: true
          type: array
        positions:
          description: List of stock/ETF/crypto/mutual fund positions in the account.
          items:
            $ref: '#/components/schemas/Position'
          nullable: true
          type: array
        option_positions:
          description: List of option positions in the account.
          items:
            $ref: '#/components/schemas/OptionsPosition'
          nullable: true
          type: array
        orders:
          description: "List of recent orders in the account, including both pending\
            \ and executed orders. Note that option orders are included in this list.\
            \ Option orders will have a null `universal_symbol` field and a non-null\
            \ `option_symbol` field."
          items:
            $ref: '#/components/schemas/AccountOrderRecord'
          nullable: true
          type: array
        total_value:
          $ref: '#/components/schemas/SnapTradeHoldingsTotalValue'
      type: object
      x-konfig-is-used-in-successful-response: true
    RecentOrdersResponse:
      additionalProperties: true
      description: List of orders executed within the last 24 hours
      example:
        orders:
        - time_executed: 2024-08-05T00:05:57.409Z
          symbol: 2bcd7cc3-e922-4976-bce1-9858296801c3
          time_placed: 2024-07-30T22:51:49.746Z
          expiry_date: 2024-08-05T00:05:57.409Z
          brokerage_order_id: 66a033fa-da74-4fcf-b527-feefdec9257e
          limit_price: 12.34
          time_updated: 2024-08-05T00:05:57.409Z
          canceled_quantity: 10
          time_in_force: time_in_force
          execution_price: 12.34
          stop_price: 12.5
          action: action
          total_quantity: 100
          universal_symbol: null
          filled_quantity: 80
          option_symbol: null
          order_type: Market
          open_quantity: 10
          status: null
        - time_executed: 2024-08-05T00:05:57.409Z
          symbol: 2bcd7cc3-e922-4976-bce1-9858296801c3
          time_placed: 2024-07-30T22:51:49.746Z
          expiry_date: 2024-08-05T00:05:57.409Z
          brokerage_order_id: 66a033fa-da74-4fcf-b527-feefdec9257e
          limit_price: 12.34
          time_updated: 2024-08-05T00:05:57.409Z
          canceled_quantity: 10
          time_in_force: time_in_force
          execution_price: 12.34
          stop_price: 12.5
          action: action
          total_quantity: 100
          universal_symbol: null
          filled_quantity: 80
          option_symbol: null
          order_type: Market
          open_quantity: 10
          status: null
      properties:
        orders:
          description: List of orders executed in the last 24 hours
          items:
            $ref: '#/components/schemas/AccountOrderRecord'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    RateOfReturnResponse:
      additionalProperties: true
      description: List of return rates with their timeframe
      example:
        data:
        - timeframe: ALL
          return_percent: 5.97
          created_date: 2024-07-30T22:51:49.746Z
        - timeframe: ALL
          return_percent: 5.97
          created_date: 2024-07-30T22:51:49.746Z
      properties:
        data:
          description: List of return percentages
          items:
            $ref: '#/components/schemas/RateOfReturnObject'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    RateOfReturnObject:
      additionalProperties: true
      description: Individual rate of return object with return percent and timeframe
      example:
        timeframe: ALL
        return_percent: 5.97
        created_date: 2024-07-30T22:51:49.746Z
      properties:
        timeframe:
          description: The timeframe this return percent is reflecting
          enum:
          - ALL
          - 1Y
          - 6M
          - 3M
          - 1M
          example: ALL
          type: string
          x-konfig-original-example: ALL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RateOfReturnObject-properties-timeframe
        return_percent:
          description: "The percent return of the portfolio, directly from the brokerage.\
            \ 5.97 indicates a 5.97% return over the timeframe"
          example: 5.97
          type: number
          x-konfig-original-example: 5.97
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RateOfReturnObject-properties-return_percent
        created_date:
          description: The date this was fetched
          example: 2024-07-30T22:51:49.746Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-07-30T22:51:49.746Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-RateOfReturnObject-properties-created_date
      type: object
    AccountOrderRecord:
      additionalProperties: true
      description: "Describes a single recent order in an account. Each record here\
        \ represents a single order leg. For multi-leg orders, there will be multiple\
        \ records."
      example:
        time_executed: 2024-08-05T00:05:57.409Z
        symbol: 2bcd7cc3-e922-4976-bce1-9858296801c3
        time_placed: 2024-07-30T22:51:49.746Z
        expiry_date: 2024-08-05T00:05:57.409Z
        brokerage_order_id: 66a033fa-da74-4fcf-b527-feefdec9257e
        limit_price: 12.34
        time_updated: 2024-08-05T00:05:57.409Z
        canceled_quantity: 10
        time_in_force: time_in_force
        execution_price: 12.34
        stop_price: 12.5
        action: action
        total_quantity: 100
        universal_symbol: null
        filled_quantity: 80
        option_symbol: null
        order_type: Market
        open_quantity: 10
        status: null
      properties:
        brokerage_order_id:
          description: Order ID returned by brokerage. This is the unique identifier
            for the order in the brokerage system.
          example: 66a033fa-da74-4fcf-b527-feefdec9257e
          type: string
          x-konfig-original-example: 66a033fa-da74-4fcf-b527-feefdec9257e
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageOrderID
        status:
          $ref: '#/components/schemas/AccountOrderRecordStatus'
        universal_symbol:
          $ref: '#/components/schemas/AccountOrderRecord_universal_symbol'
        option_symbol:
          $ref: '#/components/schemas/AccountOrderRecord_option_symbol'
        action:
          description: |
            The action describes the intent or side of a trade. This is usually `BUY` or `SELL` but can include other potential values like the following depending on the specific brokerage.
              - BUY
              - SELL
              - BUY_COVER
              - SELL_SHORT
              - BUY_OPEN
              - BUY_CLOSE
              - SELL_OPEN
              - SELL_CLOSE
          type: string
        total_quantity:
          description: "The total number of shares or contracts of the order. This\
            \ should be the sum of the filled, canceled, and open quantities. Can\
            \ be a decimal number for fractional shares."
          example: 100
          nullable: true
          type: number
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-total_quantity
        open_quantity:
          description: The number of shares or contracts that are still open (waiting
            for execution). Can be a decimal number for fractional shares.
          example: 10
          nullable: true
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-open_quantity
        canceled_quantity:
          description: The number of shares or contracts that have been canceled.
            Can be a decimal number for fractional shares.
          example: 10
          nullable: true
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-canceled_quantity
        filled_quantity:
          description: The number of shares or contracts that have been filled. Can
            be a decimal number for fractional shares.
          example: 80
          nullable: true
          type: number
          x-konfig-original-example: 80
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-filled_quantity
        execution_price:
          description: The price at which the order was executed.
          example: 12.34
          nullable: true
          type: number
          x-konfig-original-example: 12.34
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-execution_price
        limit_price:
          description: The limit price is maximum price one is willing to pay for
            a buy order or the minimum price one is willing to accept for a sell order.
            Should only apply to `Limit` and `StopLimit` orders.
          example: 12.34
          nullable: true
          type: number
          x-konfig-original-example: 12.34
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-limit_price
        stop_price:
          description: The stop price is the price at which a stop order is triggered.
            Should only apply to `Stop` and `StopLimit` orders.
          example: 12.5
          nullable: true
          type: number
          x-konfig-original-example: 12.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-stop_price
        order_type:
          description: "The type of order placed. The most common values are `Market`,\
            \ `Limit`, `Stop`, and `StopLimit`. We try our best to map brokerage order\
            \ types to these values. When mapping fails, we will return the brokerage's\
            \ order type value."
          example: Market
          nullable: true
          type: string
          x-konfig-original-example: Market
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-order_type
        time_in_force:
          description: |
            The Time in Force type for the order. This field indicates how long the order will remain active before it is executed or expires. We try our best to map brokerage time in force values to the following. When mapping fails, we will return the brokerage's time in force value.
              - `Day` - Day. The order is valid only for the trading day on which it is placed.
              - `GTC` - Good Til Canceled. The order is valid until it is executed or canceled.
              - `FOK` - Fill Or Kill. The order must be executed in its entirety immediately or be canceled completely.
              - `IOC` - Immediate Or Cancel. The order must be executed immediately. Any portion of the order that cannot be filled immediately will be canceled.
              - `GTD` - Good Til Date. The order is valid until the specified date.
              - `MOO` - Market On Open. The order is to be executed at the day's opening price.
              - `EHP` - Extended Hours P.M. The order is to be placed during extended hour trading, after markets close.
          type: string
        time_placed:
          description: The time the order was placed. This is the time the order was
            submitted to the brokerage.
          example: 2024-07-30T22:51:49.746Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-07-30T22:51:49.746Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_placed
        time_updated:
          description: The time the order was last updated in the brokerage system.
            This value is not always available from the brokerage.
          example: 2024-08-05T00:05:57.409Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-08-05T00:05:57.409Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_updated
        time_executed:
          description: The time the order was executed in the brokerage system. This
            value is not always available from the brokerage.
          example: 2024-08-05T00:05:57.409Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-08-05T00:05:57.409Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_executed
        expiry_date:
          description: The time the order expires. This value is not always available
            from the brokerage.
          example: 2024-08-05T00:05:57.409Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-08-05T00:05:57.409Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountOrderRecord-properties-expiry_date
        symbol:
          deprecated: true
          description: "A unique ID for the security within SnapTrade, scoped to the\
            \ brokerage account that the security belongs to. This is a legacy field\
            \ and should not be used. Do not rely on this being a stable ID as it\
            \ can change."
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageSymbolID
      type: object
      x-konfig-is-used-in-successful-response: true
    AccountOrderRecordStatus:
      description: Indicates the status of an order. SnapTrade does a best effort
        to map brokerage statuses to statuses in this enum.
      enum:
      - NONE
      - PENDING
      - ACCEPTED
      - FAILED
      - REJECTED
      - CANCELED
      - PARTIAL_CANCELED
      - CANCEL_PENDING
      - EXECUTED
      - PARTIAL
      - REPLACE_PENDING
      - REPLACED
      - STOPPED
      - SUSPENDED
      - EXPIRED
      - QUEUED
      - TRIGGERED
      - ACTIVATED
      - PENDING_RISK_REVIEW
      - CONTINGENT_ORDER
      type: string
    OptionsPosition:
      additionalProperties: true
      description: Describes a single option position in an account.
      example:
        symbol:
          description: SPY CALL 7/17 200
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          option_symbol:
            ticker: AAPL  261218C00240000
            is_mini_option: false
            option_type: CALL
            underlying_symbol:
              figi_code: BBG000B9XRY4
              symbol: SPY
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: SPDR S&P 500 ETF Trust
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type: null
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            expiration_date: 2026-12-18T00:00:00.000+00:00
            strike_price: 240
        price: 38.4
        currency:
          code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
        units: -50
        average_purchase_price: 4126
      properties:
        symbol:
          $ref: '#/components/schemas/OptionBrokerageSymbol'
        price:
          description: "Last known market price _per share_ of the option contract.\
            \ The freshness of this price depends on the brokerage. Some brokerages\
            \ provide real-time prices, while others provide delayed prices. It is\
            \ recommended that you rely on your own third-party market data provider\
            \ for most up to date prices."
          example: 38.4
          nullable: true
          type: number
          x-konfig-original-example: 38.4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsPosition-properties-price
        units:
          description: "The number of contracts for this option position. A positive\
            \ number indicates a long position, while a negative number indicates\
            \ a short position."
          example: -50
          type: number
          x-konfig-original-example: -50
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsPosition-properties-units
        average_purchase_price:
          description: "Cost basis _per contract_ of this option position. To get\
            \ the cost basis _per share_, divide this value by the number of shares\
            \ per contract (usually 100)."
          example: 4126
          nullable: true
          type: number
          x-konfig-original-example: 4126
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsPosition-properties-average_purchase_price
        currency:
          $ref: '#/components/schemas/CurrencyNullable'
      type: object
      x-konfig-properties:
        currency:
          deprecated: true
          description: The currency of the price. This field is deprecated and will
            be removed in a future version. The currency of the price is determined
            by the currency of the underlying security.
          nullable: true
    OptionStrategy:
      additionalProperties: true
      example:
        number_of_legs: 2
        legs:
        - quantity: 10
          index: 1
          action: BUY_TO_OPEN
          option_symbol_id: AAPLC20221111
        - quantity: 10
          index: 1
          action: BUY_TO_OPEN
          option_symbol_id: AAPLC20221111
        strategy_type: BUTTERFLY
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        underlying_symbol_id:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        underlying_symbol_id:
          $ref: '#/components/schemas/UniversalSymbol'
        strategy_type:
          example: BUTTERFLY
          type: string
          x-konfig-original-example: BUTTERFLY
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-strategy_type
        number_of_legs:
          example: 2
          type: number
          x-konfig-original-example: 2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-number_of_legs
        legs:
          items:
            $ref: '#/components/schemas/OptionStrategy_legs_inner'
          type: array
      type: object
    StrategyQuotes:
      additionalProperties: true
      example:
        greek:
          delta: 0.1
          rho: 0.1
          theta: 0.1
          gamma: 0.1
          vega: 0.1
        volatility: 0.141
        strategy:
          number_of_legs: 2
          legs:
          - quantity: 10
            index: 1
            action: BUY_TO_OPEN
            option_symbol_id: AAPLC20221111
          - quantity: 10
            index: 1
            action: BUY_TO_OPEN
            option_symbol_id: AAPLC20221111
          strategy_type: BUTTERFLY
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          underlying_symbol_id:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
        open_price: 31.33
        bid_price: 31.33
        ask_price: 31.33
      properties:
        strategy:
          $ref: '#/components/schemas/OptionStrategy'
        open_price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
        bid_price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
        ask_price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
        volatility:
          example: 0.141
          type: number
          x-konfig-original-example: 0.141
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-volatility
        greek:
          $ref: '#/components/schemas/StrategyQuotes_greek'
      type: object
      x-konfig-is-used-in-successful-response: true
    StrategyOrderRecord:
      additionalProperties: true
      description: Strategy order record
      example:
        time_in_force: time_in_force
        execution_price: 31.33
        time_placed: 2022-01-21T20:11:19.217Z
        strategy:
          number_of_legs: 2
          legs:
          - quantity: 10
            index: 1
            action: BUY_TO_OPEN
            option_symbol_id: AAPLC20221111
          - quantity: 10
            index: 1
            action: BUY_TO_OPEN
            option_symbol_id: AAPLC20221111
          strategy_type: BUTTERFLY
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          underlying_symbol_id:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
        filled_quantity: 10
        order_type: order_type
        limit_price: 31.33
        open_quantity: 10
        closed_quantity: 10
        time_updated: 2022-01-21T20:11:19.217Z
        status: PENDING
      properties:
        strategy:
          $ref: '#/components/schemas/OptionStrategy'
        status:
          enum:
          - PENDING
          - ACCEPTED
          - FAILED
          - REJECTED
          - CANCELED
          - PARTIAL_CANCELED
          - CANCEL_PENDING
          - EXECUTED
          - PARTIAL
          - REPLACE_PENDING
          - REPLACED
          - STOPPED
          - SUSPENDED
          - EXPIRED
          - QUEUED
          - TRIGGERED
          - ACTIVATED
          - PENDING_RISK_REVIEW
          - CONTINGENT_ORDER
          type: string
        filled_quantity:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-filled_quantity
        open_quantity:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-open_quantity
        closed_quantity:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-closed_quantity
        order_type:
          description: Order Type potential values include (but are not limited to)
            - Limit - Market - StopLimit - Stop
          nullable: true
          type: string
        time_in_force:
          description: |
            Trade time in force examples:
              * FOK - Fill Or Kill
              * Day - Day
              * GTC - Good Til Canceled
              * GTD - Good Til Date
          type: string
        limit_price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
        execution_price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
        time_placed:
          description: Time
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time
        time_updated:
          description: Time
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time
      type: object
      x-konfig-is-used-in-successful-response: true
    SnapTradeHoldingsAccount:
      additionalProperties: true
      description: SnapTradeUser Investment Account
      example:
        number: Q6542138443
        brokerage_authorization:
          brokerage:
            maintenance_mode: true
            allows_fractional_units: true
            exchanges:
            - 2bcd7cc3-e922-4976-bce1-9858296801c3
            - 4bcd8cc3-c122-4974-dc21-1858296801f4
            description: "Robinhood is an American multinational financial services\
              \ corporation based in Menlo Park, California."
            open_url: http://example.com/aeiou
            display_name: Robinhood
            url: https://robinhood.com
            enabled: true
            allows_trading: true
            has_reporting: true
            aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
            is_real_time_connection: true
            name: Robinhood
            id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
            brokerage_type:
              name: Traditional Brokerage
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            slug: ROBINHOOD
            aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
          disabled_date: 2022-01-21T20:11:19.217Z
          meta:
            identifier: 123456
          name: Connection-1
          disabled: false
          id: 87b24961-b51e-4db8-9226-f198f6518a89
          created_date: 2024-08-20T21:56:19.123Z
          updated_date: 2024-08-20T21:56:20.057Z
          type: trade
        meta:
          type: Margin
          status: ACTIVE
          institution_name: Alpaca
        name: Registered Retirement Savings Account
        sync_status:
          holdings:
            last_successful_sync: 2000-01-23T04:56:07.000+00:00
            initial_sync_completed: true
          transactions:
            last_successful_sync: 2022-01-24T00:00:00.000+00:00
            initial_sync_completed: true
            first_transaction_date: ""
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        portfolio_group: 2bcd7cc3-e922-4976-bce1-9858296801c3
        institution_name: Alpaca
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        brokerage_authorization:
          $ref: '#/components/schemas/BrokerageAuthorization'
        portfolio_group:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        name:
          example: Registered Retirement Savings Account
          nullable: true
          type: string
          x-konfig-original-example: Registered Retirement Savings Account
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-name
        number:
          example: Q6542138443
          type: string
          x-konfig-original-example: Q6542138443
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-number
        institution_name:
          example: Alpaca
          type: string
          x-konfig-original-example: Alpaca
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-institution_name
        sync_status:
          $ref: '#/components/schemas/AccountSyncStatus'
        meta:
          additionalProperties: true
          example:
            type: Margin
            status: ACTIVE
            institution_name: Alpaca
          type: object
          x-konfig-original-example:
            type: Margin
            status: ACTIVE
            institution_name: Alpaca
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-meta
      type: object
    SnapTradeHoldingsTotalValue:
      additionalProperties: true
      deprecated: true
      description: |
        This field is deprecated. To get the brokerage reported total market value of the account, please refer to `account.balance.total`.

        The total market value of the account. Note that this field is calculated based on the sum of the values of account positions and cash balances known to SnapTrade. It may not be accurate if the brokerage account has holdings that SnapTrade is not aware of. For example, if the brokerage account holds assets that SnapTrade does not support, the total value may be underreported. In certain cases, this value may also be double-counting cash-equivalent assets if those assets are represented as both cash and positions in the account.
      example:
        currency: USD
        value: 32600.71
      properties:
        value:
          description: Total value denominated in the currency of the `currency` field.
          example: 32600.71
          nullable: true
          type: number
          x-konfig-original-example: 32600.71
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsTotalValue-properties-value
        currency:
          description: The ISO-4217 currency code for the amount.
          example: USD
          nullable: true
          type: string
          x-konfig-original-example: USD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeHoldingsTotalValue-properties-currency
      type: object
    Balance:
      additionalProperties: true
      description: Holds balance information for a single currency in an account.
      example:
        currency: null
        cash: 300.71
        buying_power: 410.71
      properties:
        currency:
          $ref: '#/components/schemas/Balance_currency'
        cash:
          description: The amount of available cash in the account denominated in
            the currency of the `currency` field.
          example: 300.71
          nullable: true
          type: number
          x-konfig-original-example: 300.71
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Balance-properties-cash
        buying_power:
          description: "Buying power only applies to margin accounts. For non-margin\
            \ accounts, buying power should be the same as cash. Please note that\
            \ this field is not always available for all brokerages."
          example: 410.71
          nullable: true
          type: number
          x-konfig-original-example: 410.71
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Balance-properties-buying_power
      type: object
    CurrencyID:
      description: Unique identifier for the currency. This is the UUID used to reference
        the currency in SnapTrade.
      example: 87b24961-b51e-4db8-9226-f198f6518a89
      format: uuid
      type: string
      x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-CurrencyID
    Currency:
      additionalProperties: true
      description: Describes a currency object.
      example:
        code: USD
        name: US Dollar
        id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        id:
          description: Unique identifier for the currency. This is the UUID used to
            reference the currency in SnapTrade.
          example: 87b24961-b51e-4db8-9226-f198f6518a89
          format: uuid
          type: string
          x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CurrencyID
        code:
          description: The ISO-4217 currency code for the currency.
          example: USD
          type: string
          x-konfig-original-example: USD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Currency-properties-code
        name:
          description: A human-friendly name of the currency.
          example: US Dollar
          type: string
          x-konfig-original-example: US Dollar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Currency-properties-name
      type: object
    Exchange:
      additionalProperties: true
      description: Describes a single stock or crypto exchange.
      example:
        start_time: 09:30:00
        mic_code: XTSE
        code: TSX
        timezone: America/New_York
        name: Toronto Stock Exchange
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        close_time: "57600"
        suffix: .TO
      properties:
        id:
          description: Unique ID for the exchange in SnapTrade.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ExchangeID
        code:
          description: "A short name for the exchange. For standardized exchange code,\
            \ please us the `mic_code` field."
          example: TSX
          type: string
          x-konfig-original-example: TSX
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-code
        mic_code:
          description: "The [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code)\
            \ (MIC) for the exchange."
          example: XTSE
          type: string
          x-konfig-original-example: XTSE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-mic_code
        name:
          description: The full name of the exchange.
          example: Toronto Stock Exchange
          type: string
          x-konfig-original-example: Toronto Stock Exchange
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-name
        timezone:
          description: The timezone for the trading hours (`start_time` and `close_time`)
            of the exchange.
          example: America/New_York
          type: string
          x-konfig-original-example: America/New_York
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-timezone
        start_time:
          description: The time when the exchange opens for trading.
          example: 09:30:00
          type: string
          x-konfig-original-example: 09:30:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-start_time
        close_time:
          description: The time when the exchange closes for trading.
          example: "57600"
          type: string
          x-konfig-original-example: 57600
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-close_time
        suffix:
          description: "The suffix to be appended to the symbol when trading on this\
            \ exchange. For example, the suffix for the Toronto Stock Exchange is\
            \ `.TO`. See `UniversalSymbol->symbol` and `UniversalSymbol->raw_symbol`\
            \ for more detail."
          example: .TO
          nullable: true
          type: string
          x-konfig-original-example: .TO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Exchange-properties-suffix
      type: object
    USExchange:
      additionalProperties: true
      description: US Stock Exchange
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        code:
          example: ARCX
          type: string
          x-konfig-original-example: ARCX
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-code
        mic_code:
          example: ARCA
          type: string
          x-konfig-original-example: ARCA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-mic_code
        name:
          example: NYSE ARCA
          type: string
          x-konfig-original-example: NYSE ARCA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-name
        timezone:
          example: America/New_York
          type: string
          x-konfig-original-example: America/New_York
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-timezone
        start_time:
          example: 09:30:00
          type: string
          x-konfig-original-example: 09:30:00
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-start_time
        close_time:
          example: "57600"
          type: string
          x-konfig-original-example: 57600
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-close_time
        suffix:
          example: None
          nullable: true
          type: string
          x-konfig-original-example: None
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-suffix
        allows_cryptocurrency_symbols:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-USExchange-properties-allows_cryptocurrency_symbols
      type: object
    LoginRedirectURI:
      description: Redirect uri upon successful login
      properties:
        redirectURI:
          description: Connection Portal link to redirect user to connect a brokerage
            account.
          example: https://app.snaptrade.com/snapTrade/redeemToken?token=npVKchZrL0MYIHTusGfADT74r4xXpHkmbxbQDmt0RINLXbQ5cWsvGkPSgMQRxz8/cnxjzL9T2NWLuHuDyidHiCNeXXTb/tVhzC2olSyfxWW6DRrkUppArGCdmkIHyBMzog6C55P8yoqzcGer5Hml0Q%3D%3D&clientId=WEALTHLY&broker=ROBINHOOD&connectionPortalVersion=v4&sessionId=cf371bb4-a475-4f17-ab94-d0fee699960d
          type: string
          x-konfig-original-example: https://app.snaptrade.com/snapTrade/redeemToken?token=npVKchZrL0MYIHTusGfADT74r4xXpHkmbxbQDmt0RINLXbQ5cWsvGkPSgMQRxz8/cnxjzL9T2NWLuHuDyidHiCNeXXTb/tVhzC2olSyfxWW6DRrkUppArGCdmkIHyBMzog6C55P8yoqzcGer5Hml0Q%3D%3D&clientId=WEALTHLY&broker=ROBINHOOD&connectionPortalVersion=v4&sessionId=cf371bb4-a475-4f17-ab94-d0fee699960d
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LoginRedirectURI-properties-redirectURI
        sessionId:
          description: ID to identify the connection portal session.
          example: cf371bb4-a475-4f17-ab94-d0fee699960d
          type: string
          x-konfig-original-example: cf371bb4-a475-4f17-ab94-d0fee699960d
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LoginRedirectURI-properties-sessionId
      type: object
    ClientID:
      description: SnapTrade Client ID (generated and provided to partner by SnapTrade)
      example: SNAPTRADETEST
      type: string
      x-konfig-original-example: SNAPTRADETEST
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ClientID
    UserID:
      description: "SnapTrade User ID. This is chosen by the API partner and can be\
        \ any string that is a) unique to the user, and b) immutable for the user.\
        \ It is recommended to NOT use email addresses for this property because they\
        \ are usually not immutable."
      example: snaptrade-user-123
      type: string
      x-konfig-original-example: snaptrade-user-123
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserID
    UserSecret:
      description: "SnapTrade User Secret. This is a randomly generated string and\
        \ should be stored securely. If compromised, please rotate it via the [rotate\
        \ user secret endpoint](/reference/Authentication/Authentication_resetSnapTradeUserSecret)."
      example: adf2aa34-8219-40f7-a6b3-60156985cc61
      type: string
      x-konfig-original-example: adf2aa34-8219-40f7-a6b3-60156985cc61
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserSecret
    PerformanceCustom:
      additionalProperties: true
      description: Performance Custom Response Object
      example:
        fees: 2.72
        detailedMode: true
        dividendIncome: 135.97
        returnRateTimeframe:
        - rateOfReturn: 0.012312367452
          periodStart: 2022-01-24T00:00:00.000+00:00
          periodEnd: 2022-01-24T00:00:00.000+00:00
        - rateOfReturn: 0.012312367452
          periodStart: 2022-01-24T00:00:00.000+00:00
          periodEnd: 2022-01-24T00:00:00.000+00:00
        forexFees: 5.26
        totalEquityTimeframe:
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        rateOfReturn: 0.082312367452
        contributionTimeframeCumulative:
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        contributionTotalMonths: 13
        contributions:
          date: 2022-01-24T00:00:00.000+00:00
          contributions: 524.74
          currency: CAD
        withdrawalTimeframe:
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        commissions: 3.26
        dividends:
        - symbol:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          amount: 165.05
          currency: USD
        - symbol:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          amount: 165.05
          currency: USD
        contributionStreak: 5
        contributionMonthsContributed: 10
        badTickers:
        - MAW105
        - MAW105
        monthlyDividends: 26.37
        dividendTimeline:
        - date: 2022-01-24T00:00:00.000+00:00
          dividends:
          - symbol: AAPL
            amount: 6.82
            currency: CAD
          - symbol: AAPL
            amount: 6.82
            currency: CAD
        - date: 2022-01-24T00:00:00.000+00:00
          dividends:
          - symbol: AAPL
            amount: 6.82
            currency: CAD
          - symbol: AAPL
            amount: 6.82
            currency: CAD
        contributionTimeframe:
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
        - date: 2022-01-24T00:00:00.000+00:00
          currency: CAD
          value: 52.74
      properties:
        totalEquityTimeframe:
          items:
            $ref: '#/components/schemas/PastValue'
          type: array
        contributions:
          $ref: '#/components/schemas/NetContributions'
        contributionTimeframe:
          items:
            $ref: '#/components/schemas/PastValue'
          type: array
        contributionTimeframeCumulative:
          items:
            $ref: '#/components/schemas/PastValue'
          type: array
        withdrawalTimeframe:
          items:
            $ref: '#/components/schemas/PastValue'
          type: array
        contributionStreak:
          description: Current streak of cosecutive months where contributions were
            made
          example: 5
          nullable: true
          type: number
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionStreak
        contributionMonthsContributed:
          description: Number of months in the timeframe with contributions
          example: 10
          nullable: true
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionMonthsContributed
        contributionTotalMonths:
          description: Total months in timeframe
          example: 13
          nullable: true
          type: number
          x-konfig-original-example: 13
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionTotalMonths
        dividends:
          items:
            $ref: '#/components/schemas/NetDividend'
          type: array
        dividendIncome:
          description: Total dividends received over the timeframe
          example: 135.97
          nullable: true
          type: number
          x-konfig-original-example: 135.97
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-dividendIncome
        monthlyDividends:
          description: Average dividends received per month over the timeframe
          example: 26.37
          nullable: true
          type: number
          x-konfig-original-example: 26.37
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-monthlyDividends
        badTickers:
          description: list of tickers which may not be supported or may not have
            accurate price data
          items:
            example: MAW105
            nullable: true
            type: string
            x-konfig-original-example: MAW105
            x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-badTickers-items
          type: array
        dividendTimeline:
          items:
            $ref: '#/components/schemas/MonthlyDividends'
          type: array
        commissions:
          description: commissions incurred during the timeframe
          example: 3.26
          nullable: true
          type: number
          x-konfig-original-example: 3.26
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-commissions
        forexFees:
          description: forex fees incurred during the timeframe
          example: 5.26
          nullable: true
          type: number
          x-konfig-original-example: 5.26
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-forexFees
        fees:
          description: other fees incurred during the timeframe
          example: 2.72
          nullable: true
          type: number
          x-konfig-original-example: 2.72
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-fees
        rateOfReturn:
          description: The return rate over the timeframe. Annualized if timeframe
            is longer than 1 year
          example: 0.082312367452
          nullable: true
          type: number
          x-konfig-original-example: 0.082312367452
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PerformanceCustom-properties-rateOfReturn
        returnRateTimeframe:
          items:
            $ref: '#/components/schemas/SubPeriodReturnRate'
          type: array
        detailedMode:
          description: Whether the user has detailed mode enabled (more frequent data
            points for totalEquity and contribution timeframes)
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    SubPeriodReturnRate:
      additionalProperties: true
      example:
        rateOfReturn: 0.012312367452
        periodStart: 2022-01-24T00:00:00.000+00:00
        periodEnd: 2022-01-24T00:00:00.000+00:00
      properties:
        periodStart:
          description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
            format). These dates are inclusive.
          example: 2022-01-24
          format: date
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
        periodEnd:
          description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
            format). These dates are inclusive.
          example: 2022-01-24
          format: date
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
        rateOfReturn:
          description: The return rate for the given period
          example: 0.012312367452
          nullable: true
          type: number
          x-konfig-original-example: 0.012312367452
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SubPeriodReturnRate-properties-rateOfReturn
      type: object
    DividendAtDate:
      additionalProperties: true
      example:
        symbol: AAPL
        amount: 6.82
        currency: CAD
      properties:
        symbol:
          description: The ticker of the symbol that the dividend came from
          example: AAPL
          nullable: true
          type: string
          x-konfig-original-example: AAPL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DividendAtDate-properties-symbol
        amount:
          description: The amount received from the dividend
          example: 6.82
          nullable: true
          type: number
          x-konfig-original-example: 6.82
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DividendAtDate-properties-amount
        currency:
          description: The currency of the amount
          example: CAD
          type: string
          x-konfig-original-example: CAD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DividendAtDate-properties-currency
      type: object
    PartnerData:
      additionalProperties: true
      description: "Configurations for your SnapTrade Client ID, including allowed\
        \ brokerages and data access."
      example:
        can_access_trades: true
        can_access_holdings: true
        can_access_account_history: true
        can_access_orders: true
        pin_required: false
        logo_url: https://example.com/logo.png
        can_access_reference_data: true
        name: Wealthly
        can_access_portfolio_management: true
        redirect_uri: https://example.com/oauth/snaptrade
        slug: WEALTHLY
        allowed_brokerages:
        - maintenance_mode: true
          allows_fractional_units: true
          exchanges:
          - 2bcd7cc3-e922-4976-bce1-9858296801c3
          - 4bcd8cc3-c122-4974-dc21-1858296801f4
          description: "Robinhood is an American multinational financial services\
            \ corporation based in Menlo Park, California."
          open_url: http://example.com/aeiou
          display_name: Robinhood
          url: https://robinhood.com
          enabled: true
          allows_trading: true
          has_reporting: true
          aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
          is_real_time_connection: true
          name: Robinhood
          id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
          brokerage_type:
            name: Traditional Brokerage
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          slug: ROBINHOOD
          aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
        - maintenance_mode: true
          allows_fractional_units: true
          exchanges:
          - 2bcd7cc3-e922-4976-bce1-9858296801c3
          - 4bcd8cc3-c122-4974-dc21-1858296801f4
          description: "Robinhood is an American multinational financial services\
            \ corporation based in Menlo Park, California."
          open_url: http://example.com/aeiou
          display_name: Robinhood
          url: https://robinhood.com
          enabled: true
          allows_trading: true
          has_reporting: true
          aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
          is_real_time_connection: true
          name: Robinhood
          id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
          brokerage_type:
            name: Traditional Brokerage
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          slug: ROBINHOOD
          aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
      properties:
        slug:
          description: "A short, unique identifier for your company or product."
          example: WEALTHLY
          type: string
          x-konfig-original-example: WEALTHLY
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-slug
        name:
          description: Your company or product name.
          example: Wealthly
          type: string
          x-konfig-original-example: Wealthly
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-name
        logo_url:
          description: URL to your company or product logo.
          example: https://example.com/logo.png
          type: string
          x-konfig-original-example: https://example.com/logo.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-logo_url
        allowed_brokerages:
          description: Brokerages that can be accessed by your Client ID.
          items:
            $ref: '#/components/schemas/Brokerage'
          type: array
        can_access_trades:
          description: Whether trading is enabled for your SnapTrade Client ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_trades
        can_access_holdings:
          description: Whether holdings data is enabled for your SnapTrade Client
            ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_holdings
        can_access_account_history:
          description: Whether account historical transactions is enabled for your
            SnapTrade Client ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_account_history
        can_access_reference_data:
          description: Whether reference data is enabled for your SnapTrade Client
            ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_reference_data
        can_access_portfolio_management:
          description: Whether portfolio management is enabled for your SnapTrade
            Client ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_portfolio_management
        can_access_orders:
          description: Whether recent order history is enabled for your SnapTrade
            Client ID.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-can_access_orders
        redirect_uri:
          description: URI to redirect user back to after user is done adding brokerage
            connections.
          example: https://example.com/oauth/snaptrade
          type: string
          x-konfig-original-example: https://example.com/oauth/snaptrade
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-redirect_uri
        pin_required:
          deprecated: true
          description: Shows if pin is required by users to access connection page.
            This field has been deprecated.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PartnerData-properties-pin_required
      type: object
      x-konfig-is-used-in-successful-response: true
    Position:
      additionalProperties: true
      description: Describes a single stock/ETF/crypto/mutual fund position in an
        account.
      example:
        symbol:
          is_quotable: true
          symbol:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          is_tradable: true
          local_id: "3291231"
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        fractional_units: 1.44
        price: 113.15
        open_pnl: 0.44
        units: 40
        average_purchase_price: 108.3353
      properties:
        symbol:
          $ref: '#/components/schemas/PositionSymbol'
        units:
          description: The number of shares of the position. This can be fractional
            or integer units.
          example: 40
          nullable: true
          type: number
          x-konfig-original-example: 40
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Position-properties-units
        price:
          description: "Last known market price for the symbol. The freshness of this\
            \ price depends on the brokerage. Some brokerages provide real-time prices,\
            \ while others provide delayed prices. It is recommended that you rely\
            \ on your own third-party market data provider for most up to date prices."
          example: 113.15
          nullable: true
          type: number
          x-konfig-original-example: 113.15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Position-properties-price
        open_pnl:
          description: "The profit or loss on the position since it was opened. This\
            \ is calculated as the difference between the current market value of\
            \ the position and the total cost of the position. It is recommended to\
            \ calculate this value using the average purchase price and the current\
            \ market price yourself, instead of relying on this field."
          example: 0.44
          nullable: true
          type: number
          x-konfig-original-example: 0.44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Position-properties-open_pnl
        average_purchase_price:
          description: Cost basis _per share_ of this position.
          example: 108.3353
          nullable: true
          type: number
          x-konfig-original-example: 108.3353
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Position-properties-average_purchase_price
        fractional_units:
          deprecated: true
          description: "Deprecated, use the `units` field for both fractional and\
            \ integer units going forward"
          example: 1.44
          nullable: true
          type: number
          x-konfig-original-example: 1.44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Position-properties-fractional_units
      type: object
    SnapTradeRegisterUserRequestBody:
      description: Data required to register a user via SnapTrade Partner
      example:
        userId: snaptrade-user-123
      properties:
        userId:
          description: "SnapTrade User ID. This is chosen by the API partner and can\
            \ be any string that is a) unique to the user, and b) immutable for the\
            \ user. It is recommended to NOT use email addresses for this property\
            \ because they are usually not immutable."
          example: snaptrade-user-123
          type: string
          x-konfig-original-example: snaptrade-user-123
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserID
      type: object
    SnapTradeLoginUserRequestBody:
      description: Data to login a user via SnapTrade Partner
      example:
        connectionPortalVersion: v4
        reconnect: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
        immediateRedirect: true
        customRedirect: https://snaptrade.com
        broker: ALPACA
        connectionType: read
      properties:
        broker:
          description: "Slug of the brokerage to connect the user to. See [the integrations\
            \ page](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=3cfea70ef4254afc89704e47275a7a9a&pvs=4)\
            \ for a list of supported brokerages and their slugs."
          example: ALPACA
          type: string
          x-konfig-original-example: ALPACA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-broker
        immediateRedirect:
          description: "When set to `true`, user will be redirected back to the partner's\
            \ site instead of the connection portal. This parameter is ignored if\
            \ the connection portal is loaded inside an iframe. See the [guide on\
            \ ways to integrate the connection portal](/docs/implement-connection-portal)\
            \ for more information."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-immediateRedirect
        customRedirect:
          description: "URL to redirect the user to after the user connects their\
            \ brokerage account. This parameter is ignored if the connection portal\
            \ is loaded inside an iframe. See the [guide on ways to integrate the\
            \ connection portal](/docs/implement-connection-portal) for more information."
          example: https://snaptrade.com
          type: string
          x-konfig-original-example: https://snaptrade.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-customRedirect
        reconnect:
          description: "The UUID of the brokerage connection to be reconnected. This\
            \ parameter should be left empty unless you are reconnecting a disabled\
            \ connection. See the [guide on fixing broken connections](/docs/fix-broken-connections)\
            \ for more information."
          example: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
          type: string
          x-konfig-original-example: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-reconnect
        connectionType:
          default: read
          description: Sets whether the connection should be read-only or trade-enabled.
            Defaults to read-only if not specified.
          enum:
          - read
          - trade
          example: read
          type: string
          x-konfig-original-example: read
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionType
        connectionPortalVersion:
          default: v4
          description: Sets the connection portal version to render. Currently only
            v4 is supported and is the default. All other versions are deprecated
            and will automatically be set to v4.
          enum:
          - v4
          - v3
          - v2
          example: v4
          type: string
          x-konfig-original-example: v4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionPortalVersion
      type: object
    Symbol:
      additionalProperties: true
      description: Uniquely describes a single security + exchange combination across
        all brokerages.
      properties:
        id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        symbol:
          description: "The security's trading ticker symbol. For example \"AAPL\"\
            \ for Apple Inc. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click\
            \ on \"Yahoo Finance Market Coverage and Data Delays\"). For example,\
            \ for securities traded on the Toronto Stock Exchange, the symbol has\
            \ a '.TO' suffix. For securities traded on NASDAQ or NYSE, the symbol\
            \ does not have a suffix."
          example: VAB.TO
          type: string
          x-konfig-original-example: VAB.TO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-symbol
        raw_symbol:
          description: "The raw symbol is `symbol` with the exchange suffix removed.\
            \ For example, if `symbol` is \"VAB.TO\", then `raw_symbol` is \"VAB\"\
            ."
          example: VAB
          type: string
          x-konfig-original-example: VAB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-raw_symbol
        description:
          description: A human-readable description of the security. This is usually
            the company name or ETF name.
          example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          nullable: true
          type: string
          x-konfig-original-example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-description
        currency:
          $ref: '#/components/schemas/Symbol_currency'
        exchange:
          $ref: '#/components/schemas/Symbol_exchange'
        type:
          $ref: '#/components/schemas/SecurityType'
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information. This value should be the same as the `figi_code`\
            \ in the `figi_instrument` child property."
          example: BBG000B9XRY4
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9XRY4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-figi_code
        figi_instrument:
          $ref: '#/components/schemas/FigiInstrumentNullable'
      type: object
      x-konfig-properties:
        figi_instrument:
          nullable: true
    UserIDandSecret:
      example:
        userSecret: adf2aa34-8219-40f7-a6b3-60156985cc61
        userId: snaptrade-user-123
      properties:
        userId:
          description: "SnapTrade User ID. This is chosen by the API partner and can\
            \ be any string that is a) unique to the user, and b) immutable for the\
            \ user. It is recommended to NOT use email addresses for this property\
            \ because they are usually not immutable."
          example: snaptrade-user-123
          type: string
          x-konfig-original-example: snaptrade-user-123
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserID
        userSecret:
          description: "SnapTrade User Secret. This is a randomly generated string\
            \ and should be stored securely. If compromised, please rotate it via\
            \ the [rotate user secret endpoint](/reference/Authentication/Authentication_resetSnapTradeUserSecret)."
          example: adf2aa34-8219-40f7-a6b3-60156985cc61
          type: string
          x-konfig-original-example: adf2aa34-8219-40f7-a6b3-60156985cc61
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserSecret
      type: object
      x-konfig-is-used-in-successful-response: true
    UserList:
      description: List of registered SnapTrade user IDs
      example:
      - user1
      - user2
      - user3
      items:
        $ref: '#/components/schemas/UserID'
      type: array
      x-konfig-original-example:
      - user1
      - user2
      - user3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserList
      x-konfig-is-used-in-successful-response: true
    DeleteUserResponse:
      additionalProperties: true
      example:
        detail: User queued for deletion; please wait for webhook for confirmation.
        userId: snaptrade-user-123
        status: deleted
      properties:
        status:
          description: This is always `deleted` when a user is queued for deletion.
          example: deleted
          type: string
          x-konfig-original-example: deleted
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DeleteUserResponse-properties-status
        detail:
          description: Human friendly message about the deletion status.
          example: User queued for deletion; please wait for webhook for confirmation.
          type: string
          x-konfig-original-example: User queued for deletion; please wait for webhook
            for confirmation.
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-DeleteUserResponse-properties-detail
        userId:
          description: "SnapTrade User ID. This is chosen by the API partner and can\
            \ be any string that is a) unique to the user, and b) immutable for the\
            \ user. It is recommended to NOT use email addresses for this property\
            \ because they are usually not immutable."
          example: snaptrade-user-123
          type: string
          x-konfig-original-example: snaptrade-user-123
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserID
      type: object
      x-konfig-is-used-in-successful-response: true
    BrokerageAuthorizationTypeReadOnly:
      additionalProperties: true
      example:
        brokerage:
          name: Questrade
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          slug: QUESTRADE
        auth_type: OAUTH
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        type: read
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        type:
          enum:
          - read
          - trade
          type: string
        auth_type:
          enum:
          - OAUTH
          - SCRAPE
          - UNOFFICIAL_API
          - TOKEN
          type: string
        brokerage:
          $ref: '#/components/schemas/BrokerageAuthorizationTypeReadOnly_brokerage'
      type: object
    Brokerage:
      additionalProperties: true
      description: Describes a brokerage that SnapTrade supports.
      example:
        maintenance_mode: true
        allows_fractional_units: true
        exchanges:
        - 2bcd7cc3-e922-4976-bce1-9858296801c3
        - 4bcd8cc3-c122-4974-dc21-1858296801f4
        description: "Robinhood is an American multinational financial services corporation\
          \ based in Menlo Park, California."
        open_url: http://example.com/aeiou
        display_name: Robinhood
        url: https://robinhood.com
        enabled: true
        allows_trading: true
        has_reporting: true
        aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
        is_real_time_connection: true
        name: Robinhood
        id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
        brokerage_type:
          name: Traditional Brokerage
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        slug: ROBINHOOD
        aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
      properties:
        id:
          description: Unique identifier for the brokerage firm. This is the UUID
            used to reference the brokerage in SnapTrade.
          example: ebf91a5b-0920-4266-9e36-f6cfe8c40946
          format: uuid
          type: string
          x-konfig-original-example: ebf91a5b-0920-4266-9e36-f6cfe8c40946
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-id
        slug:
          description: "A short, unique identifier for the brokerage. It is usually\
            \ the name of the brokerage in capital letters and will never change."
          example: ROBINHOOD
          type: string
          x-konfig-original-example: ROBINHOOD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-slug
        name:
          description: Full name of the brokerage.
          example: Robinhood
          type: string
          x-konfig-original-example: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-name
        display_name:
          description: A display-friendly name of the brokerage.
          example: Robinhood
          type: string
          x-konfig-original-example: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-display_name
        description:
          description: A brief description of the brokerage.
          example: "Robinhood is an American multinational financial services corporation\
            \ based in Menlo Park, California."
          type: string
          x-konfig-original-example: "Robinhood is an American multinational financial\
            \ services corporation based in Menlo Park, California."
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-description
        aws_s3_logo_url:
          description: URL to the brokerage's logo.
          example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
          format: url
          type: string
          x-konfig-original-example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-aws_s3_logo_url
        aws_s3_square_logo_url:
          description: URL to the brokerage's logo in square format.
          example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
          format: url
          nullable: true
          type: string
          x-konfig-original-example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-aws_s3_square_logo_url
        url:
          description: URL to the brokerage's website.
          example: https://robinhood.com
          format: url
          type: string
          x-konfig-original-example: https://robinhood.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-url
        enabled:
          description: Whether the brokerage is enabled in SnapTrade. A disabled brokerage
            will not be available for new connections.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-enabled
        maintenance_mode:
          description: Whether the brokerage is currently in maintenance mode. A brokerage
            in maintenance mode will not be available for new connections.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-maintenance_mode
        allows_trading:
          description: Whether the brokerage allows trading through SnapTrade.
          example: true
          nullable: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-allows_trading
        allows_fractional_units:
          deprecated: true
          description: This field is deprecated. Please contact us if you have a valid
            use case for it.
          example: true
          nullable: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-allows_fractional_units
        has_reporting:
          deprecated: true
          description: This field is deprecated. Please contact us if you have a valid
            use case for it.
          example: true
          nullable: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-has_reporting
        is_real_time_connection:
          deprecated: true
          description: This field is deprecated. Please contact us if you have a valid
            use case for it.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-is_real_time_connection
        brokerage_type:
          $ref: '#/components/schemas/BrokerageType'
        exchanges:
          deprecated: true
          description: This field is deprecated. Please contact us if you have a valid
            use case for it.
          example:
          - 2bcd7cc3-e922-4976-bce1-9858296801c3
          - 4bcd8cc3-c122-4974-dc21-1858296801f4
          items: {}
          type: array
          x-konfig-original-example:
          - 2bcd7cc3-e922-4976-bce1-9858296801c3
          - 4bcd8cc3-c122-4974-dc21-1858296801f4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Brokerage-properties-exchanges
        open_url:
          deprecated: true
          description: This field is deprecated.
          format: url
          nullable: true
          type: string
      type: object
    BrokerageAuthorization:
      additionalProperties: true
      description: |
        A single connection with a brokerage. Note that `Connection` and `Brokerage Authorization` are interchangeable, but the term `Connection` is preferred and used in the doc for consistency.

        A connection is usually tied to a single login at a brokerage. A single connection can contain multiple brokerage accounts.

        SnapTrade performs de-duping on connections for a given user. If the user has an existing connection with the brokerage, when connecting the brokerage with the same credentials, SnapTrade will return the existing connection instead of creating a new one.
      example:
        brokerage:
          maintenance_mode: true
          allows_fractional_units: true
          exchanges:
          - 2bcd7cc3-e922-4976-bce1-9858296801c3
          - 4bcd8cc3-c122-4974-dc21-1858296801f4
          description: "Robinhood is an American multinational financial services\
            \ corporation based in Menlo Park, California."
          open_url: http://example.com/aeiou
          display_name: Robinhood
          url: https://robinhood.com
          enabled: true
          allows_trading: true
          has_reporting: true
          aws_s3_square_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
          is_real_time_connection: true
          name: Robinhood
          id: ebf91a5b-0920-4266-9e36-f6cfe8c40946
          brokerage_type:
            name: Traditional Brokerage
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          slug: ROBINHOOD
          aws_s3_logo_url: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
        disabled_date: 2022-01-21T20:11:19.217Z
        meta:
          identifier: 123456
        name: Connection-1
        disabled: false
        id: 87b24961-b51e-4db8-9226-f198f6518a89
        created_date: 2024-08-20T21:56:19.123Z
        updated_date: 2024-08-20T21:56:20.057Z
        type: trade
      properties:
        id:
          description: Unique identifier for the connection. This is the UUID used
            to reference the connection in SnapTrade.
          example: 87b24961-b51e-4db8-9226-f198f6518a89
          format: uuid
          type: string
          x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthID
        created_date:
          description: Timestamp of when the connection was established in SnapTrade.
          example: 2024-08-20T21:56:19.123Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-08-20T21:56:19.123Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-created_date
        brokerage:
          $ref: '#/components/schemas/Brokerage'
        name:
          description: "A short, human-readable name for the connection."
          example: Connection-1
          type: string
          x-konfig-original-example: Connection-1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-name
        type:
          description: "Whether the connection is read-only or trade-enabled. A read-only\
            \ connection can only be used to fetch data, while a trade-enabled connection\
            \ can be used to place trades. Valid values are `read` and `trade`."
          example: trade
          type: string
          x-konfig-original-example: trade
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-type
        disabled:
          description: |
            Whether the connection is disabled. A disabled connection can no longer access the latest data from the brokerage, but will continue to return the last cached state. A connection can become disabled for many reasons and differs by brokerage. Here are some common scenarios:

            - The user has changed their username or password at the brokerage.
            - The user has explicitly removed the access grant at the brokerage.
            - The session has expired at the brokerage and now requires explicit user re-authentication.

            Please see [this guide](/docs/fix-broken-connections) on how to fix a disabled connection.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-disabled
        disabled_date:
          description: Timestamp of when the connection was disabled in SnapTrade.
          example: 2022-01-21T20:11:19.217Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-disabled_date
        meta:
          additionalProperties: true
          deprecated: true
          description: Additional data about the connection. This information is specific
            to the brokerage and there's no standard format for this data. This field
            is deprecated and subject to removal in a future version.
          example:
            identifier: 123456
          type: object
          x-konfig-original-example:
            identifier: 123456
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-meta
        updated_date:
          deprecated: true
          description: Timestamp of when the connection was last updated in SnapTrade.
            This field is deprecated. Please let us know if you have a valid use case
            for this field.
          example: 2024-08-20T21:56:20.057Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-08-20T21:56:20.057Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-updated_date
      type: object
      x-konfig-is-used-in-successful-response: true
    BrokerageAuthorizationRefreshConfirmation:
      additionalProperties: true
      description: Confirmation that the syncs have been scheduled.
      example:
        detail: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf scheduled for refresh
      properties:
        detail:
          description: Refresh confirmation details
          example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf scheduled for refresh
          type: string
          x-konfig-original-example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf
            scheduled for refresh
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorizationRefreshConfirmation-properties-detail
      type: object
      x-konfig-is-used-in-successful-response: true
    BrokerageAuthorizationDisabledConfirmation:
      additionalProperties: true
      description: Confirmation that the connection has been disabled.
      example:
        detail: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf has been disabled
      properties:
        detail:
          description: Connection disabled confirmation
          example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf has been disabled
          type: string
          x-konfig-original-example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf
            has been disabled
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorizationDisabledConfirmation-properties-detail
      type: object
      x-konfig-is-used-in-successful-response: true
    SessionEvent:
      additionalProperties: true
      example:
        session_event_type: OAUTH_REDIRECT
        user_id: snaptrade-user-123
        brokerage_status_code: 400
        session_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        created_date: 2022-01-21T20:11:19.217Z
        brokerage_authorization_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        session_event_type:
          enum:
          - OAUTH_REDIRECT
          - DISCLAIMER_ACCEPTED
          - BROKERAGE_CONNECTION_INITIATED
          - BROKERAGE_RECONNECT_INITIATED
          - BROKERAGE_AUTHENTICATION
          - OAUTH_BROKERAGE_AUTHENTICATION
          - MFA_REQUESTED
          - MFA_SUBMITTED
          - MFA_CHOICE_REQUESTED
          - MFA_CHOICE_SUBMITTED
          - CONNECTION_SUCCESSFUL
          - CONNECTION_FAILED
          - PARTNER_REDIRECT
          - CONNECTION_ABORTED
          - SESSION_STARTED
          type: string
        session_id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        user_id:
          description: "SnapTrade User ID. This is chosen by the API partner and can\
            \ be any string that is a) unique to the user, and b) immutable for the\
            \ user. It is recommended to NOT use email addresses for this property\
            \ because they are usually not immutable."
          example: snaptrade-user-123
          type: string
          x-konfig-original-example: snaptrade-user-123
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UserID
        created_date:
          description: Time
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time
        brokerage_status_code:
          example: 400
          nullable: true
          type: integer
          x-konfig-original-example: 400
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SessionEvent-properties-brokerage_status_code
        brokerage_authorization_id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
      type: object
    OptionBrokerageSymbol:
      additionalProperties: true
      description: "Uniquely describes a security for the option position within an\
        \ account. The distinction between this and the `option_symbol` child property\
        \ is that this object is specific to a position within an account, while the\
        \ `option_symbol` child property is universal across all brokerage accounts.\
        \ The caller should rely on the `option_symbol` child property for most use\
        \ cases."
      example:
        description: SPY CALL 7/17 200
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        option_symbol:
          ticker: AAPL  261218C00240000
          is_mini_option: false
          option_type: CALL
          underlying_symbol:
            figi_code: BBG000B9XRY4
            symbol: SPY
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: SPDR S&P 500 ETF Trust
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type: null
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          expiration_date: 2026-12-18T00:00:00.000+00:00
          strike_price: 240
      properties:
        option_symbol:
          $ref: '#/components/schemas/OptionsSymbol'
        id:
          deprecated: true
          description: "A unique ID for the security within SnapTrade, scoped to the\
            \ brokerage account that the security belongs to. This is a legacy field\
            \ and should not be used. Do not rely on this being a stable ID as it\
            \ can change."
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageSymbolID
        description:
          deprecated: true
          description: This field is deprecated and the caller should use the `option_symbol`
            child property's `description` instead.
          example: SPY CALL 7/17 200
          type: string
          x-konfig-original-example: SPY CALL 7/17 200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionBrokerageSymbol-properties-description
      type: object
    PositionSymbol:
      additionalProperties: true
      description: "Uniquely describes a security for the position within an account.\
        \ The distinction between this and the `symbol` child property is that this\
        \ object is specific to a position within an account, while the `symbol` child\
        \ property is universal across all brokerage accounts. The caller should rely\
        \ on the `symbol` child property for most use cases."
      example:
        is_quotable: true
        symbol:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        is_tradable: true
        local_id: "3291231"
        description: VANGUARD CDN AGGREGATE BOND INDEX ETF
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
      properties:
        symbol:
          $ref: '#/components/schemas/UniversalSymbol'
        id:
          deprecated: true
          description: "A unique ID for the security within SnapTrade, scoped to the\
            \ brokerage account that the security belongs to. This is a legacy field\
            \ and should not be used. Do not rely on this being a stable ID as it\
            \ can change."
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageSymbolID
        description:
          deprecated: true
          description: This field is deprecated and the caller should use the `symbol`
            child property's `description` instead.
          example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          type: string
          x-konfig-original-example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PositionSymbol-properties-description
        local_id:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          example: "3291231"
          nullable: true
          type: string
          x-konfig-original-example: "3291231"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PositionSymbol-properties-local_id
        is_quotable:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PositionSymbol-properties-is_quotable
        is_tradable:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PositionSymbol-properties-is_tradable
      type: object
    OptionChain:
      description: chain of options
      items:
        $ref: '#/components/schemas/OptionChain_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    ExchangeRatePairs:
      additionalProperties: true
      description: The exchange rate of a pair of currencies
      example:
        dst:
          code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
        exchange_rate: 1.32
        src:
          code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        src:
          $ref: '#/components/schemas/Currency'
        dst:
          $ref: '#/components/schemas/Currency'
        exchange_rate:
          example: 1.32
          type: number
          x-konfig-original-example: 1.32
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ExchangeRatePairs-properties-exchange_rate
      type: object
      x-konfig-is-used-in-successful-response: true
    Id:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
    BrokerageSymbolID:
      deprecated: true
      description: "A unique ID for the security within SnapTrade, scoped to the brokerage\
        \ account that the security belongs to. This is a legacy field and should\
        \ not be used. Do not rely on this being a stable ID as it can change."
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageSymbolID
    BrokerageOrderID:
      description: Order ID returned by brokerage. This is the unique identifier for
        the order in the brokerage system.
      example: 66a033fa-da74-4fcf-b527-feefdec9257e
      type: string
      x-konfig-original-example: 66a033fa-da74-4fcf-b527-feefdec9257e
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageOrderID
    TradeID:
      description: Unique identifier for the submitted order through SnapTrade.
      example: 139e307a-82f7-4402-b39e-4da7baa87758
      format: uuid
      type: string
      x-konfig-original-example: 139e307a-82f7-4402-b39e-4da7baa87758
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-TradeID
    UniversalSymbolID:
      description: Unique identifier for the symbol within SnapTrade. This is the
        ID used to reference the symbol in SnapTrade API calls.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
    OptionSymbolID:
      description: Unique identifier for the option symbol within SnapTrade. This
        is the ID used to reference the symbol in SnapTrade API calls.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionSymbolID
    ExchangeID:
      description: Unique ID for the exchange in SnapTrade.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ExchangeID
    SecurityTypeID:
      description: Unique identifier for the security type within SnapTrade. This
        is the ID used to reference the security type in SnapTrade API calls.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SecurityTypeID
    MonthlyDividends:
      additionalProperties: true
      example:
        date: 2022-01-24T00:00:00.000+00:00
        dividends:
        - symbol: AAPL
          amount: 6.82
          currency: CAD
        - symbol: AAPL
          amount: 6.82
          currency: CAD
      properties:
        date:
          description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
            format). These dates are inclusive.
          example: 2022-01-24
          format: date
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
        dividends:
          items:
            $ref: '#/components/schemas/DividendAtDate'
          type: array
      type: object
    NetContributions:
      additionalProperties: true
      example:
        date: 2022-01-24T00:00:00.000+00:00
        contributions: 524.74
        currency: CAD
      properties:
        date:
          description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
            format). These dates are inclusive.
          example: 2022-01-24
          format: date
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
        contributions:
          example: 524.74
          nullable: true
          type: number
          x-konfig-original-example: 524.74
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NetContributions-properties-contributions
        currency:
          example: CAD
          type: string
          x-konfig-original-example: CAD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NetContributions-properties-currency
      type: object
    NetDividend:
      additionalProperties: true
      description: Object representing total dividends received during a timeframe
      example:
        symbol:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        amount: 165.05
        currency: USD
      properties:
        symbol:
          $ref: '#/components/schemas/UniversalSymbol'
        amount:
          example: 165.05
          nullable: true
          type: number
          x-konfig-original-example: 165.05
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NetDividend-properties-amount
        currency:
          example: USD
          type: string
          x-konfig-original-example: USD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-NetDividend-properties-currency
      type: object
    PastValue:
      additionalProperties: true
      example:
        date: 2022-01-24T00:00:00.000+00:00
        currency: CAD
        value: 52.74
      properties:
        date:
          description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
            format). These dates are inclusive.
          example: 2022-01-24
          format: date
          type: string
          x-konfig-original-example: 2022-01-24
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
        value:
          example: 52.74
          type: number
          x-konfig-original-example: 52.74
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PastValue-properties-value
        currency:
          example: CAD
          type: string
          x-konfig-original-example: CAD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PastValue-properties-currency
      type: object
    PortfolioGroupID:
      deprecated: true
      description: Portfolio Group ID. Portfolio Groups have been deprecated. Please
        contact support if you have a usecase for it.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-PortfolioGroupID
    ReportingDate:
      description: Date used to specify timeframe for a reporting call (in YYYY-MM-DD
        format). These dates are inclusive.
      example: 2022-01-24
      format: date
      type: string
      x-konfig-original-example: 2022-01-24
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingDate
    ReportingFrequency:
      description: "Optional frequency for the rate of return chart (defaults to monthly).\
        \ Possible values are weekly, monthly, quarterly, yearly."
      example: monthly
      type: string
      x-konfig-original-example: monthly
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReportingFrequency
    Status:
      additionalProperties: true
      description: Status of API
      example:
        online: true
        version: 153
        timestamp: 2022-11-04T01:47:00.377Z
      properties:
        version:
          example: 153
          type: integer
          x-konfig-original-example: 153
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Status-properties-version
        timestamp:
          example: 2022-11-04T01:47:00.377Z
          type: string
          x-konfig-original-example: 2022-11-04T01:47:00.377Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Status-properties-timestamp
        online:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Status-properties-online
      type: object
      x-konfig-is-used-in-successful-response: true
    SymbolQuery:
      example:
        substring: AAPL
      properties:
        substring:
          description: The search query for symbols.
          example: AAPL
          type: string
          x-konfig-original-example: AAPL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolQuery-properties-substring
      type: object
    SyncStatusDate:
      description: Date in YYYY-MM-DD format or null
      example: 2022-01-24
      format: date
      nullable: true
      type: string
      x-konfig-original-example: 2022-01-24
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SyncStatusDate
    HoldingsSyncStatusDate:
      description: Date in ISO 8601 format or null (YYYY-MM-DD HH:MM:SS.mmmmmmTZ)
      format: date-time
      nullable: true
      type: string
      x-konfig-original-example: 2024-06-28 18:42:46.561408+00:00
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-HoldingsSyncStatusDate
    ManualTrade:
      additionalProperties: true
      description: Contains the details of a submitted order.
      example:
        symbol:
          universal_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          symbol: MVGP.U.TO
          brokerage_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          local_id: "1048101"
          description: Metaverse Global ETF
          currency:
            code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        time_in_force: null
        price: 31.33
        action: null
        id: 139e307a-82f7-4402-b39e-4da7baa87758
        units: 10.5
        order_type: Market
        account: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        id:
          description: Unique identifier for the submitted order through SnapTrade.
          example: 139e307a-82f7-4402-b39e-4da7baa87758
          format: uuid
          type: string
          x-konfig-original-example: 139e307a-82f7-4402-b39e-4da7baa87758
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TradeID
        account:
          description: Unique identifier for the connected brokerage account. This
            is the UUID used to reference the account in SnapTrade.
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        symbol:
          $ref: '#/components/schemas/ManualTradeSymbol'
        action:
          $ref: '#/components/schemas/ActionStrict'
        units:
          description: Number of shares for the order. This can be a decimal for fractional
            orders. Must be `null` if `notional_value` is provided.
          example: 10.5
          nullable: true
          type: number
          x-konfig-original-example: 10.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Units
        price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
      type: object
      x-konfig-properties:
        units:
          nullable: true
    ManualTradeImpact:
      additionalProperties: true
      example:
        remaining_cash: 1.11
        estimated_commission: 3.26
        currency: 87b24961-b51e-4db8-9226-f198f6518a89
        forex_fees: 5.26
        account: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        account:
          description: Unique identifier for the connected brokerage account. This
            is the UUID used to reference the account in SnapTrade.
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
        currency:
          description: Unique identifier for the currency. This is the UUID used to
            reference the currency in SnapTrade.
          example: 87b24961-b51e-4db8-9226-f198f6518a89
          format: uuid
          type: string
          x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CurrencyID
        remaining_cash:
          description: Estimated amount of cash remaining in the account after the
            trade.
          example: 1.11
          nullable: true
          type: number
          x-konfig-original-example: 1.11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeImpact-properties-remaining_cash
        estimated_commission:
          description: Estimated commission for the trade.
          example: 3.26
          nullable: true
          type: number
          x-konfig-original-example: 3.26
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeImpact-properties-estimated_commission
        forex_fees:
          description: Estimated foreign transaction fees for the trade.
          example: 5.26
          nullable: true
          type: number
          x-konfig-original-example: 5.26
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeImpact-properties-forex_fees
      type: object
    ManualTradeSymbol:
      additionalProperties: true
      description: Information about the security for the order.
      example:
        universal_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        symbol: MVGP.U.TO
        brokerage_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        local_id: "1048101"
        description: Metaverse Global ETF
        currency:
          code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        universal_symbol_id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        currency:
          $ref: '#/components/schemas/Currency'
        local_id:
          deprecated: true
          description: This field is deprecated and should not be used.
          example: "1048101"
          type: string
          x-konfig-original-example: "1048101"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-local_id
        description:
          deprecated: true
          description: This field is deprecated and should not be used.
          example: Metaverse Global ETF
          nullable: true
          type: string
          x-konfig-original-example: Metaverse Global ETF
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-description
        symbol:
          deprecated: true
          description: This field is deprecated and should not be used.
          example: MVGP.U.TO
          type: string
          x-konfig-original-example: MVGP.U.TO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-symbol
        brokerage_symbol_id:
          deprecated: true
          description: "A unique ID for the security within SnapTrade, scoped to the\
            \ brokerage account that the security belongs to. This is a legacy field\
            \ and should not be used. Do not rely on this being a stable ID as it\
            \ can change."
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageSymbolID
      type: object
    ManualTradeBalance:
      additionalProperties: true
      description: Estimated remaining balance of the account after the trade is executed.
      example:
        currency:
          code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
        cash: 1.11
        account:
          number: Q6542138443
          name: Robinhood Individual
          sync_status:
            holdings:
              last_successful_sync: 2000-01-23T04:56:07.000+00:00
              initial_sync_completed: true
            transactions:
              last_successful_sync: 2022-01-24T00:00:00.000+00:00
              initial_sync_completed: true
              first_transaction_date: ""
          id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        account:
          $ref: '#/components/schemas/AccountSimple'
        currency:
          $ref: '#/components/schemas/Currency'
        cash:
          description: Estimated amount of cash remaining in the account after the
            trade. At the moment this is the same as `remaining_cash` under `trade_impacts`.
          example: 1.11
          nullable: true
          type: number
          x-konfig-original-example: 1.11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeBalance-properties-cash
      type: object
    ManualTradeAndImpact:
      additionalProperties: true
      example:
        trade:
          symbol:
            universal_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            symbol: MVGP.U.TO
            brokerage_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            local_id: "1048101"
            description: Metaverse Global ETF
            currency:
              code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          time_in_force: null
          price: 31.33
          action: null
          id: 139e307a-82f7-4402-b39e-4da7baa87758
          units: 10.5
          order_type: Market
          account: 917c8734-8470-4a3e-a18f-57c3f2ee6631
        trade_impacts:
        - remaining_cash: 1.11
          estimated_commission: 3.26
          currency: 87b24961-b51e-4db8-9226-f198f6518a89
          forex_fees: 5.26
          account: 917c8734-8470-4a3e-a18f-57c3f2ee6631
        - remaining_cash: 1.11
          estimated_commission: 3.26
          currency: 87b24961-b51e-4db8-9226-f198f6518a89
          forex_fees: 5.26
          account: 917c8734-8470-4a3e-a18f-57c3f2ee6631
        combined_remaining_balance:
          currency:
            code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          cash: 1.11
          account:
            number: Q6542138443
            name: Robinhood Individual
            sync_status:
              holdings:
                last_successful_sync: 2000-01-23T04:56:07.000+00:00
                initial_sync_completed: true
              transactions:
                last_successful_sync: 2022-01-24T00:00:00.000+00:00
                initial_sync_completed: true
                first_transaction_date: ""
            id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        trade:
          $ref: '#/components/schemas/ManualTrade'
        trade_impacts:
          description: List of impacts of the trade on the account. The list always
            contains one value at the moment.
          items:
            $ref: '#/components/schemas/ManualTradeImpact'
          type: array
        combined_remaining_balance:
          $ref: '#/components/schemas/ManualTradeBalance'
      type: object
      x-konfig-is-used-in-successful-response: true
    SymbolsQuotes:
      description: List of symbols with the latest quotes from the brokerage.
      items:
        $ref: '#/components/schemas/SymbolsQuotes_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    ManualTradeForm:
      description: Inputs for placing an order with the brokerage.
      example:
        universal_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        time_in_force: null
        account_id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
        stop: 31.33
        price: 31.33
        notional_value: ""
        action: null
        units: 10.5
        order_type: Market
      properties:
        account_id:
          description: Unique identifier for the connected brokerage account. This
            is the UUID used to reference the account in SnapTrade.
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
        action:
          $ref: '#/components/schemas/ActionStrict'
        universal_symbol_id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          description: The limit price for `Limit` and `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeForm-properties-price
        stop:
          description: The price at which a stop order is triggered for `Stop` and
            `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeForm-properties-stop
        units:
          description: Number of shares for the order. This can be a decimal for fractional
            orders. Must be `null` if `notional_value` is provided.
          example: 10.5
          nullable: true
          type: number
          x-konfig-original-example: 10.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Units
        notional_value: {}
      required:
      - account_id
      - action
      - order_type
      - time_in_force
      - universal_symbol_id
      type: object
      x-konfig-properties:
        notional_value:
          nullable: true
    ManualTradeFormWithOptions:
      description: Inputs for placing an order with the brokerage.
      example:
        universal_symbol_id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        symbol: AAPL  131124C00240000
        stop_loss:
          stop_price: "48.55"
          limit_price: "48.50"
        units: ""
        time_in_force: null
        account_id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
        take_profit:
          limit_price: "49.95"
        stop: 31.33
        price: 31.33
        notional_value: ""
        action: null
        order_type: Market
        order_class: BRACKET
      properties:
        account_id:
          description: Unique identifier for the connected brokerage account. This
            is the UUID used to reference the account in SnapTrade.
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountID
        action:
          $ref: '#/components/schemas/ActionStrictWithOptions'
        universal_symbol_id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          nullable: true
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        symbol:
          description: "The security's trading ticker symbol. This currently only\
            \ support Options symbols in the 21 character OCC format. For example\
            \ \"AAPL  131124C00240000\" represents a call option on AAPL expiring\
            \ on 2024-11-13 with a strike price of $240. For more information on the\
            \ OCC format, see [here](https://en.wikipedia.org/wiki/Option_symbol#OCC_format).\
            \ If 'symbol' is provided, then 'universal_symbol_id' must be 'null'."
          example: AAPL  131124C00240000
          nullable: true
          type: string
          x-konfig-original-example: AAPL  131124C00240000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-symbol
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          description: The limit price for `Limit` and `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-price
        stop:
          description: The price at which a stop order is triggered for `Stop` and
            `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-stop
        units:
          allOf:
          - $ref: '#/components/schemas/Units'
          description: "For Equity orders, this represents the number of shares for\
            \ the order. This can be a decimal for fractional orders. Must be `null`\
            \ if `notional_value` is provided. If placing an Option order, this field\
            \ represents the number of contracts to buy or sell. (e.g., 1 contract\
            \ = 100 shares)."
          nullable: true
        notional_value: {}
        order_class:
          description: "The class of order intended to be placed. Defaults to SIMPLE\
            \ for regular, one legged trades. Set to BRACKET if looking to place a\
            \ bracket (One-triggers-a-one-cancels-the-other) order, then specify take\
            \ profit and stop loss conditions. Bracket orders currently only supported\
            \ on Alpaca, Tradier, and Tradestation, contact us for more details"
          enum:
          - SIMPLE
          - BRACKET
          example: BRACKET
          nullable: true
          type: string
          x-konfig-original-example: BRACKET
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-order_class
        stop_loss:
          $ref: '#/components/schemas/StopLossNullable'
        take_profit:
          $ref: '#/components/schemas/TakeProfitNullable'
      required:
      - account_id
      - action
      - order_type
      - time_in_force
      type: object
      x-konfig-properties:
        universal_symbol_id:
          description: "The universal symbol ID of the security to trade. Must be\
            \ 'null' if `symbol` is provided, otherwise must be provided."
          nullable: true
        units:
          description: "For Equity orders, this represents the number of shares for\
            \ the order. This can be a decimal for fractional orders. Must be `null`\
            \ if `notional_value` is provided. If placing an Option order, this field\
            \ represents the number of contracts to buy or sell. (e.g., 1 contract\
            \ = 100 shares)."
          nullable: true
        stop_loss:
          nullable: true
        take_profit:
          nullable: true
    ValidatedTradeBody:
      example:
        wait_to_confirm: true
      properties:
        wait_to_confirm:
          description: "Optional, defaults to true. Determines if a wait is performed\
            \ to check on order status. If false, latency will be reduced but orders\
            \ returned will be more likely to be of status `PENDING` as we will not\
            \ wait to check on the status before responding to the request."
          example: true
          nullable: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ValidatedTradeBody-properties-wait_to_confirm
      type: object
    OrderTypeStrict:
      description: |
        The type of order to place.

        - For `Limit` and `StopLimit` orders, the `price` field is required.
        - For `Stop` and `StopLimit` orders, the `stop` field is required.
      enum:
      - Limit
      - Market
      - StopLimit
      - Stop
      example: Market
      type: string
      x-konfig-original-example: Market
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-OrderTypeStrict
    OrderType:
      description: Order Type potential values include (but are not limited to) -
        Limit - Market - StopLimit - Stop
      nullable: true
      type: string
    TimeInForceStrict:
      description: |
        The Time in Force type for the order. This field indicates how long the order will remain active before it is executed or expires. Here are the supported values:
          - `Day` - Day. The order is valid only for the trading day on which it is placed.
          - `GTC` - Good Til Canceled. The order is valid until it is executed or canceled.
          - `FOK` - Fill Or Kill. The order must be executed in its entirety immediately or be canceled completely.
      enum:
      - FOK
      - Day
      - GTC
      type: string
    TimeInForce:
      description: |
        Trade time in force examples:
          * FOK - Fill Or Kill
          * Day - Day
          * GTC - Good Til Canceled
          * GTD - Good Til Date
      type: string
    ActionStrict:
      description: The action describes the intent or side of a trade. This is either
        `BUY` or `SELL`.
      enum:
      - BUY
      - SELL
      type: string
    ActionStrictWithOptions:
      description: "The action describes the intent or side of a trade. This is either\
        \ `BUY` or `SELL` for Equity symbols or `BUY_TO_OPEN`, `BUY_TO_CLOSE`, `SELL_TO_OPEN`\
        \ or `SELL_TO_CLOSE` for Options."
      enum:
      - BUY
      - SELL
      - BUY_TO_OPEN
      - BUY_TO_CLOSE
      - SELL_TO_OPEN
      - SELL_TO_CLOSE
      type: string
    Action:
      description: |
        The action describes the intent or side of a trade. This is usually `BUY` or `SELL` but can include other potential values like the following depending on the specific brokerage.
          - BUY
          - SELL
          - BUY_COVER
          - SELL_SHORT
          - BUY_OPEN
          - BUY_CLOSE
          - SELL_OPEN
          - SELL_CLOSE
      type: string
    Units:
      description: Number of shares for the order. This can be a decimal for fractional
        orders. Must be `null` if `notional_value` is provided.
      example: 10.5
      type: number
      x-konfig-original-example: 10.5
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Units
    Price:
      description: Trade Price if limit or stop limit order
      example: 31.33
      nullable: true
      type: number
      x-konfig-original-example: 31.33
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
    NotionalValue: {}
    StopLoss:
      additionalProperties: true
      description: "Details of the stop loss order. Only to be used when order_class\
        \ = BRACKET. stop_price is required, limit_price is optional"
      properties:
        stop_price:
          example: "48.55"
          type: string
          x-konfig-original-example: "48.55"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopLoss-properties-stop_price
        limit_price:
          example: "48.50"
          nullable: true
          type: string
          x-konfig-original-example: "48.50"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopLoss-properties-limit_price
      type: object
    TakeProfit:
      additionalProperties: true
      description: Details of the take profit order. Only to be used when order_class
        = BRACKET.
      properties:
        limit_price:
          example: "49.95"
          type: string
          x-konfig-original-example: "49.95"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TakeProfit-properties-limit_price
      type: object
    PaginationDetails:
      additionalProperties: true
      description: Details about the pagination of the results.
      example:
        offset: 0
        limit: 100
      properties:
        offset:
          description: The starting point of the paginated results.
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaginationDetails-properties-offset
        limit:
          description: The maximum number of items to return in the response.
          example: 100
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaginationDetails-properties-limit
      type: object
    PaginatedUniversalActivity:
      additionalProperties: true
      description: A paginated list of UniversalActivity objects.
      example:
        pagination:
          offset: 0
          limit: 100
        data:
        - symbol:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          amount: 263.82
          settlement_date: 2024-03-26T00:00:00Z
          option_type: BUY_TO_OPEN
          fee: 0
          description: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
          external_reference_id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          units: 5.2
          type: BUY
          trade_date: 2024-03-22T16:27:55Z
          institution: Robinhood
          price: 0.4
          currency: null
          id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          fx_rate: 1.032
          option_symbol:
            ticker: AAPL  261218C00240000
            is_mini_option: false
            option_type: CALL
            underlying_symbol:
              figi_code: BBG000B9XRY4
              symbol: SPY
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: SPDR S&P 500 ETF Trust
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type: null
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            expiration_date: 2026-12-18T00:00:00.000+00:00
            strike_price: 240
        - symbol:
            figi_code: BBG000B9XRY4
            symbol: VAB.TO
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: VANGUARD CDN AGGREGATE BOND INDEX ETF
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type:
              is_supported: true
              code: cs
              description: Common Stock
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          amount: 263.82
          settlement_date: 2024-03-26T00:00:00Z
          option_type: BUY_TO_OPEN
          fee: 0
          description: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
          external_reference_id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          units: 5.2
          type: BUY
          trade_date: 2024-03-22T16:27:55Z
          institution: Robinhood
          price: 0.4
          currency: null
          id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          fx_rate: 1.032
          option_symbol:
            ticker: AAPL  261218C00240000
            is_mini_option: false
            option_type: CALL
            underlying_symbol:
              figi_code: BBG000B9XRY4
              symbol: SPY
              figi_instrument:
                figi_code: BBG000B9Y5X2
                figi_share_class: BBG001S5N8V8
              raw_symbol: VAB
              description: SPDR S&P 500 ETF Trust
              currency: null
              exchange: null
              id: 2bcd7cc3-e922-4976-bce1-9858296801c3
              type: null
              currencies:
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
              - code: USD
                name: US Dollar
                id: 87b24961-b51e-4db8-9226-f198f6518a89
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            expiration_date: 2026-12-18T00:00:00.000+00:00
            strike_price: 240
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccountUniversalActivity'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationDetails'
      type: object
      x-konfig-is-used-in-successful-response: true
    AccountUniversalActivity:
      additionalProperties: true
      description: A transaction or activity from an institution
      example:
        symbol:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        amount: 263.82
        settlement_date: 2024-03-26T00:00:00Z
        option_type: BUY_TO_OPEN
        fee: 0
        description: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
        external_reference_id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
        units: 5.2
        type: BUY
        trade_date: 2024-03-22T16:27:55Z
        institution: Robinhood
        price: 0.4
        currency: null
        id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
        fx_rate: 1.032
        option_symbol:
          ticker: AAPL  261218C00240000
          is_mini_option: false
          option_type: CALL
          underlying_symbol:
            figi_code: BBG000B9XRY4
            symbol: SPY
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: SPDR S&P 500 ETF Trust
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type: null
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          expiration_date: 2026-12-18T00:00:00.000+00:00
          strike_price: 240
      properties:
        id:
          description: |
            Unique identifier for the transaction. This is the ID used to reference the transaction in SnapTrade.

            Please note that this ID _can_ change if the transaction is deleted and re-added. Under normal circumstances, SnapTrade does not delete transactions. The only time this would happen is if SnapTrade re-fetches and reprocesses the data from the brokerage, which is rare. If you require a stable ID, please let us know and we can work with you to provide one.
          example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          type: string
          x-konfig-original-example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-id
        symbol:
          $ref: '#/components/schemas/SymbolNullable'
        option_symbol:
          $ref: '#/components/schemas/OptionsSymbolNullable'
        price:
          description: "The price of the security for the transaction. This is mostly\
            \ applicable to `BUY`, `SELL`, and `DIVIDEND` transactions."
          example: 0.4
          type: number
          x-konfig-original-example: 0.4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-price
        units:
          description: "The number of units of the security for the transaction. This\
            \ is mostly applicable to `BUY`, `SELL`, and `DIVIDEND` transactions."
          example: 5.2
          type: number
          x-konfig-original-example: 5.2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-units
        amount:
          description: "The amount of the transaction denominated in `currency`. This\
            \ can be positive or negative. In general, transactions that positively\
            \ affect the account balance (like sell, deposits, dividends, etc) will\
            \ have a positive amount, while transactions that negatively affect the\
            \ account balance (like buy, withdrawals, fees, etc) will have a negative\
            \ amount."
          example: 263.82
          nullable: true
          type: number
          x-konfig-original-example: 263.82
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-amount
        currency:
          $ref: '#/components/schemas/AccountUniversalActivity_currency'
        type:
          description: |
            A string representing the type of transaction. SnapTrade does a best effort to categorize the brokerage transaction types into a common set of values. Here are some of the most popular values:
              - `BUY` - Asset bought.
              - `SELL` - Asset sold.
              - `DIVIDEND` - Dividend payout.
              - `CONTRIBUTION` - Cash contribution.
              - `WITHDRAWAL` - Cash withdrawal.
              - `REI` - Dividend reinvestment.
              - `INTEREST` - Interest deposited into the account.
              - `FEE` - Fee withdrawn from the account.
              - `OPTIONEXPIRATION` - Option expiration event. `option_symbol` contains the related option contract info.
              - `OPTIONASSIGNMENT` - Option assignment event. `option_symbol` contains the related option contract info.
              - `OPTIONEXERCISE` - Option exercise event. `option_symbol` contains the related option contract info.
          example: BUY
          type: string
          x-konfig-original-example: BUY
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-type
        option_type:
          description: |
            If an option `BUY` or `SELL` transaction, this further specifies the type of action. The possible values are:
            - BUY_TO_OPEN
            - BUY_TO_CLOSE
            - SELL_TO_OPEN
            - SELL_TO_CLOSE
          example: BUY_TO_OPEN
          type: string
          x-konfig-original-example: BUY_TO_OPEN
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-option_type
        description:
          description: A human-readable description of the transaction. This is usually
            the brokerage's description of the transaction.
          example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
          type: string
          x-konfig-original-example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21
            PAY 01/06/22
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-description
        trade_date:
          description: "The recorded time for the transaction. The granularity of\
            \ this timestamp depends on the brokerage. Some brokerages provide the\
            \ exact time of the transaction, while others provide only the date. Please\
            \ check the [integrations page](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=6fab8012ade6441fa0c6d9af9c55ce3a)\
            \ for the specific brokerage to see the granularity of the timestamps.\
            \ Note that even though the field is named `trade_date`, it can represent\
            \ any type of transaction, not just trades."
          example: 2024-03-22T16:27:55Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-03-22T16:27:55.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-trade_date
        settlement_date:
          description: The date on which the transaction is settled.
          example: 2024-03-26T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-03-26T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-settlement_date
        fee:
          description: Any fee associated with the transaction if provided by the
            brokerage.
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-fee
        fx_rate:
          description: "The forex conversion rate involved in the transaction if provided\
            \ by the brokerage. Used in cases where securities of one currency are\
            \ purchased in a different currency, and the forex conversion is automatic.\
            \ In those cases, price, amount and fee will be in the top level currency\
            \ (activity -> currency)"
          example: 1.032
          nullable: true
          type: number
          x-konfig-original-example: 1.032
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-fx_rate
        institution:
          description: The institution that the transaction is associated with. This
            is usually the brokerage name.
          example: Robinhood
          type: string
          x-konfig-original-example: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-institution
        external_reference_id:
          description: "Reference ID from brokerage used to identify related transactions.\
            \ For example if an order comprises of several transactions (buy, fee,\
            \ fx), they can be grouped if they share the same `external_reference_id`"
          example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          nullable: true
          type: string
          x-konfig-original-example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-external_reference_id
      type: object
      x-konfig-properties:
        symbol:
          description: "The security for the transaction. The field is `null` if the\
            \ transaction is not related to a security (like a deposit, withdrawal,\
            \ fee, etc). SnapTrade does a best effort to map the brokerage's symbol.\
            \ In cases where the brokerage symbol is not recognized, the field will\
            \ be set to `null`."
          nullable: true
        option_symbol:
          description: "The option security for the transaction. The field is `null`\
            \ if the transaction is not related to an option security (like a deposit,\
            \ withdrawal, fee, etc). SnapTrade does a best effort to map the brokerage's\
            \ option symbol. In cases where the brokerage option symbol is not recognized,\
            \ the field will be set to `null`."
          nullable: true
    UniversalActivity:
      additionalProperties: true
      description: A transaction or activity from an institution
      example:
        symbol:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        amount: 263.82
        settlement_date: 2024-03-26T00:00:00Z
        option_type: BUY_TO_OPEN
        fee: 0
        description: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
        external_reference_id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
        units: 5.2
        type: BUY
        trade_date: 2024-03-22T16:27:55Z
        institution: Robinhood
        price: 0.4
        currency: null
        id: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
        fx_rate: 1.032
        option_symbol:
          ticker: AAPL  261218C00240000
          is_mini_option: false
          option_type: CALL
          underlying_symbol:
            figi_code: BBG000B9XRY4
            symbol: SPY
            figi_instrument:
              figi_code: BBG000B9Y5X2
              figi_share_class: BBG001S5N8V8
            raw_symbol: VAB
            description: SPDR S&P 500 ETF Trust
            currency: null
            exchange: null
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
            type: null
            currencies:
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
            - code: USD
              name: US Dollar
              id: 87b24961-b51e-4db8-9226-f198f6518a89
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          expiration_date: 2026-12-18T00:00:00.000+00:00
          strike_price: 240
        account:
          number: Q6542138443
          name: Robinhood Individual
          sync_status:
            holdings:
              last_successful_sync: 2000-01-23T04:56:07.000+00:00
              initial_sync_completed: true
            transactions:
              last_successful_sync: 2022-01-24T00:00:00.000+00:00
              initial_sync_completed: true
              first_transaction_date: ""
          id: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      properties:
        id:
          description: |
            Unique identifier for the transaction. This is the ID used to reference the transaction in SnapTrade.

            Please note that this ID _can_ change if the transaction is deleted and re-added. Under normal circumstances, SnapTrade does not delete transactions. The only time this would happen is if SnapTrade re-fetches and reprocesses the data from the brokerage, which is rare. If you require a stable ID, please let us know and we can work with you to provide one.
          example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          type: string
          x-konfig-original-example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-id
        account:
          $ref: '#/components/schemas/AccountSimple'
        symbol:
          $ref: '#/components/schemas/SymbolNullable'
        option_symbol:
          $ref: '#/components/schemas/OptionsSymbolNullable'
        price:
          description: "The price of the security for the transaction. This is mostly\
            \ applicable to `BUY`, `SELL`, and `DIVIDEND` transactions."
          example: 0.4
          type: number
          x-konfig-original-example: 0.4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-price
        units:
          description: "The number of units of the security for the transaction. This\
            \ is mostly applicable to `BUY`, `SELL`, and `DIVIDEND` transactions."
          example: 5.2
          type: number
          x-konfig-original-example: 5.2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-units
        amount:
          description: "The amount of the transaction denominated in `currency`. This\
            \ can be positive or negative. In general, transactions that positively\
            \ affect the account balance (like sell, deposits, dividends, etc) will\
            \ have a positive amount, while transactions that negatively affect the\
            \ account balance (like buy, withdrawals, fees, etc) will have a negative\
            \ amount."
          example: 263.82
          nullable: true
          type: number
          x-konfig-original-example: 263.82
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-amount
        currency:
          $ref: '#/components/schemas/AccountUniversalActivity_currency'
        type:
          description: |
            A string representing the type of transaction. SnapTrade does a best effort to categorize the brokerage transaction types into a common set of values. Here are some of the most popular values:
              - `BUY` - Asset bought.
              - `SELL` - Asset sold.
              - `DIVIDEND` - Dividend payout.
              - `CONTRIBUTION` - Cash contribution.
              - `WITHDRAWAL` - Cash withdrawal.
              - `REI` - Dividend reinvestment.
              - `INTEREST` - Interest deposited into the account.
              - `FEE` - Fee withdrawn from the account.
              - `OPTIONEXPIRATION` - Option expiration event. `option_symbol` contains the related option contract info.
              - `OPTIONASSIGNMENT` - Option assignment event. `option_symbol` contains the related option contract info.
              - `OPTIONEXERCISE` - Option exercise event. `option_symbol` contains the related option contract info.
          example: BUY
          type: string
          x-konfig-original-example: BUY
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-type
        option_type:
          description: |
            If an option `BUY` or `SELL` transaction, this further specifies the type of action. The possible values are:
            - BUY_TO_OPEN
            - BUY_TO_CLOSE
            - SELL_TO_OPEN
            - SELL_TO_CLOSE
          example: BUY_TO_OPEN
          type: string
          x-konfig-original-example: BUY_TO_OPEN
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-option_type
        description:
          description: A human-readable description of the transaction. This is usually
            the brokerage's description of the transaction.
          example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
          type: string
          x-konfig-original-example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21
            PAY 01/06/22
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-description
        trade_date:
          description: "The recorded time for the transaction. The granularity of\
            \ this timestamp depends on the brokerage. Some brokerages provide the\
            \ exact time of the transaction, while others provide only the date. Please\
            \ check the [integrations page](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=6fab8012ade6441fa0c6d9af9c55ce3a)\
            \ for the specific brokerage to see the granularity of the timestamps.\
            \ Note that even though the field is named `trade_date`, it can represent\
            \ any type of transaction, not just trades."
          example: 2024-03-22T16:27:55Z
          format: date-time
          nullable: true
          type: string
          x-konfig-original-example: 2024-03-22T16:27:55.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-trade_date
        settlement_date:
          description: The date on which the transaction is settled.
          example: 2024-03-26T00:00:00Z
          format: date-time
          type: string
          x-konfig-original-example: 2024-03-26T00:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-settlement_date
        fee:
          description: Any fee associated with the transaction if provided by the
            brokerage.
          example: 0
          type: number
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-fee
        fx_rate:
          description: "The forex conversion rate involved in the transaction if provided\
            \ by the brokerage. Used in cases where securities of one currency are\
            \ purchased in a different currency, and the forex conversion is automatic.\
            \ In those cases, price, amount and fee will be in the top level currency\
            \ (activity -> currency)"
          example: 1.032
          nullable: true
          type: number
          x-konfig-original-example: 1.032
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-fx_rate
        institution:
          description: The institution that the transaction is associated with. This
            is usually the brokerage name.
          example: Robinhood
          type: string
          x-konfig-original-example: Robinhood
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-institution
        external_reference_id:
          description: "Reference ID from brokerage used to identify related transactions.\
            \ For example if an order comprises of several transactions (buy, fee,\
            \ fx), they can be grouped if they share the same `external_reference_id`"
          example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          nullable: true
          type: string
          x-konfig-original-example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalActivity-properties-external_reference_id
      type: object
    FigiInstrument:
      additionalProperties: true
      description: "Financial Instrument Global Identifier (FIGI) information for\
        \ the security. See [OpenFIGI](https://www.openfigi.com/) for more information."
      properties:
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information."
          example: BBG000B9Y5X2
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9Y5X2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_code
        figi_share_class:
          description: "This enables users to link multiple FIGIs for the same security\
            \ in order to obtain an aggregated view across all countries and all exchanges.\
            \ For example, `AAPL` has a different FIGI for each exchange/trading venue\
            \ it is traded on. The `figi_share_class` is the same for all of these\
            \ FIGIs. See section 1.4.3 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information."
          example: BBG001S5N8V8
          nullable: true
          type: string
          x-konfig-original-example: BBG001S5N8V8
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_share_class
      type: object
    UniversalSymbol:
      additionalProperties: true
      description: Uniquely describes a single security + exchange combination across
        all brokerages.
      example:
        figi_code: BBG000B9XRY4
        symbol: VAB.TO
        figi_instrument:
          figi_code: BBG000B9Y5X2
          figi_share_class: BBG001S5N8V8
        raw_symbol: VAB
        description: VANGUARD CDN AGGREGATE BOND INDEX ETF
        currency: null
        exchange: null
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        type:
          is_supported: true
          code: cs
          description: Common Stock
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        currencies:
        - code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
        - code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        symbol:
          description: "The security's trading ticker symbol. For example \"AAPL\"\
            \ for Apple Inc. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click\
            \ on \"Yahoo Finance Market Coverage and Data Delays\"). For example,\
            \ for securities traded on the Toronto Stock Exchange, the symbol has\
            \ a '.TO' suffix. For securities traded on NASDAQ or NYSE, the symbol\
            \ does not have a suffix."
          example: VAB.TO
          type: string
          x-konfig-original-example: VAB.TO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbol-properties-symbol
        raw_symbol:
          description: "The raw symbol is `symbol` with the exchange suffix removed.\
            \ For example, if `symbol` is \"VAB.TO\", then `raw_symbol` is \"VAB\"\
            ."
          example: VAB
          type: string
          x-konfig-original-example: VAB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbol-properties-raw_symbol
        description:
          description: A human-readable description of the security. This is usually
            the company name or ETF name.
          example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          nullable: true
          type: string
          x-konfig-original-example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbol-properties-description
        currency:
          $ref: '#/components/schemas/Symbol_currency'
        exchange:
          $ref: '#/components/schemas/Symbol_exchange'
        type:
          $ref: '#/components/schemas/SecurityType'
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information. This value should be the same as the `figi_code`\
            \ in the `figi_instrument` child property."
          example: BBG000B9XRY4
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9XRY4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbol-properties-figi_code
        figi_instrument:
          $ref: '#/components/schemas/FigiInstrumentNullable'
        currencies:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      required:
      - currencies
      - currency
      - id
      - raw_symbol
      - symbol
      - type
      type: object
      x-konfig-is-used-in-successful-response: true
    UnderlyingSymbol:
      additionalProperties: true
      description: Symbol object for the underlying security of an option.
      example:
        figi_code: BBG000B9XRY4
        symbol: SPY
        figi_instrument:
          figi_code: BBG000B9Y5X2
          figi_share_class: BBG001S5N8V8
        raw_symbol: VAB
        description: SPDR S&P 500 ETF Trust
        currency: null
        exchange: null
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        type: null
        currencies:
        - code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
        - code: USD
          name: US Dollar
          id: 87b24961-b51e-4db8-9226-f198f6518a89
      properties:
        id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        symbol:
          description: "The security's trading ticker symbol. For example \"AAPL\"\
            \ for Apple Inc. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click\
            \ on \"Yahoo Finance Market Coverage and Data Delays\"). For example,\
            \ for securities traded on the Toronto Stock Exchange, the symbol has\
            \ a '.TO' suffix. For securities traded on NASDAQ or NYSE, the symbol\
            \ does not have a suffix."
          example: SPY
          type: string
          x-konfig-original-example: SPY
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-symbol
        raw_symbol:
          description: "The raw symbol is `symbol` with the exchange suffix removed.\
            \ For example, if `symbol` is \"VAB.TO\", then `raw_symbol` is \"VAB\"\
            ."
          example: VAB
          type: string
          x-konfig-original-example: VAB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-raw_symbol
        description:
          description: A human-readable description of the security. This is usually
            the company name or ETF name.
          example: SPDR S&P 500 ETF Trust
          nullable: true
          type: string
          x-konfig-original-example: SPDR S&P 500 ETF Trust
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-description
        currency:
          $ref: '#/components/schemas/Symbol_currency'
        exchange:
          $ref: '#/components/schemas/UnderlyingSymbol_exchange'
        type:
          $ref: '#/components/schemas/UnderlyingSymbol_type'
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information. This value should be the same as the `figi_code`\
            \ in the `figi_instrument` child property."
          example: BBG000B9XRY4
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9XRY4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-figi_code
        figi_instrument:
          $ref: '#/components/schemas/FigiInstrumentNullable'
        currencies:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          items:
            $ref: '#/components/schemas/Currency'
          type: array
      type: object
    OptionsSymbol:
      additionalProperties: true
      description: Uniquely describes an option security + exchange combination across
        all brokerages.
      example:
        ticker: AAPL  261218C00240000
        is_mini_option: false
        option_type: CALL
        underlying_symbol:
          figi_code: BBG000B9XRY4
          symbol: SPY
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: SPDR S&P 500 ETF Trust
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type: null
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        expiration_date: 2026-12-18T00:00:00.000+00:00
        strike_price: 240
      properties:
        id:
          description: Unique identifier for the option symbol within SnapTrade. This
            is the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionSymbolID
        ticker:
          description: "The [OCC symbol](https://en.wikipedia.org/wiki/Option_symbol)\
            \ for the option."
          example: AAPL  261218C00240000
          type: string
          x-konfig-original-example: AAPL  261218C00240000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-ticker
        option_type:
          description: The type of option. Either "CALL" or "PUT".
          enum:
          - CALL
          - PUT
          example: CALL
          type: string
          x-konfig-original-example: CALL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-option_type
        strike_price:
          description: The option strike price.
          example: 240
          type: number
          x-konfig-original-example: 240
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-strike_price
        expiration_date:
          description: The option expiration date.
          example: 2026-12-18
          format: date
          type: string
          x-konfig-original-example: 2026-12-18
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-expiration_date
        is_mini_option:
          description: Whether the option is a mini option. Mini options have 10 underlying
            shares per contract instead of the standard 100.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-is_mini_option
        underlying_symbol:
          $ref: '#/components/schemas/UnderlyingSymbol'
      required:
      - expiration_date
      - id
      - option_type
      - strike_price
      - ticker
      - underlying_symbol
      type: object
    OptionLeg:
      additionalProperties: true
      description: Option Leg
      properties:
        action:
          enum:
          - BUY_TO_OPEN
          - BUY_TO_CLOSE
          - SELL_TO_OPEN
          - SELL_TO_CLOSE
          type: string
        option_symbol_id:
          description: Obtained from calling options chain endpoint (option_id)
          example: SPY220819P00200000
          type: string
          x-konfig-original-example: SPY220819P00200000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionLeg-properties-option_symbol_id
        quantity:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionLeg-properties-quantity
      type: object
    SecurityType:
      additionalProperties: true
      description: "The type of security. For example, \"Common Stock\" or \"ETF\"\
        ."
      example:
        is_supported: true
        code: cs
        description: Common Stock
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
      properties:
        id:
          description: Unique identifier for the security type within SnapTrade. This
            is the ID used to reference the security type in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SecurityTypeID
        code:
          description: |
            A short code representing the security type. For example, "cs" for Common Stock. Here are some common values:
              - `ad` - ADR
              - `bnd` - Bond
              - `cs` - Common Stock
              - `cef` - Closed End Fund
              - `crypto` - Cryptocurrency
              - `et` - ETF
              - `oef` - Open Ended Fund
              - `ps` - Preferred Stock
              - `rt` - Right
              - `struct` - Structured Product
              - `ut` - Unit
              - `wi` - When Issued
              - `wt` - Warrant
          example: cs
          type: string
          x-konfig-original-example: cs
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SecurityType-properties-code
        description:
          description: "A human-readable description of the security type. For example,\
            \ \"Common Stock\" or \"ETF\"."
          example: Common Stock
          type: string
          x-konfig-original-example: Common Stock
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SecurityType-properties-description
        is_supported:
          deprecated: true
          description: This field is deprecated and should not be used. Please reach
            out to SnapTrade support if you have a valid usecase for this.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SecurityType-properties-is_supported
      type: object
    Time:
      description: Time
      example: 2022-01-21T20:11:19.217Z
      type: string
      x-konfig-original-example: 2022-01-21T20:11:19.217Z
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time
    BrokerageType:
      additionalProperties: true
      description: Type of brokerage. Currently supports traditional brokerages and
        crypto exchanges.
      example:
        name: Traditional Brokerage
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        name:
          example: Traditional Brokerage
          type: string
          x-konfig-original-example: Traditional Brokerage
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageType-properties-name
      type: object
    encryptedResponse:
      additionalProperties: false
      description: |
        This response consists of 2 different components that must be decrypted to obtain the decrypted message

        * Decrypting the encryptedSharedKey

          The encrypted shared key is a shared key that was randomly generated by SnapTrade and encrypted using the users SSH public key provided when registering the user
          It is needed to decrypt the message in step 2.

          To decrypt the shared key, the user should have access to their SSH private key stored locally in their device

          An example Python code on how to decrypt the shared key is shown below

          ```
          def decrypt_rsa_message(self, encrypted_message):
              from Crypto.Cipher import PKCS1_OAEP
              from Crypto.PublicKey import RSA
              from base64 import b64decode

              f = open('private.pem', 'r')
              private_key = RSA.import_key(f.read())
              cipher = PKCS1_OAEP.new(private_key)

              return cipher.decrypt(b64decode(encrypted_message.encode())).decode()
          ```

        * Decrypting the encryptedMessageData

           The data meant to be returned by an endpoint can be obtained by decrypting the encrypted message

           An encrypted message is a message that is encrypted using AES - MODE OCB with the shared key obtained in step one

          An example code to decrypt the encrypted message is shown below

          ```
          def decrypt_aes_message(self, shared_key, encrypted_message):
              from Crypto.Cipher import AES
              from base64 import b64decode

              encrypted_msg = b64decode(encrypted_message["encryptedMessage"].encode())
              tag = b64decode(encrypted_message["tag"].encode())
              nonce = b64decode(encrypted_message["nonce"].encode())
              cipher = AES.new(shared_key.encode(), AES.MODE_OCB, nonce=nonce)

              return cipher.decrypt_and_verify(encrypted_msg, tag).decode()
          ```
      properties:
        encryptedSharedKey:
          example: 5UEaY9QGzcNTr8y2jGDUI79jY1OdfK9x
          type: string
          x-konfig-original-example: 5UEaY9QGzcNTr8y2jGDUI79jY1OdfK9x
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedSharedKey
        encryptedMessageData:
          $ref: '#/components/schemas/encryptedResponse_encryptedMessageData'
      type: object
    konfig-generated-schema-paths--holdings-get-parameters-2-schema:
      example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--accounts-accountId-orders-get-parameters-3-schema:
      example: 30
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--accounts-accountId-activities-get-parameters-5-schema:
      example: "BUY,SELL,DIVIDEND"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--activities-get-parameters-4-schema:
      example: "BUY,SELL,DIVIDEND"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--performance-custom-get-parameters-3-schema:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-paths--brokerageAuthorizationTypes-get-parameters-0-schema:
      example: "QUESTRADE,ALPACA"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TransactionsStatus-properties-initial_sync_completed:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-HoldingsStatus-properties-initial_sync_completed:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountBalance-properties-total-properties-amount:
      example: 15363.23
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountBalance-properties-total-properties-currency:
      example: USD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-name:
      example: Robinhood Individual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-number:
      example: Q6542138443
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-institution_name:
      example: Robinhood
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-created_date:
      example: 2024-07-23T22:50:22.761Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-meta:
      additionalProperties: true
      example:
        type: Margin
        status: ACTIVE
        institution_name: Robinhood
      properties:
        type:
          example: Margin
          type: string
        status:
          example: ACTIVE
          type: string
        institution_name:
          example: Robinhood
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-cash_restrictions:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Account-properties-raw_type:
      example: Margin
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountSimple-properties-name:
      example: Robinhood Individual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountSimple-properties-number:
      example: Q6542138443
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountID:
      example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountIDs:
      example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthID:
      example: 87b24961-b51e-4db8-9226-f198f6518a89
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthIDs:
      example: "917c8734-8470-4a3e-a18f-57c3f2ee6631,65e839a3-9103-4cfb-9b72-2071ef80c5f2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RateOfReturnObject-properties-timeframe:
      example: ALL
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RateOfReturnObject-properties-return_percent:
      example: 5.97
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-RateOfReturnObject-properties-created_date:
      example: 2024-07-30T22:51:49.746Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-total_quantity:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-open_quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-canceled_quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-filled_quantity:
      example: 80
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-execution_price:
      example: 12.34
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-limit_price:
      example: 12.34
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-stop_price:
      example: 12.5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-order_type:
      example: Market
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_placed:
      example: 2024-07-30T22:51:49.746Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_updated:
      example: 2024-08-05T00:05:57.409Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-time_executed:
      example: 2024-08-05T00:05:57.409Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountOrderRecord-properties-expiry_date:
      example: 2024-08-05T00:05:57.409Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsPosition-properties-price:
      example: 38.4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsPosition-properties-units:
      example: -50
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsPosition-properties-average_purchase_price:
      example: 4126
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-strategy_type:
      example: BUTTERFLY
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-number_of_legs:
      example: 2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-option_symbol_id:
      example: AAPLC20221111
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-index:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-action:
      example: BUY_TO_OPEN
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-volatility:
      example: 0.141
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-delta:
      example: 0.1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-gamma:
      example: 0.1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-theta:
      example: 0.1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-vega:
      example: 0.1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-rho:
      example: 0.1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-filled_quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-open_quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StrategyOrderRecord-properties-closed_quantity:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-name:
      example: Registered Retirement Savings Account
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-number:
      example: Q6542138443
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-institution_name:
      example: Alpaca
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsAccount-properties-meta:
      additionalProperties: true
      example:
        type: Margin
        status: ACTIVE
        institution_name: Alpaca
      properties:
        type:
          example: Margin
          type: string
        status:
          example: ACTIVE
          type: string
        institution_name:
          example: Alpaca
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsTotalValue-properties-value:
      example: 32600.71
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeHoldingsTotalValue-properties-currency:
      example: USD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Balance-properties-cash:
      example: 300.71
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Balance-properties-buying_power:
      example: 410.71
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CurrencyID:
      example: 87b24961-b51e-4db8-9226-f198f6518a89
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Currency-properties-code:
      example: USD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Currency-properties-name:
      example: US Dollar
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-code:
      example: TSX
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-mic_code:
      example: XTSE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-name:
      example: Toronto Stock Exchange
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-timezone:
      example: America/New_York
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-start_time:
      example: 09:30:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-close_time:
      example: "57600"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Exchange-properties-suffix:
      example: .TO
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-code:
      example: ARCX
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-mic_code:
      example: ARCA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-name:
      example: NYSE ARCA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-timezone:
      example: America/New_York
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-start_time:
      example: 09:30:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-close_time:
      example: "57600"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-suffix:
      example: None
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-USExchange-properties-allows_cryptocurrency_symbols:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LoginRedirectURI-properties-redirectURI:
      example: https://app.snaptrade.com/snapTrade/redeemToken?token=npVKchZrL0MYIHTusGfADT74r4xXpHkmbxbQDmt0RINLXbQ5cWsvGkPSgMQRxz8/cnxjzL9T2NWLuHuDyidHiCNeXXTb/tVhzC2olSyfxWW6DRrkUppArGCdmkIHyBMzog6C55P8yoqzcGer5Hml0Q%3D%3D&clientId=WEALTHLY&broker=ROBINHOOD&connectionPortalVersion=v4&sessionId=cf371bb4-a475-4f17-ab94-d0fee699960d
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LoginRedirectURI-properties-sessionId:
      example: cf371bb4-a475-4f17-ab94-d0fee699960d
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ClientID:
      example: SNAPTRADETEST
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserID:
      example: snaptrade-user-123
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserSecret:
      example: adf2aa34-8219-40f7-a6b3-60156985cc61
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionStreak:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionMonthsContributed:
      example: 10
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-contributionTotalMonths:
      example: 13
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-dividendIncome:
      example: 135.97
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-monthlyDividends:
      example: 26.37
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-badTickers-items:
      example: MAW105
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-commissions:
      example: 3.26
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-forexFees:
      example: 5.26
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-fees:
      example: 2.72
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PerformanceCustom-properties-rateOfReturn:
      example: 0.082312367452
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SubPeriodReturnRate-properties-rateOfReturn:
      example: 0.012312367452
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DividendAtDate-properties-symbol:
      example: AAPL
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DividendAtDate-properties-amount:
      example: 6.82
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DividendAtDate-properties-currency:
      example: CAD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-slug:
      example: WEALTHLY
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-name:
      example: Wealthly
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-logo_url:
      example: https://example.com/logo.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_trades:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_holdings:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_account_history:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_reference_data:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_portfolio_management:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-can_access_orders:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-redirect_uri:
      example: https://example.com/oauth/snaptrade
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PartnerData-properties-pin_required:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Position-properties-units:
      example: 40
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Position-properties-price:
      example: 113.15
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Position-properties-open_pnl:
      example: 0.44
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Position-properties-average_purchase_price:
      example: 108.3353
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Position-properties-fractional_units:
      example: 1.44
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-broker:
      example: ALPACA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-immediateRedirect:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-customRedirect:
      example: https://snaptrade.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-reconnect:
      example: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionType:
      example: read
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionPortalVersion:
      example: v4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Symbol-properties-symbol:
      example: VAB.TO
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Symbol-properties-raw_symbol:
      example: VAB
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Symbol-properties-description:
      example: VANGUARD CDN AGGREGATE BOND INDEX ETF
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Symbol-properties-figi_code:
      example: BBG000B9XRY4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UserList:
      example:
      - user1
      - user2
      - user3
      items:
        example: user1
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DeleteUserResponse-properties-status:
      example: deleted
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-DeleteUserResponse-properties-detail:
      example: User queued for deletion; please wait for webhook for confirmation.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorizationTypeReadOnly-properties-brokerage-properties-name:
      example: Questrade
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorizationTypeReadOnly-properties-brokerage-properties-slug:
      example: QUESTRADE
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-id:
      example: ebf91a5b-0920-4266-9e36-f6cfe8c40946
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-slug:
      example: ROBINHOOD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-name:
      example: Robinhood
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-display_name:
      example: Robinhood
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-description:
      example: "Robinhood is an American multinational financial services corporation\
        \ based in Menlo Park, California."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-aws_s3_logo_url:
      example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-aws_s3_square_logo_url:
      example: https://passiv-brokerage-logos.s3.ca-central-1.amazonaws.com/robinhood-logo-square.png
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-url:
      example: https://robinhood.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-enabled:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-maintenance_mode:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-allows_trading:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-allows_fractional_units:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-has_reporting:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-is_real_time_connection:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Brokerage-properties-exchanges:
      example:
      - 2bcd7cc3-e922-4976-bce1-9858296801c3
      - 4bcd8cc3-c122-4974-dc21-1858296801f4
      items:
        example: 2bcd7cc3-e922-4976-bce1-9858296801c3
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-created_date:
      example: 2024-08-20T21:56:19.123Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-name:
      example: Connection-1
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-type:
      example: trade
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-disabled:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-disabled_date:
      example: 2022-01-21T20:11:19.217Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-meta:
      additionalProperties: true
      example:
        identifier: 123456
      properties:
        identifier:
          example: 123456
          type: number
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorization-properties-updated_date:
      example: 2024-08-20T21:56:20.057Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorizationRefreshConfirmation-properties-detail:
      example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf scheduled for refresh
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageAuthorizationDisabledConfirmation-properties-detail:
      example: Connection 0b3ebefb-ed47-43df-cd8f-729a4420b5cf has been disabled
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SessionEvent-properties-brokerage_status_code:
      example: 400
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionBrokerageSymbol-properties-description:
      example: SPY CALL 7/17 200
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PositionSymbol-properties-description:
      example: VANGUARD CDN AGGREGATE BOND INDEX ETF
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PositionSymbol-properties-local_id:
      example: "3291231"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PositionSymbol-properties-is_quotable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PositionSymbol-properties-is_tradable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-expiryDate:
      example: 2022-07-08T04:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-description:
      example: APPLE INC
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-listingExchange:
      example: OPRA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-optionExerciseType:
      example: American
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-optionRoot:
      example: AAPL
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-strikePrice
    : example: 70
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-callSymbolId
    : example: 42816081
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-putSymbolId
    : example: 42816129
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-multiplier:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ExchangeRatePairs-properties-exchange_rate:
      example: 1.32
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Id:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageSymbolID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageOrderID:
      example: 66a033fa-da74-4fcf-b527-feefdec9257e
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TradeID:
      example: 139e307a-82f7-4402-b39e-4da7baa87758
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalSymbolID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionSymbolID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ExchangeID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SecurityTypeID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NetContributions-properties-contributions:
      example: 524.74
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NetContributions-properties-currency:
      example: CAD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NetDividend-properties-amount:
      example: 165.05
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-NetDividend-properties-currency:
      example: USD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PastValue-properties-value:
      example: 52.74
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PastValue-properties-currency:
      example: CAD
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PortfolioGroupID:
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReportingDate:
      example: 2022-01-24
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReportingFrequency:
      example: monthly
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Status-properties-version:
      example: 153
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Status-properties-timestamp:
      example: 2022-11-04T01:47:00.377Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Status-properties-online:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolQuery-properties-substring:
      example: AAPL
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SyncStatusDate:
      example: 2022-01-24
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-HoldingsSyncStatusDate:
      example: 2024-06-28 18:42:46.561408+00:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeImpact-properties-remaining_cash:
      example: 1.11
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeImpact-properties-estimated_commission:
      example: 3.26
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeImpact-properties-forex_fees:
      example: 5.26
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-local_id:
      example: "1048101"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-description:
      example: Metaverse Global ETF
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeSymbol-properties-symbol:
      example: MVGP.U.TO
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeBalance-properties-cash:
      example: 1.11
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-last_trade_price:
      example: 8.74
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-bid_price:
      example: 8.43
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-ask_price:
      example: 8.43
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-bid_size:
      example: 260
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-ask_size:
      example: 344
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeForm-properties-price:
      example: 31.33
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeForm-properties-stop:
      example: 31.33
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-symbol:
      example: AAPL  131124C00240000
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-price:
      example: 31.33
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-stop:
      example: 31.33
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-order_class:
      example: BRACKET
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ValidatedTradeBody-properties-wait_to_confirm:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OrderTypeStrict:
      example: Market
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Units:
      example: 10.5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Price:
      example: 31.33
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StopLoss-properties-stop_price:
      example: "48.55"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StopLoss-properties-limit_price:
      example: "48.50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TakeProfit-properties-limit_price:
      example: "49.95"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaginationDetails-properties-offset:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaginationDetails-properties-limit:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-id:
      example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-price:
      example: 0.4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-units:
      example: 5.2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-amount:
      example: 263.82
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-type:
      example: BUY
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-option_type:
      example: BUY_TO_OPEN
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-description:
      example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-trade_date:
      example: 2024-03-22T16:27:55.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-settlement_date:
      example: 2024-03-26T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-fee:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-fx_rate:
      example: 1.032
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-institution:
      example: Robinhood
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-AccountUniversalActivity-properties-external_reference_id:
      example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-id:
      example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-price:
      example: 0.4
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-units:
      example: 5.2
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-amount:
      example: 263.82
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-type:
      example: BUY
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-option_type:
      example: BUY_TO_OPEN
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-description:
      example: WALT DISNEY UNIT DIST ON 21 SHS REC 12/31/21 PAY 01/06/22
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-trade_date:
      example: 2024-03-22T16:27:55.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-settlement_date:
      example: 2024-03-26T00:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-fee:
      example: 0
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-fx_rate:
      example: 1.032
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-institution:
      example: Robinhood
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalActivity-properties-external_reference_id:
      example: 2f7dc9b3-5c33-4668-3440-2b31e056ebe6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_code:
      example: BBG000B9Y5X2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_share_class:
      example: BBG001S5N8V8
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalSymbol-properties-symbol:
      example: VAB.TO
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalSymbol-properties-raw_symbol:
      example: VAB
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalSymbol-properties-description:
      example: VANGUARD CDN AGGREGATE BOND INDEX ETF
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UniversalSymbol-properties-figi_code:
      example: BBG000B9XRY4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-symbol:
      example: SPY
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-raw_symbol:
      example: VAB
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-description:
      example: SPDR S&P 500 ETF Trust
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UnderlyingSymbol-properties-figi_code:
      example: BBG000B9XRY4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsSymbol-properties-ticker:
      example: AAPL  261218C00240000
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsSymbol-properties-option_type:
      example: CALL
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsSymbol-properties-strike_price:
      example: 240
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsSymbol-properties-expiration_date:
      example: 2026-12-18
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionsSymbol-properties-is_mini_option:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionLeg-properties-option_symbol_id:
      example: SPY220819P00200000
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-OptionLeg-properties-quantity:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SecurityType-properties-code:
      example: cs
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SecurityType-properties-description:
      example: Common Stock
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-SecurityType-properties-is_supported:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time:
      example: 2022-01-21T20:11:19.217Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BrokerageType-properties-name:
      example: Traditional Brokerage
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhookBase-properties-webookId:
      example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhookBase-properties-clientId:
      example: WEALTHYCHIPMUNK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp:
      example: 2022-01-21T20:11:19.217Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-WebhookBase-properties-userId:
      example: external_user@test.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedSharedKey:
      example: 5UEaY9QGzcNTr8y2jGDUI79jY1OdfK9x
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-encryptedMessage:
      example: 9Xy05vqZOfp0OpW5fLAaDw==
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-tag:
      example: mWZPkpQh5ktbcz6N7cTRmQ==
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-nonce:
      example: None
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--snapTrade-registerUser:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--snapTrade-login:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        broker:
          description: "Slug of the brokerage to connect the user to. See [the integrations\
            \ page](https://snaptrade.notion.site/66793431ad0b416489eaabaf248d0afb?v=3cfea70ef4254afc89704e47275a7a9a&pvs=4)\
            \ for a list of supported brokerages and their slugs."
          example: ALPACA
          type: string
          x-konfig-original-example: ALPACA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-broker
        immediateRedirect:
          description: "When set to `true`, user will be redirected back to the partner's\
            \ site instead of the connection portal. This parameter is ignored if\
            \ the connection portal is loaded inside an iframe. See the [guide on\
            \ ways to integrate the connection portal](/docs/implement-connection-portal)\
            \ for more information."
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-immediateRedirect
        customRedirect:
          description: "URL to redirect the user to after the user connects their\
            \ brokerage account. This parameter is ignored if the connection portal\
            \ is loaded inside an iframe. See the [guide on ways to integrate the\
            \ connection portal](/docs/implement-connection-portal) for more information."
          example: https://snaptrade.com
          type: string
          x-konfig-original-example: https://snaptrade.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-customRedirect
        reconnect:
          description: "The UUID of the brokerage connection to be reconnected. This\
            \ parameter should be left empty unless you are reconnecting a disabled\
            \ connection. See the [guide on fixing broken connections](/docs/fix-broken-connections)\
            \ for more information."
          example: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
          type: string
          x-konfig-original-example: 8b5f262d-4bb9-365d-888a-202bd3b15fa1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-reconnect
        connectionType:
          default: read
          description: Sets whether the connection should be read-only or trade-enabled.
            Defaults to read-only if not specified.
          enum:
          - read
          - trade
          example: read
          type: string
          x-konfig-original-example: read
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionType
        connectionPortalVersion:
          default: v4
          description: Sets the connection portal version to render. Currently only
            v4 is supported and is the default. All other versions are deprecated
            and will automatically be set to v4.
          enum:
          - v4
          - v3
          - v2
          example: v4
          type: string
          x-konfig-original-example: v4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SnapTradeLoginUserRequestBody-properties-connectionPortalVersion
      required:
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--snapTrade-listUsers:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--snapTrade-deleteUser:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--snapTrade-resetUserSecret:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId-returnRates:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        authorizationId:
          $ref: '#/components/schemas/BrokerageAuthID'
      required:
      - authorizationId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - authorizationId
    konfig-generated-schema-single-parameter-schema-get--authorizations:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-delete--authorizations-authorizationId:
      additionalProperties: true
      properties:
        authorizationId:
          $ref: '#/components/schemas/BrokerageAuthID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - authorizationId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId:
      additionalProperties: true
      properties:
        authorizationId:
          $ref: '#/components/schemas/BrokerageAuthID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - authorizationId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-post--authorizations-authorizationId-refresh:
      additionalProperties: true
      properties:
        authorizationId:
          $ref: '#/components/schemas/BrokerageAuthID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - authorizationId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-post--authorizations-authorizationId-disable:
      additionalProperties: true
      properties:
        authorizationId:
          $ref: '#/components/schemas/BrokerageAuthID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - authorizationId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--sessionEvents:
      additionalProperties: true
      properties:
        PartnerClientId:
          $ref: '#/components/schemas/ClientID'
        userId:
          $ref: '#/components/schemas/AccountIDs'
        sessionId:
          $ref: '#/components/schemas/AccountIDs'
      required:
      - PartnerClientId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - PartnerClientId
      - userId
      - sessionId
    konfig-generated-schema-single-parameter-schema-get--accounts:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--holdings:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        brokerage_authorizations:
          example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          format: uuid
          type: string
          x-konfig-original-example: 917c8734-8470-4a3e-a18f-57c3f2ee6631
          x-konfig-generated-schema: konfig-generated-schema-paths--holdings-get-parameters-2-schema
      required:
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - brokerage_authorizations
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-holdings:
      additionalProperties: true
      properties:
        accountId:
          $ref: '#/components/schemas/AccountID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-put--accounts-accountId:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          format: uuid
          type: string
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-balances:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-positions:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-orders:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        state:
          enum:
          - all
          - open
          - executed
          type: string
        days:
          example: 30
          format: int32
          minimum: 1
          type: integer
          x-konfig-original-example: 30
          x-konfig-generated-schema: konfig-generated-schema-paths--accounts-accountId-orders-get-parameters-3-schema
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - state
      - days
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-recentOrders:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        only_executed:
          type: boolean
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - only_executed
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-returnRates:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-activities:
      additionalProperties: true
      properties:
        accountId:
          $ref: '#/components/schemas/AccountID'
        startDate:
          $ref: '#/components/schemas/ReportingDate'
        endDate:
          $ref: '#/components/schemas/ReportingDate'
        offset:
          format: int32
          minimum: 0
          type: integer
        limit:
          format: int32
          minimum: 1
          type: integer
        type:
          example: "BUY,SELL,DIVIDEND"
          type: string
          x-konfig-original-example: "BUY,SELL,DIVIDEND"
          x-konfig-generated-schema: konfig-generated-schema-paths--accounts-accountId-activities-get-parameters-5-schema
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
      - startDate
      - endDate
      - offset
      - limit
      - type
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-options:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-optionsChain:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          format: uuid
          type: string
        symbol:
          format: uuid
          type: string
      required:
      - accountId
      - symbol
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
      - symbol
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-optionStrategy:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          format: uuid
          type: string
        underlying_symbol_id:
          $ref: '#/components/schemas/Id'
        legs:
          items:
            $ref: '#/components/schemas/OptionLeg'
          type: array
        strategy_type:
          enum:
          - CUSTOM
          type: string
      required:
      - accountId
      - legs
      - strategy_type
      - underlying_symbol_id
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-optionStrategy-optionStrategyId:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          format: uuid
          type: string
        optionStrategyId:
          $ref: '#/components/schemas/Id'
      required:
      - accountId
      - optionStrategyId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
      - optionStrategyId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-optionStrategy-optionStrategyId-execute:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/Id'
        optionStrategyId:
          $ref: '#/components/schemas/Id'
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          $ref: '#/components/schemas/Price'
      required:
      - accountId
      - optionStrategyId
      - order_type
      - time_in_force
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
      - optionStrategyId
    konfig-generated-schema-single-parameter-schema-get--activities:
      additionalProperties: true
      properties:
        startDate:
          $ref: '#/components/schemas/ReportingDate'
        endDate:
          $ref: '#/components/schemas/ReportingDate'
        accounts:
          $ref: '#/components/schemas/AccountIDs'
        brokerageAuthorizations:
          $ref: '#/components/schemas/BrokerageAuthIDs'
        type:
          example: "BUY,SELL,DIVIDEND"
          type: string
          x-konfig-original-example: "BUY,SELL,DIVIDEND"
          x-konfig-generated-schema: konfig-generated-schema-paths--activities-get-parameters-4-schema
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - startDate
      - endDate
      - accounts
      - brokerageAuthorizations
      - type
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--performance-custom:
      additionalProperties: true
      properties:
        startDate:
          $ref: '#/components/schemas/ReportingDate'
        endDate:
          $ref: '#/components/schemas/ReportingDate'
        accounts:
          $ref: '#/components/schemas/AccountIDs'
        detailed:
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-paths--performance-custom-get-parameters-3-schema
        frequency:
          $ref: '#/components/schemas/ReportingFrequency'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
      required:
      - endDate
      - startDate
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - startDate
      - endDate
      - accounts
      - detailed
      - frequency
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-quotes:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        symbols:
          type: string
        use_ticker:
          type: boolean
        accountId:
          $ref: '#/components/schemas/AccountID'
      required:
      - accountId
      - symbols
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - symbols
      - use_ticker
      - accountId
    konfig-generated-schema-single-parameter-schema-post--trade-impact:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        account_id:
          $ref: '#/components/schemas/AccountID'
        action:
          $ref: '#/components/schemas/ActionStrict'
        universal_symbol_id:
          $ref: '#/components/schemas/UniversalSymbolID'
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          description: The limit price for `Limit` and `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeForm-properties-price
        stop:
          description: The price at which a stop order is triggered for `Stop` and
            `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeForm-properties-stop
        units:
          $ref: '#/components/schemas/UnitsNullable'
        notional_value:
          $ref: '#/components/schemas/NotionalValueNullable'
      required:
      - account_id
      - action
      - order_type
      - time_in_force
      - universal_symbol_id
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-post--trade-tradeId:
      additionalProperties: true
      properties:
        tradeId:
          $ref: '#/components/schemas/TradeID'
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        wait_to_confirm:
          description: "Optional, defaults to true. Determines if a wait is performed\
            \ to check on order status. If false, latency will be reduced but orders\
            \ returned will be more likely to be of status `PENDING` as we will not\
            \ wait to check on the status before responding to the request."
          example: true
          nullable: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ValidatedTradeBody-properties-wait_to_confirm
      required:
      - tradeId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - tradeId
      - userId
      - userSecret
    konfig-generated-schema-single-parameter-schema-post--trade-place:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        account_id:
          $ref: '#/components/schemas/AccountID'
        action:
          $ref: '#/components/schemas/ActionStrictWithOptions'
        universal_symbol_id:
          $ref: '#/components/schemas/UniversalSymbolIDNullable'
        symbol:
          description: "The security's trading ticker symbol. This currently only\
            \ support Options symbols in the 21 character OCC format. For example\
            \ \"AAPL  131124C00240000\" represents a call option on AAPL expiring\
            \ on 2024-11-13 with a strike price of $240. For more information on the\
            \ OCC format, see [here](https://en.wikipedia.org/wiki/Option_symbol#OCC_format).\
            \ If 'symbol' is provided, then 'universal_symbol_id' must be 'null'."
          example: AAPL  131124C00240000
          nullable: true
          type: string
          x-konfig-original-example: AAPL  131124C00240000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-symbol
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          description: The limit price for `Limit` and `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-price
        stop:
          description: The price at which a stop order is triggered for `Stop` and
            `StopLimit` orders.
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-stop
        units:
          allOf:
          - $ref: '#/components/schemas/Units'
          description: "For Equity orders, this represents the number of shares for\
            \ the order. This can be a decimal for fractional orders. Must be `null`\
            \ if `notional_value` is provided. If placing an Option order, this field\
            \ represents the number of contracts to buy or sell. (e.g., 1 contract\
            \ = 100 shares)."
          nullable: true
        notional_value:
          $ref: '#/components/schemas/NotionalValueNullable'
        order_class:
          description: "The class of order intended to be placed. Defaults to SIMPLE\
            \ for regular, one legged trades. Set to BRACKET if looking to place a\
            \ bracket (One-triggers-a-one-cancels-the-other) order, then specify take\
            \ profit and stop loss conditions. Bracket orders currently only supported\
            \ on Alpaca, Tradier, and Tradestation, contact us for more details"
          enum:
          - SIMPLE
          - BRACKET
          example: BRACKET
          nullable: true
          type: string
          x-konfig-original-example: BRACKET
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ManualTradeFormWithOptions-properties-order_class
        stop_loss:
          $ref: '#/components/schemas/StopLossNullable'
        take_profit:
          $ref: '#/components/schemas/TakeProfitNullable'
      required:
      - account_id
      - action
      - order_type
      - time_in_force
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      x-konfig-properties:
        units:
          description: "For Equity orders, this represents the number of shares for\
            \ the order. This can be a decimal for fractional orders. Must be `null`\
            \ if `notional_value` is provided. If placing an Option order, this field\
            \ represents the number of contracts to buy or sell. (e.g., 1 contract\
            \ = 100 shares)."
          nullable: true
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-orders-cancel:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
        brokerage_order_id:
          $ref: '#/components/schemas/BrokerageOrderID'
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--snapTrade-partners:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-symbols:
      additionalProperties: true
      properties:
        userId:
          $ref: '#/components/schemas/UserID'
        userSecret:
          $ref: '#/components/schemas/UserSecret'
        accountId:
          $ref: '#/components/schemas/AccountID'
        substring:
          description: The search query for symbols.
          example: AAPL
          type: string
          x-konfig-original-example: AAPL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolQuery-properties-substring
      required:
      - accountId
      - userId
      - userSecret
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - userSecret
      - accountId
    konfig-generated-schema-single-parameter-schema-get--brokerages:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--brokerageAuthorizationTypes:
      additionalProperties: true
      properties:
        brokerage:
          example: "QUESTRADE,ALPACA"
          type: string
          x-konfig-original-example: "QUESTRADE,ALPACA"
          x-konfig-generated-schema: konfig-generated-schema-paths--brokerageAuthorizationTypes-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - brokerage
    konfig-generated-schema-single-parameter-schema-get--currencies:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--currencies-rates:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--currencies-rates-currencyPair:
      additionalProperties: true
      properties:
        currencyPair:
          type: string
      required:
      - currencyPair
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - currencyPair
    konfig-generated-schema-single-parameter-schema-get--exchanges:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--securityTypes:
      additionalProperties: true
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--symbols:
      additionalProperties: true
      properties:
        substring:
          description: The search query for symbols.
          example: AAPL
          type: string
          x-konfig-original-example: AAPL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolQuery-properties-substring
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--symbols-query:
      additionalProperties: true
      properties:
        query:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
    konfig-generated-schema-single-parameter-schema-post--connectionAdded:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--connectionDeleted:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--userRegistered:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--userDeleted:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--accountAdded:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--accountDeleted:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--transactionsUpdated:
      additionalProperties: true
      properties:
        webookId:
          example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          type: string
          x-konfig-original-example: 06fe1fd7-fc50-43a7-b564-8a2c5f3bab44
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-webookId
        clientId:
          example: WEALTHYCHIPMUNK
          type: string
          x-konfig-original-example: WEALTHYCHIPMUNK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-clientId
        eventTimestamp:
          example: 2022-01-21T20:11:19.217Z
          type: string
          x-konfig-original-example: 2022-01-21T20:11:19.217Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-eventTimestamp
        userId:
          example: external_user@test.com
          type: string
          x-konfig-original-example: external_user@test.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-WebhookBase-properties-userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    SyncStatusDateNullable:
      description: Date in YYYY-MM-DD format or null
      example: 2022-01-24
      format: date
      nullable: true
      type: string
      x-konfig-original-example: 2022-01-24
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-SyncStatusDate
    HoldingsSyncStatusDateNullable:
      description: Date in ISO 8601 format or null (YYYY-MM-DD HH:MM:SS.mmmmmmTZ)
      format: date-time
      nullable: true
      type: string
      x-konfig-original-example: 2024-06-28 18:42:46.561408+00:00
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-HoldingsSyncStatusDate
    CurrencyNullable:
      additionalProperties: true
      description: Describes a currency object.
      example:
        code: USD
        name: US Dollar
        id: 87b24961-b51e-4db8-9226-f198f6518a89
      nullable: true
      properties:
        id:
          description: Unique identifier for the currency. This is the UUID used to
            reference the currency in SnapTrade.
          example: 87b24961-b51e-4db8-9226-f198f6518a89
          format: uuid
          type: string
          x-konfig-original-example: 87b24961-b51e-4db8-9226-f198f6518a89
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CurrencyID
        code:
          description: The ISO-4217 currency code for the currency.
          example: USD
          type: string
          x-konfig-original-example: USD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Currency-properties-code
        name:
          description: A human-friendly name of the currency.
          example: US Dollar
          type: string
          x-konfig-original-example: US Dollar
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Currency-properties-name
      type: object
    FigiInstrumentNullable:
      additionalProperties: true
      description: "Financial Instrument Global Identifier (FIGI) information for\
        \ the security. See [OpenFIGI](https://www.openfigi.com/) for more information."
      example:
        figi_code: BBG000B9Y5X2
        figi_share_class: BBG001S5N8V8
      nullable: true
      properties:
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information."
          example: BBG000B9Y5X2
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9Y5X2
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_code
        figi_share_class:
          description: "This enables users to link multiple FIGIs for the same security\
            \ in order to obtain an aggregated view across all countries and all exchanges.\
            \ For example, `AAPL` has a different FIGI for each exchange/trading venue\
            \ it is traded on. The `figi_share_class` is the same for all of these\
            \ FIGIs. See section 1.4.3 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information."
          example: BBG001S5N8V8
          nullable: true
          type: string
          x-konfig-original-example: BBG001S5N8V8
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-FigiInstrument-properties-figi_share_class
      type: object
    UnitsNullable:
      description: Number of shares for the order. This can be a decimal for fractional
        orders. Must be `null` if `notional_value` is provided.
      example: 10.5
      nullable: true
      type: number
      x-konfig-original-example: 10.5
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Units
    NotionalValueNullable: {}
    UniversalSymbolIDNullable:
      description: Unique identifier for the symbol within SnapTrade. This is the
        ID used to reference the symbol in SnapTrade API calls.
      example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      format: uuid
      nullable: true
      type: string
      x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
    StopLossNullable:
      additionalProperties: true
      description: "Details of the stop loss order. Only to be used when order_class\
        \ = BRACKET. stop_price is required, limit_price is optional"
      example:
        stop_price: "48.55"
        limit_price: "48.50"
      nullable: true
      properties:
        stop_price:
          example: "48.55"
          type: string
          x-konfig-original-example: "48.55"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopLoss-properties-stop_price
        limit_price:
          example: "48.50"
          nullable: true
          type: string
          x-konfig-original-example: "48.50"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopLoss-properties-limit_price
      type: object
    TakeProfitNullable:
      additionalProperties: true
      description: Details of the take profit order. Only to be used when order_class
        = BRACKET.
      example:
        limit_price: "49.95"
      nullable: true
      properties:
        limit_price:
          example: "49.95"
          type: string
          x-konfig-original-example: "49.95"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TakeProfit-properties-limit_price
      type: object
    SymbolNullable:
      additionalProperties: true
      description: Uniquely describes a single security + exchange combination across
        all brokerages.
      example:
        figi_code: BBG000B9XRY4
        symbol: VAB.TO
        figi_instrument:
          figi_code: BBG000B9Y5X2
          figi_share_class: BBG001S5N8V8
        raw_symbol: VAB
        description: VANGUARD CDN AGGREGATE BOND INDEX ETF
        currency: null
        exchange: null
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        type:
          is_supported: true
          code: cs
          description: Common Stock
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
      nullable: true
      properties:
        id:
          description: Unique identifier for the symbol within SnapTrade. This is
            the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UniversalSymbolID
        symbol:
          description: "The security's trading ticker symbol. For example \"AAPL\"\
            \ for Apple Inc. We largely follow the [Yahoo Finance ticker format](https://help.yahoo.com/kb/SLN2310.html)(click\
            \ on \"Yahoo Finance Market Coverage and Data Delays\"). For example,\
            \ for securities traded on the Toronto Stock Exchange, the symbol has\
            \ a '.TO' suffix. For securities traded on NASDAQ or NYSE, the symbol\
            \ does not have a suffix."
          example: VAB.TO
          type: string
          x-konfig-original-example: VAB.TO
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-symbol
        raw_symbol:
          description: "The raw symbol is `symbol` with the exchange suffix removed.\
            \ For example, if `symbol` is \"VAB.TO\", then `raw_symbol` is \"VAB\"\
            ."
          example: VAB
          type: string
          x-konfig-original-example: VAB
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-raw_symbol
        description:
          description: A human-readable description of the security. This is usually
            the company name or ETF name.
          example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          nullable: true
          type: string
          x-konfig-original-example: VANGUARD CDN AGGREGATE BOND INDEX ETF
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-description
        currency:
          $ref: '#/components/schemas/Symbol_currency'
        exchange:
          $ref: '#/components/schemas/Symbol_exchange'
        type:
          $ref: '#/components/schemas/SecurityType'
        figi_code:
          description: "This identifier is unique per security per trading venue.\
            \ See section 1.4.1 of the [FIGI Standard](https://www.openfigi.com/assets/local/figi-allocation-rules.pdf)\
            \ for more information. This value should be the same as the `figi_code`\
            \ in the `figi_instrument` child property."
          example: BBG000B9XRY4
          nullable: true
          type: string
          x-konfig-original-example: BBG000B9XRY4
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Symbol-properties-figi_code
        figi_instrument:
          $ref: '#/components/schemas/FigiInstrumentNullable'
      type: object
      x-konfig-properties:
        figi_instrument:
          nullable: true
    OptionsSymbolNullable:
      additionalProperties: true
      description: Uniquely describes an option security + exchange combination across
        all brokerages.
      example:
        ticker: AAPL  261218C00240000
        is_mini_option: false
        option_type: CALL
        underlying_symbol:
          figi_code: BBG000B9XRY4
          symbol: SPY
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: SPDR S&P 500 ETF Trust
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type: null
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        expiration_date: 2026-12-18T00:00:00.000+00:00
        strike_price: 240
      nullable: true
      properties:
        id:
          description: Unique identifier for the option symbol within SnapTrade. This
            is the ID used to reference the symbol in SnapTrade API calls.
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionSymbolID
        ticker:
          description: "The [OCC symbol](https://en.wikipedia.org/wiki/Option_symbol)\
            \ for the option."
          example: AAPL  261218C00240000
          type: string
          x-konfig-original-example: AAPL  261218C00240000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-ticker
        option_type:
          description: The type of option. Either "CALL" or "PUT".
          enum:
          - CALL
          - PUT
          example: CALL
          type: string
          x-konfig-original-example: CALL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-option_type
        strike_price:
          description: The option strike price.
          example: 240
          type: number
          x-konfig-original-example: 240
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-strike_price
        expiration_date:
          description: The option expiration date.
          example: 2026-12-18
          format: date
          type: string
          x-konfig-original-example: 2026-12-18
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-expiration_date
        is_mini_option:
          description: Whether the option is a mini option. Mini options have 10 underlying
            shares per contract instead of the standard 100.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionsSymbol-properties-is_mini_option
        underlying_symbol:
          $ref: '#/components/schemas/UnderlyingSymbol'
      required:
      - expiration_date
      - id
      - option_type
      - strike_price
      - ticker
      - underlying_symbol
      type: object
    Options_getOptionStrategy_request:
      properties:
        underlying_symbol_id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        legs:
          items:
            $ref: '#/components/schemas/OptionLeg'
          type: array
        strategy_type:
          enum:
          - CUSTOM
          type: string
      required:
      - legs
      - strategy_type
      - underlying_symbol_id
      type: object
    Options_placeOptionStrategy_request:
      properties:
        order_type:
          $ref: '#/components/schemas/OrderTypeStrict'
        time_in_force:
          $ref: '#/components/schemas/TimeInForceStrict'
        price:
          description: Trade Price if limit or stop limit order
          example: 31.33
          nullable: true
          type: number
          x-konfig-original-example: 31.33
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Price
      required:
      - order_type
      - time_in_force
      type: object
    Trading_cancelUserAccountOrder_request:
      properties:
        brokerage_order_id:
          description: Order ID returned by brokerage. This is the unique identifier
            for the order in the brokerage system.
          example: 66a033fa-da74-4fcf-b527-feefdec9257e
          type: string
          x-konfig-original-example: 66a033fa-da74-4fcf-b527-feefdec9257e
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageOrderID
      type: object
    AccountBalance_total:
      description: "Total market value of this account (includes cash, equity, fixed\
        \ income, etc). This value is directly obtained from the brokerage and should\
        \ reflect the most accurate value of the account."
      example:
        amount: 15363.23
        currency: USD
      nullable: true
      properties:
        amount:
          description: Total value denominated in the currency of the `currency` field.
          example: 15363.23
          type: number
          x-konfig-original-example: 15363.23
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountBalance-properties-total-properties-amount
        currency:
          description: The ISO-4217 currency code for the amount.
          example: USD
          type: string
          x-konfig-original-example: USD
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-AccountBalance-properties-total-properties-currency
    AccountOrderRecord_universal_symbol:
      allOf:
      - $ref: '#/components/schemas/UniversalSymbol'
      description: "Contains information about the security that the order is for.\
        \ This field is only present for stock/ETF/crypto/mutual fund orders. For\
        \ option orders, this field will be null and the `option_symbol` field will\
        \ be populated."
    AccountOrderRecord_option_symbol:
      allOf:
      - $ref: '#/components/schemas/OptionsSymbol'
      description: "Contains information about the option contract that the order\
        \ is for. This field is only present for option orders. For stock/ETF/crypto/mutual\
        \ fund orders, this field will be null and the `universal_symbol` field will\
        \ be populated."
    OptionStrategy_legs_inner:
      example:
        quantity: 10
        index: 1
        action: BUY_TO_OPEN
        option_symbol_id: AAPLC20221111
      properties:
        option_symbol_id:
          example: AAPLC20221111
          type: string
          x-konfig-original-example: AAPLC20221111
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-option_symbol_id
        index:
          example: 1
          type: number
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-index
        action:
          example: BUY_TO_OPEN
          type: string
          x-konfig-original-example: BUY_TO_OPEN
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-action
        quantity:
          example: 10
          type: number
          x-konfig-original-example: 10
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionStrategy-properties-legs-items-properties-quantity
    StrategyQuotes_greek:
      additionalProperties: true
      example:
        delta: 0.1
        rho: 0.1
        theta: 0.1
        gamma: 0.1
        vega: 0.1
      properties:
        delta:
          example: 0.1
          type: number
          x-konfig-original-example: 0.1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-delta
        gamma:
          example: 0.1
          type: number
          x-konfig-original-example: 0.1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-gamma
        theta:
          example: 0.1
          type: number
          x-konfig-original-example: 0.1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-theta
        vega:
          example: 0.1
          type: number
          x-konfig-original-example: 0.1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-vega
        rho:
          example: 0.1
          type: number
          x-konfig-original-example: 0.1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StrategyQuotes-properties-greek-properties-rho
      type: object
    Balance_currency:
      allOf:
      - $ref: '#/components/schemas/Currency'
      description: The currency of the balance. This applies to both `cash` and `buying_power`.
    Symbol_currency:
      allOf:
      - $ref: '#/components/schemas/Currency'
      description: The currency in which the security is traded.
    Symbol_exchange:
      allOf:
      - $ref: '#/components/schemas/Exchange'
      description: The exchange on which the security is listed and traded.
    BrokerageAuthorizationTypeReadOnly_brokerage:
      additionalProperties: true
      example:
        name: Questrade
        id: 2bcd7cc3-e922-4976-bce1-9858296801c3
        slug: QUESTRADE
      properties:
        id:
          example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          format: uuid
          type: string
          x-konfig-original-example: 2bcd7cc3-e922-4976-bce1-9858296801c3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Id
        name:
          description: Full name of the brokerage.
          example: Questrade
          type: string
          x-konfig-original-example: Questrade
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorizationTypeReadOnly-properties-brokerage-properties-name
        slug:
          description: A unique identifier for that brokerage. It is usually the name
            of the brokerage in capital letters and will never change.
          example: QUESTRADE
          type: string
          x-konfig-original-example: QUESTRADE
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BrokerageAuthorizationTypeReadOnly-properties-brokerage-properties-slug
      type: object
    OptionChain_inner_chainPerRoot_inner_chainPerStrikePrice_inner:
      additionalProperties: true
      example:
        callSymbolId: 42816081
        putSymbolId: 42816129
        strikePrice: 70
      properties:
        strikePrice:
          example: 70
          format: int32
          nullable: true
          type: integer
          x-konfig-original-example: 70
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-strikePrice
        callSymbolId:
          example: 42816081
          format: int32
          nullable: true
          type: integer
          x-konfig-original-example: 42816081
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-callSymbolId
        putSymbolId:
          example: 42816129
          format: int32
          nullable: true
          type: integer
          x-konfig-original-example: 42816129
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-chainPerStrikePrice-items-properties-putSymbolId
      type: object
    OptionChain_inner_chainPerRoot_inner:
      additionalProperties: true
      example:
        chainPerStrikePrice:
        - callSymbolId: 42816081
          putSymbolId: 42816129
          strikePrice: 70
        - callSymbolId: 42816081
          putSymbolId: 42816129
          strikePrice: 70
        multiplier: 100
        optionRoot: AAPL
      properties:
        optionRoot:
          example: AAPL
          type: string
          x-konfig-original-example: AAPL
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-optionRoot
        chainPerStrikePrice:
          items:
            $ref: '#/components/schemas/OptionChain_inner_chainPerRoot_inner_chainPerStrikePrice_inner'
          type: array
        multiplier:
          example: 100
          format: int32
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-chainPerRoot-items-properties-multiplier
      type: object
    OptionChain_inner:
      additionalProperties: true
      example:
        expiryDate: 2022-07-08T04:00:00.000Z
        chainPerRoot:
        - chainPerStrikePrice:
          - callSymbolId: 42816081
            putSymbolId: 42816129
            strikePrice: 70
          - callSymbolId: 42816081
            putSymbolId: 42816129
            strikePrice: 70
          multiplier: 100
          optionRoot: AAPL
        - chainPerStrikePrice:
          - callSymbolId: 42816081
            putSymbolId: 42816129
            strikePrice: 70
          - callSymbolId: 42816081
            putSymbolId: 42816129
            strikePrice: 70
          multiplier: 100
          optionRoot: AAPL
        optionExerciseType: American
        description: APPLE INC
        listingExchange: OPRA
      properties:
        expiryDate:
          example: 2022-07-08T04:00:00.000Z
          type: string
          x-konfig-original-example: 2022-07-08T04:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-expiryDate
        description:
          example: APPLE INC
          type: string
          x-konfig-original-example: APPLE INC
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-description
        listingExchange:
          example: OPRA
          type: string
          x-konfig-original-example: OPRA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-listingExchange
        optionExerciseType:
          example: American
          type: string
          x-konfig-original-example: American
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-OptionChain-items-properties-optionExerciseType
        chainPerRoot:
          items:
            $ref: '#/components/schemas/OptionChain_inner_chainPerRoot_inner'
          type: array
      type: object
    SymbolsQuotes_inner:
      example:
        symbol:
          figi_code: BBG000B9XRY4
          symbol: VAB.TO
          figi_instrument:
            figi_code: BBG000B9Y5X2
            figi_share_class: BBG001S5N8V8
          raw_symbol: VAB
          description: VANGUARD CDN AGGREGATE BOND INDEX ETF
          currency: null
          exchange: null
          id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          type:
            is_supported: true
            code: cs
            description: Common Stock
            id: 2bcd7cc3-e922-4976-bce1-9858296801c3
          currencies:
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
          - code: USD
            name: US Dollar
            id: 87b24961-b51e-4db8-9226-f198f6518a89
        last_trade_price: 8.74
        ask_size: 344
        bid_size: 260
        bid_price: 8.43
        ask_price: 8.43
      properties:
        symbol:
          $ref: '#/components/schemas/UniversalSymbol'
        last_trade_price:
          description: The most recent trade price from the brokerage.
          example: 8.74
          type: number
          x-konfig-original-example: 8.74
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-last_trade_price
        bid_price:
          description: The most recent bid price from the brokerage.
          example: 8.43
          type: number
          x-konfig-original-example: 8.43
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-bid_price
        ask_price:
          description: The most recent price from the brokerage.
          example: 8.43
          type: number
          x-konfig-original-example: 8.43
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-ask_price
        bid_size:
          description: The most recent bid size from the brokerage.
          example: 260
          type: number
          x-konfig-original-example: 260
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-bid_size
        ask_size:
          description: The most recent ask size from the brokerage.
          example: 344
          type: number
          x-konfig-original-example: 344
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-SymbolsQuotes-items-properties-ask_size
    AccountUniversalActivity_currency:
      allOf:
      - $ref: '#/components/schemas/Currency'
      description: The currency in which the transaction `price` and `amount` is denominated.
    UnderlyingSymbol_exchange:
      allOf:
      - $ref: '#/components/schemas/USExchange'
      description: The exchange on which the security is listed and traded.
    UnderlyingSymbol_type:
      allOf:
      - $ref: '#/components/schemas/SecurityType'
      description: "The type of security. For example, \"Common Stock\" or \"ETF\"\
        ."
    encryptedResponse_encryptedMessageData:
      additionalProperties: true
      properties:
        encryptedMessage:
          example: 9Xy05vqZOfp0OpW5fLAaDw==
          type: string
          x-konfig-original-example: 9Xy05vqZOfp0OpW5fLAaDw==
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-encryptedMessage
        tag:
          example: mWZPkpQh5ktbcz6N7cTRmQ==
          type: string
          x-konfig-original-example: mWZPkpQh5ktbcz6N7cTRmQ==
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-tag
        nonce:
          example: None
          type: string
          x-konfig-original-example: None
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-encryptedResponse-properties-encryptedMessageData-properties-nonce
      type: object
  securitySchemes:
    PartnerSignature:
      in: header
      name: Signature
      type: apiKey
    PartnerClientId:
      in: query
      name: clientId
      type: apiKey
    PartnerTimestamp:
      in: query
      name: timestamp
      type: apiKey

