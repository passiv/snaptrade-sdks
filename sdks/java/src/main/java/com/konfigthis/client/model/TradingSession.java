/*
 * SnapTrade
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The trading session for the order. This field indicates which market session the order will be placed in. This is only available for certain brokerages. Defaults to REGULAR. Here are the supported values:   - &#x60;REGULAR&#x60; - Regular trading hours.   - &#x60;EXTENDED&#x60; - Extended trading hours. 
 */
@JsonAdapter(TradingSession.Adapter.class)public enum TradingSession {
  
  REGULAR("REGULAR"),
  
  EXTENDED("EXTENDED");

  private String value;

  TradingSession(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TradingSession fromValue(String value) {
    for (TradingSession b : TradingSession.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TradingSession> {
    @Override
    public void write(final JsonWriter jsonWriter, final TradingSession enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TradingSession read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TradingSession.fromValue(value);
    }
  }
}

