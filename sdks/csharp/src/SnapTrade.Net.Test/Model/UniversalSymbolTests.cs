/*
 * SnapTrade
 *
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 * Generated by: https://konfigthis.com
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SnapTrade.Net.Api;
using SnapTrade.Net.Model;
using SnapTrade.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SnapTrade.Net.Test.Model
{
    /// <summary>
    ///  Class for testing UniversalSymbol
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UniversalSymbolTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UniversalSymbol
        //private UniversalSymbol instance;

        public UniversalSymbolTests()
        {
            // TODO uncomment below to create an instance of UniversalSymbol
            //instance = new UniversalSymbol();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UniversalSymbol
        /// </summary>
        [Fact]
        public void UniversalSymbolInstanceTest()
        {
            // TODO uncomment below to test "IsType" UniversalSymbol
            //Assert.IsType<UniversalSymbol>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Symbol'
        /// </summary>
        [Fact]
        public void SymbolTest()
        {
            // TODO unit test for the property 'Symbol'
        }
        /// <summary>
        /// Test the property 'RawSymbol'
        /// </summary>
        [Fact]
        public void RawSymbolTest()
        {
            // TODO unit test for the property 'RawSymbol'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'Exchange'
        /// </summary>
        [Fact]
        public void ExchangeTest()
        {
            // TODO unit test for the property 'Exchange'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'FigiCode'
        /// </summary>
        [Fact]
        public void FigiCodeTest()
        {
            // TODO unit test for the property 'FigiCode'
        }
        /// <summary>
        /// Test the property 'FigiInstrument'
        /// </summary>
        [Fact]
        public void FigiInstrumentTest()
        {
            // TODO unit test for the property 'FigiInstrument'
        }
        /// <summary>
        /// Test the property 'Currencies'
        /// </summary>
        [Fact]
        public void CurrenciesTest()
        {
            // TODO unit test for the property 'Currencies'
        }

    }

}
