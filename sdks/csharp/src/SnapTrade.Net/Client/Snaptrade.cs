/*
 * SnapTrade
 *
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 * Generated by: https://konfigthis.com
 */


using SnapTrade.Net.Api;

namespace SnapTrade.Net.Client
{
    /// <summary>
    ///  SDK client
    /// </summary>
    public class Snaptrade
    {
        /// <summary>
        /// API instance
        /// </summary>
        public virtual AccountInformationApi AccountInformation { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual APIStatusApi APIStatus { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual AuthenticationApi Authentication { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual ConnectionsApi Connections { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual OptionsApi Options { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual ReferenceDataApi ReferenceData { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual TradingApi Trading { get; set; }

        /// <summary>
        /// API instance
        /// </summary>
        public virtual TransactionsAndReportingApi TransactionsAndReporting { get; set; }

        /// <summary>
        /// Configuration instance
        /// </summary>
        public readonly Configuration Configuration;

        /// <summary>
        /// Constructor
        /// </summary>
        public Snaptrade()
        {
            Configuration = new Configuration();
            init();
        }

        private void init()
        {
            AccountInformation = new AccountInformationApi(Configuration);
            APIStatus = new APIStatusApi(Configuration);
            Authentication = new AuthenticationApi(Configuration);
            Connections = new ConnectionsApi(Configuration);
            Options = new OptionsApi(Configuration);
            ReferenceData = new ReferenceDataApi(Configuration);
            Trading = new TradingApi(Configuration);
            TransactionsAndReporting = new TransactionsAndReportingApi(Configuration);
        }

        /// <summary>
        /// Setter for base path
        /// </summary>
        public Snaptrade SetBasePath(string basePath)
        {
            Configuration.BasePath = basePath;
            init();
            return this;
        }

        /// <summary>
        /// Setter for verify SSL configuration. Set to false when you want to disable SSL verification.
        /// </summary>
        public Snaptrade SetVerifySsl(bool verifySsl)
        {
            Configuration.VerifySsl = verifySsl;
            init();
            return this;
        }

        /// <summary>
        /// Setter for Access Token
        /// </summary>
        public Snaptrade SetAccessToken(string accessToken)
        {
            Configuration.AccessToken = accessToken;
            init();
            return this;
        }

        /// <summary>
        /// Setter for API Key
        /// </summary>
        public Snaptrade SetClientId(string apiKey)
        {
            Configuration.ApiKey["clientId"] = apiKey;
            init();
            return this;
        }

        /// <summary>
        /// Setter for "ConsumerKey" client state
        /// </summary>
        public Snaptrade SetConsumerKey(string consumerKey)
        {
            Configuration.ConsumerKey = consumerKey;
            init();
            return this;
        }
    }
}
